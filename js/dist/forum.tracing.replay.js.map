{"version":3,"file":"forum.tracing.replay.js","mappings":"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","sources":["webpack://@fof/sentry/../../src/node.ts","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/harmony module decorator","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/debug-build.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../src/baggage.ts","webpack://@fof/sentry/../../src/tracing.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@fof/sentry/../../src/semanticAttributes.ts","webpack://@fof/sentry/../../../src/tracing/spanstatus.ts","webpack://@fof/sentry/../../../src/tracing/span.ts","webpack://@fof/sentry/../../../src/utils/hasTracingEnabled.ts","webpack://@fof/sentry/../../../src/tracing/trace.ts","webpack://@fof/sentry/../../../src/tracing/transaction.ts","webpack://@fof/sentry/../../../src/tracing/idletransaction.ts","webpack://@fof/sentry/../../../src/tracing/utils.ts","webpack://@fof/sentry/../../../src/tracing/errors.ts","webpack://@fof/sentry/../../../src/tracing/sampling.ts","webpack://@fof/sentry/../../../src/tracing/hubextensions.ts","webpack://@fof/sentry/../../../src/common/debug-build.ts","webpack://@fof/sentry/../../../../../../src/browser/web-vitals/lib/polyfills/interactionCountPolyfill.ts","webpack://@fof/sentry/../../../src/browser/types.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/bindReporter.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getActivationStart.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/initMetric.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/generateUniqueID.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/observe.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/onHidden.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getINP.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getLCP.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/onTTFB.ts","webpack://@fof/sentry/../../../src/browser/instrument.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getCLS.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getFID.ts","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/../../src/span.ts","webpack://@fof/sentry/../../../../src/browser/metrics/utils.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@fof/sentry/../../../../src/browser/metrics/index.ts","webpack://@fof/sentry/../../../src/browser/request.ts","webpack://@fof/sentry/../../../src/common/fetch.ts","webpack://@fof/sentry/../../../src/browser/browsertracing.ts","webpack://@fof/sentry/../../../src/browser/router.ts","webpack://@fof/sentry/../../../src/browser/backgroundtab.ts","webpack://@fof/sentry/../../../src/tracing/measurement.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@fof/sentry/../../../src/buildPolyfills/_optionalChain.ts","webpack://@fof/sentry/../../../src/utils/isSentryRequestUrl.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../src/isBrowser.ts","webpack://@fof/sentry/../../../src/constants.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","webpack://@fof/sentry/../../../src/buildPolyfills/_nullishCoalesce.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","webpack://@fof/sentry/../../../src/coreHandlers/util/onWindowOpen.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","webpack://@fof/sentry/../../../src/util/timestamp.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addBreadcrumbEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/domUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleClick.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../src/util/createBreadcrumb.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/getAttributesToRecord.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleDom.ts","webpack://@fof/sentry/../../../src/util/createPerformanceEntries.ts","webpack://@fof/sentry/../../../src/coreHandlers/performanceObserver.ts","webpack://@fof/sentry/../../../src/debug-build.ts","webpack://@fof/sentry/../../../src/eventBuffer/error.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferArray.ts","webpack://@fof/sentry/../../../src/eventBuffer/WorkerHandler.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferCompressionWorker.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferProxy.ts","webpack://@fof/sentry/../../../src/util/hasSessionStorage.ts","webpack://@fof/sentry/../../../src/util/isSampled.ts","webpack://@fof/sentry/../../../src/session/Session.ts","webpack://@fof/sentry/../../../src/session/saveSession.ts","webpack://@fof/sentry/../../../src/session/createSession.ts","webpack://@fof/sentry/../../../src/util/isExpired.ts","webpack://@fof/sentry/../../../src/util/isSessionExpired.ts","webpack://@fof/sentry/../../../src/session/shouldRefreshSession.ts","webpack://@fof/sentry/../../../src/session/loadOrCreateSession.ts","webpack://@fof/sentry/../../../src/session/fetchSession.ts","webpack://@fof/sentry/../../../src/util/addEvent.ts","webpack://@fof/sentry/../../../src/util/eventUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleAfterSendEvent.ts","webpack://@fof/sentry/../../../src/util/createPerformanceSpans.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/shouldFilterRequest.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/networkUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/fetchUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/xhrUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleFetch.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleXhr.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleScope.ts","webpack://@fof/sentry/../../../src/util/addGlobalListeners.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleHistory.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleGlobalEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/isRrwebError.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleBeforeSendEvent.ts","webpack://@fof/sentry/../../../src/util/addMemoryEntry.ts","webpack://@fof/sentry/../../../src/util/handleRecordingEmit.ts","webpack://@fof/sentry/../../../src/types/rrweb.ts","webpack://@fof/sentry/../../../src/util/createReplayEnvelope.ts","webpack://@fof/sentry/../../../src/util/prepareRecordingData.ts","webpack://@fof/sentry/../../../src/util/prepareReplayEvent.ts","webpack://@fof/sentry/../../../src/util/sendReplayRequest.ts","webpack://@fof/sentry/../../../src/util/sendReplay.ts","webpack://@fof/sentry/../../../src/util/throttle.ts","webpack://@fof/sentry/../../../src/replay.ts","webpack://@fof/sentry/../../../src/util/debounce.ts","webpack://@fof/sentry/../../../src/session/clearSession.ts","webpack://@fof/sentry/../../../src/eventBuffer/index.ts","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/index.js","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/worker.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleKeyboardEvent.ts","webpack://@fof/sentry/../../../src/util/getPrivacyOptions.ts","webpack://@fof/sentry/../../../src/integration.ts","webpack://@fof/sentry/../../../src/util/maskAttribute.ts","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { DynamicSamplingContext } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { isString } from './is';\nimport { logger } from './logger';\n\nexport const BAGGAGE_HEADER_NAME = 'baggage';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject: Readonly<Record<string, string>> = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      for (const key of Object.keys(currBaggageObject)) {\n        acc[key] = currBaggageObject[key];\n      }\n      return acc;\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n","import type { PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n *\n * @deprecated Use `propagationContextFromHeaders` instead.\n */\n// TODO(v8): Remove this function\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceparentData,\n      dynamicSamplingContext: undefined,\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        spanId: uuid4().substring(16),\n      },\n    };\n  } else {\n    return {\n      traceparentData,\n      dynamicSamplingContext: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        parentSpanId: parentSpanId || uuid4().substring(16),\n        spanId: uuid4().substring(16),\n        sampled: parentSampled,\n        dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      },\n    };\n  }\n}\n\n/**\n * Create a propagation context from incoming headers.\n */\nexport function propagationContextFromHeaders(\n  sentryTrace: string | undefined,\n  baggage: string | number | boolean | string[] | null | undefined,\n): PropagationContext {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || uuid4(),\n      spanId: uuid4().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || uuid4(),\n      parentSpanId: parentSpanId || uuid4().substring(16),\n      spanId: uuid4().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","export const SDK_VERSION = '7.119.1';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import type { Span } from '@sentry/types';\n\n/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n\nexport type SpanStatusType =\n  /** The operation completed successfully. */\n  | 'ok'\n  /** Deadline expired before operation could complete. */\n  | 'deadline_exceeded'\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  | 'unauthenticated'\n  /** 403 Forbidden */\n  | 'permission_denied'\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  | 'not_found'\n  /** 429 Too Many Requests */\n  | 'resource_exhausted'\n  /** Client specified an invalid argument. 4xx. */\n  | 'invalid_argument'\n  /** 501 Not Implemented */\n  | 'unimplemented'\n  /** 503 Service Unavailable */\n  | 'unavailable'\n  /** Other/generic 5xx. */\n  | 'internal_error'\n  /** Unknown. Any non-standard HTTP status code. */\n  | 'unknown_error'\n  /** The operation was cancelled (typically by the user). */\n  | 'cancelled'\n  /** Already exists (409) */\n  | 'already_exists'\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  | 'failed_precondition'\n  /** The operation was aborted, typically due to a concurrency issue. */\n  | 'aborted'\n  /** Operation was attempted past the valid range. */\n  | 'out_of_range'\n  /** Unrecoverable data loss or corruption */\n  | 'data_loss';\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatusType {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @deprecated Use {@link spanStatusFromHttpCode} instead.\n * This export will be removed in v8 as the signature contains a typo.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport const spanStatusfromHttpCode = getSpanStatusFromHttpCode;\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  // TODO (v8): Remove these calls\n  // Relay does not require us to send the status code as a tag\n  // For now, just because users might expect it to land as a tag we keep sending it.\n  // Same with data.\n  // In v8, we replace both, simply with\n  // span.setAttribute('http.response.status_code', httpStatus);\n\n  // eslint-disable-next-line deprecation/deprecation\n  span.setTag('http.status_code', String(httpStatus));\n  // eslint-disable-next-line deprecation/deprecation\n  span.setData('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Instrumenter,\n  Measurements,\n  Primitive,\n  Span as SpanInterface,\n  SpanAttributeValue,\n  SpanAttributes,\n  SpanContext,\n  SpanContextData,\n  SpanJSON,\n  SpanOrigin,\n  SpanTimeInput,\n  TraceContext,\n  Transaction,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport {\n  SEMANTIC_ATTRIBUTE_PROFILE_ID,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n} from '../semanticAttributes';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport {\n  TRACE_FLAG_NONE,\n  TRACE_FLAG_SAMPLED,\n  spanTimeInputToSeconds,\n  spanToJSON,\n  spanToTraceContext,\n  spanToTraceHeader,\n} from '../utils/spanUtils';\nimport type { SpanStatusType } from './spanstatus';\nimport { setHttpStatus } from './spanstatus';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      // eslint-disable-next-line deprecation/deprecation\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * Tags for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public tags: { [key: string]: Primitive };\n\n  /**\n   * Data for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any };\n\n  /**\n   * List of spans that were finalized\n   *\n   * @deprecated This property will no longer be public. Span recording will be handled internally.\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `Sentry.getRootSpan()` instead\n   */\n  public transaction?: Transaction;\n\n  /**\n   * The instrumenter that created this span.\n   *\n   * TODO (v8): This can probably be replaced by an `instanceOf` check of the span class.\n   *            the instrumenter can only be sentry or otel so we can check the span instance\n   *            to verify which one it is and remove this field entirely.\n   *\n   * @deprecated This field will be removed.\n   */\n  public instrumenter: Instrumenter;\n\n  protected _traceId: string;\n  protected _spanId: string;\n  protected _parentSpanId?: string | undefined;\n  protected _sampled: boolean | undefined;\n  protected _name?: string | undefined;\n  protected _attributes: SpanAttributes;\n  /** Epoch timestamp in seconds when the span started. */\n  protected _startTime: number;\n  /** Epoch timestamp in seconds when the span ended. */\n  protected _endTime?: number | undefined;\n  /** Internal keeper of the status */\n  protected _status?: SpanStatusType | string | undefined;\n  protected _exclusiveTime?: number;\n\n  protected _measurements: Measurements;\n\n  private _logMessage?: string;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext: SpanContext = {}) {\n    this._traceId = spanContext.traceId || uuid4();\n    this._spanId = spanContext.spanId || uuid4().substring(16);\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags ? { ...spanContext.tags } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data ? { ...spanContext.data } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanContext.origin || 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.status) {\n      this._status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n    if (spanContext.exclusiveTime !== undefined) {\n      this._exclusiveTime = spanContext.exclusiveTime;\n    }\n    this._measurements = spanContext.measurements ? { ...spanContext.measurements } : {};\n  }\n\n  // This rule conflicts with another eslint rule :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * An alias for `description` of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name || '';\n  }\n\n  /**\n   * Update the name of the span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set name(name: string) {\n    this.updateName(name);\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get description(): string | undefined {\n    return this._name;\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set description(description: string | undefined) {\n    this._name = description;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated Use `spanContext().traceId` instead.\n   */\n  public get traceId(): string {\n    return this._traceId;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated You cannot update the traceId of a span after span creation.\n   */\n  public set traceId(traceId: string) {\n    this._traceId = traceId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated Use `spanContext().spanId` instead.\n   */\n  public get spanId(): string {\n    return this._spanId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated You cannot update the spanId of a span after span creation.\n   */\n  public set spanId(spanId: string) {\n    this._spanId = spanId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `startSpan` functions instead.\n   */\n  public set parentSpanId(string) {\n    this._parentSpanId = string;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).parent_span_id` instead.\n   */\n  public get parentSpanId(): string | undefined {\n    return this._parentSpanId;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated Use `isRecording()` instead.\n   */\n  public get sampled(): boolean | undefined {\n    return this._sampled;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated You cannot update the sampling decision of a span after span creation.\n   */\n  public set sampled(sampled: boolean | undefined) {\n    this._sampled = sampled;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public get attributes(): SpanAttributes {\n    return this._attributes;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `setAttributes()` instead.\n   */\n  public set attributes(attributes: SpanAttributes) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get startTimestamp(): number {\n    return this._startTime;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated In v8, you will not be able to update the span start time after creation.\n   */\n  public set startTimestamp(startTime: number) {\n    this._startTime = startTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get endTimestamp(): number | undefined {\n    return this._endTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Set the end time via `span.end()` instead.\n   */\n  public set endTimestamp(endTime: number | undefined) {\n    this._endTime = endTime;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `spanToJSON().status` instead to get the status.\n   */\n  public get status(): SpanStatusType | string | undefined {\n    return this._status;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `.setStatus()` instead to set or update the status.\n   */\n  public set status(status: SpanStatusType | string | undefined) {\n    this._status = status;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `spanToJSON().op` to read the op instead.\n   */\n  public get op(): string | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `startSpan()` functions to set or `span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'op')\n   *             to update the span instead.\n   */\n  public set op(op: string | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, op);\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `spanToJSON().origin` to read the origin instead.\n   */\n  public get origin(): SpanOrigin | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined;\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `startSpan()` functions to set the origin instead.\n   */\n  public set origin(origin: SpanOrigin | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /** @inheritdoc */\n  public spanContext(): SpanContextData {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /**\n   * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n   * Also the `sampled` decision will be inherited.\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): SpanInterface {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this._spanId,\n      sampled: this._sampled,\n      traceId: this._traceId,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.spanRecorder = this.spanRecorder;\n    // eslint-disable-next-line deprecation/deprecation\n    if (childSpan.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    const rootSpan = getRootSpan(this);\n    // TODO: still set span.transaction here until we have a more permanent solution\n    // Probably similarly to the weakmap we hold in node-experimental\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.transaction = rootSpan as Transaction;\n\n    if (DEBUG_BUILD && rootSpan) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = spanToJSON(childSpan).description || '< unknown name >';\n      const idStr = rootSpan.spanContext().spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      logger.log(logMessage);\n      this._logMessage = logMessage;\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * Sets the tag attribute on the current span.\n   *\n   * Can also be used to unset a tag, by passing `undefined`.\n   *\n   * @param key Tag key\n   * @param value Tag value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  public setTag(key: string, value: Primitive): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * Sets the data attribute on the current span\n   * @param key Data key\n   * @param value Data value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setData(key: string, value: any): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setAttribute(key: string, value: SpanAttributeValue | undefined): void {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n  public setAttributes(attributes: SpanAttributes): void {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatusType): this {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top-level `setHttpStatus()` instead.\n   */\n  public setHttpStatus(httpStatus: number): this {\n    setHttpStatus(this, httpStatus);\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @deprecated Use `.updateName()` instead.\n   */\n  public setName(name: string): void {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).status === 'ok'` instead.\n   */\n  public isSuccess(): boolean {\n    return this._status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n  public finish(endTimestamp?: number): void {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n  public end(endTimestamp?: SpanTimeInput): void {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n    const rootSpan = getRootSpan(this);\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      rootSpan &&\n      rootSpan.spanContext().spanId !== this._spanId\n    ) {\n      const logMessage = this._logMessage;\n      if (logMessage) {\n        logger.log((logMessage as string).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public toTraceparent(): string {\n    return spanToTraceHeader(this);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON()` or access the fields directly instead.\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      endTimestamp: this._endTime,\n      // eslint-disable-next-line deprecation/deprecation\n      op: this.op,\n      parentSpanId: this._parentSpanId,\n      sampled: this._sampled,\n      spanId: this._spanId,\n      startTimestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      traceId: this._traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Update the fields directly instead.\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data || {};\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n    this._endTime = spanContext.endTimestamp;\n    // eslint-disable-next-line deprecation/deprecation\n    this.op = spanContext.op;\n    this._parentSpanId = spanContext.parentSpanId;\n    this._sampled = spanContext.sampled;\n    this._spanId = spanContext.spanId || this._spanId;\n    this._startTime = spanContext.startTimestamp || this._startTime;\n    this._status = spanContext.status;\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags || {};\n    this._traceId = spanContext.traceId || this._traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceContext()` util function instead.\n   */\n  public getTraceContext(): TraceContext {\n    return spanToTraceContext(this);\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n  public getSpanJSON(): SpanJSON {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined,\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n      exclusive_time: this._exclusiveTime,\n      measurements: Object.keys(this._measurements).length > 0 ? this._measurements : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n  public isRecording(): boolean {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * Convert the object to JSON.\n   * @deprecated Use `spanToJSON(span)` instead.\n   */\n  public toJSON(): SpanJSON {\n    return this.getSpanJSON();\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n  private _getData():\n    | {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [key: string]: any;\n      }\n    | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const { data, _attributes: attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n","import type { Options } from '@sentry/types';\n\nimport { getClient } from '../exports';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n","import type { Scope, Span, SpanTimeInput, StartSpanOptions, TransactionContext } from '@sentry/types';\n\nimport { addNonEnumerableProperty, dropUndefinedKeys, logger, tracingContextFromHeaders } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '.';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getCurrentScope, withScope } from '../exports';\nimport type { Hub } from '../hub';\nimport { runWithAsyncContext } from '../hub';\nimport { getIsolationScope } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport type { Scope as ScopeClass } from '../scope';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanIsSampled, spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n *\n * @deprecated Use `startSpan` instead.\n */\nexport function trace<T>(\n  context: TransactionContext,\n  callback: (span?: Span) => T,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError: (error: unknown, span?: Span) => void = () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  afterFinish: () => void = () => {},\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const scope = getCurrentScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const parentSpan = scope.getSpan();\n\n  const spanContext = normalizeContext(context);\n  const activeSpan = createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: false,\n    scope,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(activeSpan);\n\n  return handleCallbackErrors(\n    () => callback(activeSpan),\n    error => {\n      activeSpan && activeSpan.setStatus('internal_error');\n      onError(error, activeSpan);\n    },\n    () => {\n      activeSpan && activeSpan.end();\n      // eslint-disable-next-line deprecation/deprecation\n      scope.setSpan(parentSpan);\n      afterFinish();\n    },\n  );\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpan<T>(context: StartSpanOptions, callback: (span: Span | undefined) => T): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet\n          if (activeSpan) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n        () => activeSpan && activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nexport const startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpanManual<T>(\n  context: StartSpanOptions,\n  callback: (span: Span | undefined, finish: () => void) => T,\n): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      function finishAndSetSpan(): void {\n        activeSpan && activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          if (activeSpan && activeSpan.isRecording()) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startInactiveSpan(context: StartSpanOptions): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const spanContext = normalizeContext(context);\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const parentSpan = context.scope\n    ? // eslint-disable-next-line deprecation/deprecation\n      context.scope.getSpan()\n    : getActiveSpan();\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return undefined;\n  }\n\n  const scope = context.scope || getCurrentScope();\n\n  // Even though we don't actually want to make this span active on the current scope,\n  // we need to make it active on a temporary scope that we use for event processing\n  // as otherwise, it won't pick the correct span for the event when processing it\n  const temporaryScope = (scope as ScopeClass).clone();\n\n  return createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope: temporaryScope,\n  });\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getSpan();\n}\n\ninterface ContinueTrace {\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers,\n   * or in the browser from `<meta name=\"sentry-trace\">` and `<meta name=\"baggage\">` HTML tags.\n   *\n   * @deprecated Use the version of this function taking a callback as second parameter instead:\n   *\n   * ```\n   * Sentry.continueTrace(sentryTrace: '...', baggage: '...' }, () => {\n   *    // ...\n   * })\n   * ```\n   *\n   */\n  ({\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  }): Partial<TransactionContext>;\n\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n   * and `<meta name=\"baggage\">` HTML tags.\n   *\n   * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n   * be attached to the incoming trace.\n   *\n   * Deprecation notice: In the next major version of the SDK the provided callback will not receive a transaction\n   * context argument.\n   */\n  <V>(\n    {\n      sentryTrace,\n      baggage,\n    }: {\n      // eslint-disable-next-line deprecation/deprecation\n      sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n      // eslint-disable-next-line deprecation/deprecation\n      baggage: Parameters<typeof tracingContextFromHeaders>[1];\n    },\n    // TODO(v8): Remove parameter from this callback.\n    callback: (transactionContext: Partial<TransactionContext>) => V,\n  ): V;\n}\n\nexport const continueTrace: ContinueTrace = <V>(\n  {\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  },\n  callback?: (transactionContext: Partial<TransactionContext>) => V,\n): V | Partial<TransactionContext> => {\n  // TODO(v8): Change this function so it doesn't do anything besides setting the propagation context on the current scope:\n  /*\n    return withScope((scope) => {\n      const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n      scope.setPropagationContext(propagationContext);\n      return callback();\n    })\n  */\n\n  const currentScope = getCurrentScope();\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext: Partial<TransactionContext> = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return runWithAsyncContext(() => {\n    return callback(transactionContext);\n  });\n};\n\nfunction createChildSpanOrTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  {\n    parentSpan,\n    spanContext,\n    forceTransaction,\n    scope,\n  }: {\n    parentSpan: Span | undefined;\n    spanContext: TransactionContext;\n    forceTransaction?: boolean;\n    scope: Scope;\n  },\n): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span: Span | undefined;\n  if (parentSpan && !forceTransaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    span = parentSpan.startChild(spanContext);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const sampled = spanIsSampled(parentSpan);\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  } else {\n    const { traceId, dsc, parentSpanId, sampled } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  }\n\n  // We always set this as active span on the scope\n  // In the case of this being an inactive span, we ensure to pass a detached scope in here in the first place\n  // But by having this here, we can ensure that the lookup through `getCapturedScopesOnSpan` results in the correct scope & span combo\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to TransactionContext.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context: StartSpanOptions): TransactionContext {\n  if (context.startTime) {\n    const ctx: TransactionContext & { startTime?: SpanTimeInput } = { ...context };\n    ctx.startTimestamp = spanTimeInputToSeconds(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return context;\n}\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\nfunction setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n","import type {\n  Context,\n  Contexts,\n  DynamicSamplingContext,\n  MeasurementUnit,\n  SpanTimeInput,\n  Transaction as TransactionInterface,\n  TransactionContext,\n  TransactionEvent,\n  TransactionMetadata,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes';\nimport { spanTimeInputToSeconds, spanToJSON, spanToTraceContext } from '../utils/spanUtils';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext';\nimport { Span as SpanClass, SpanRecorder } from './span';\nimport { getCapturedScopesOnSpan } from './trace';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  /**\n   * The reference to the current hub.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public _hub: Hub;\n\n  protected _name: string;\n\n  private _contexts: Contexts;\n\n  private _trimEnd?: boolean | undefined;\n\n  // DO NOT yet remove this property, it is used in a hack for v7 backwards compatibility.\n  private _frozenDynamicSamplingContext: Readonly<Partial<DynamicSamplingContext>> | undefined;\n\n  private _metadata: Partial<TransactionMetadata>;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   *\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n    this._contexts = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this._metadata = {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.metadata,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    // TODO (v8): Replace this with another way to set the root span\n    // eslint-disable-next-line deprecation/deprecation\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this._metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  // This sadly conflicts with the getter/setter ordering :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * Getter for `name` property.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Setter for `name` property, which also sets `source` as custom.\n   * @deprecated Use `updateName()` and `setMetadata()` instead.\n   */\n  public set name(newName: string) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.setName(newName);\n  }\n\n  /**\n   * Get the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public get metadata(): TransactionMetadata {\n    // We merge attributes in for backwards compatibility\n    return {\n      // Defaults\n      // eslint-disable-next-line deprecation/deprecation\n      source: 'custom',\n      spanMetadata: {},\n\n      // Legacy metadata\n      ...this._metadata,\n\n      // From attributes\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] && {\n        source: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] as TransactionMetadata['source'],\n      }),\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] && {\n        sampleRate: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] as TransactionMetadata['sampleRate'],\n      }),\n    };\n  }\n\n  /**\n   * Update the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public set metadata(metadata: TransactionMetadata) {\n    this._metadata = metadata;\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /**\n   * Setter for `name` property, which also sets `source` on the metadata.\n   *\n   * @deprecated Use `.updateName()` and `.setAttribute()` instead.\n   */\n  public setName(name: string, source: TransactionMetadata['source'] = 'custom'): void {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n\n  /** @inheritdoc */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set the context of a transaction event.\n   * @deprecated Use either `.setAttribute()`, or set the context on the scope before creating the transaction.\n   */\n  public setContext(key: string, context: Context | null): void {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top-level `setMeasurement()` instead.\n   */\n  public setMeasurement(name: string, value: number, unit: MeasurementUnit = ''): void {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Store metadata on this transaction.\n   * @deprecated Use attributes or store data on the scope instead.\n   */\n  public setMetadata(newMetadata: Partial<TransactionMetadata>): void {\n    this._metadata = { ...this._metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const timestampInS = spanTimeInputToSeconds(endTimestamp);\n    const transaction = this._finishTransaction(timestampInS);\n    if (!transaction) {\n      return undefined;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): TransactionContext {\n    // eslint-disable-next-line deprecation/deprecation\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this._name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(transactionContext: TransactionContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    super.updateWithContext(transactionContext);\n\n    this._name = transactionContext.name || '';\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   *\n   * @deprecated Use top-level `getDynamicSamplingContextFromSpan` instead.\n   */\n  public getDynamicSamplingContext(): Readonly<Partial<DynamicSamplingContext>> {\n    return getDynamicSamplingContextFromSpan(this);\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setHub(hub: Hub): void {\n    this._hub = hub;\n  }\n\n  /**\n   * Get the profile id of the transaction.\n   */\n  public getProfileId(): string | undefined {\n    if (this._contexts !== undefined && this._contexts['profile'] !== undefined) {\n      return this._contexts['profile'].profile_id as string;\n    }\n    return undefined;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n  protected _finishTransaction(endTimestamp?: number): TransactionEvent | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this._endTime !== undefined) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.end(endTimestamp);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const finishedSpans = this.spanRecorder\n      ? // eslint-disable-next-line deprecation/deprecation\n        this.spanRecorder.spans.filter(span => span !== this && spanToJSON(span).timestamp)\n      : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      const endTimes = finishedSpans.map(span => spanToJSON(span).timestamp).filter(Boolean) as number[];\n      this._endTime = endTimes.reduce((prev, current) => {\n        return prev > current ? prev : current;\n      });\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { metadata } = this;\n    // eslint-disable-next-line deprecation/deprecation\n    const { source } = metadata;\n\n    const transaction: TransactionEvent = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: spanToTraceContext(this),\n      },\n      // TODO: Pass spans serialized via `spanToJSON()` here instead in v8.\n      spans: finishedSpans,\n      start_timestamp: this._startTime,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    DEBUG_BUILD && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`);\n\n    return transaction;\n  }\n}\n","/* eslint-disable max-lines */\nimport type { SpanTimeInput, TransactionContext } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\nimport type { Span } from './span';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\n\nexport const TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string,\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanContext().spanId !== this.transactionSpanId) {\n      // We patch span.end() to pop an activity after setting an endTimestamp.\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const originalEnd = span.end;\n      span.end = (...rest: unknown[]) => {\n        this._popActivity(span.spanContext().spanId);\n        return originalEnd.apply(span, rest);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (spanToJSON(span).timestamp === undefined) {\n        this._pushActivity(span.spanContext().spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean>;\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean;\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n  private _idleTimeoutCanceledPermanently: boolean;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[];\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  private _idleTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  private _finishReason: (typeof IDLE_TRANSACTION_FINISH_REASONS)[number];\n\n  private _autoFinishAllowed: boolean;\n\n  /**\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  public constructor(\n    transactionContext: TransactionContext,\n    // eslint-disable-next-line deprecation/deprecation\n    private readonly _idleHub: Hub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n    private readonly _idleTimeout: number = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n    private readonly _finalTimeout: number = TRACING_DEFAULTS.finalTimeout,\n    private readonly _heartbeatInterval: number = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    private readonly _onScope: boolean = false,\n    /**\n     * When set to `true`, will disable the idle timeout (`_idleTimeout` option) and heartbeat mechanisms (`_heartbeatInterval`\n     * option) until the `sendAutoFinishSignal()` method is called. The final timeout mechanism (`_finalTimeout` option)\n     * will not be affected by this option, meaning the transaction will definitely be finished when the final timeout is\n     * reached, no matter what this option is configured to.\n     *\n     * Defaults to `false`.\n     */\n    delayAutoFinishUntilSignal: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n    this._autoFinishAllowed = !delayAutoFinishUntilSignal;\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      DEBUG_BUILD && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanContext().spanId}`);\n      // eslint-disable-next-line deprecation/deprecation\n      _idleHub.getScope().setSpan(this);\n    }\n\n    if (!delayAutoFinishUntilSignal) {\n      this._restartIdleTimeout();\n    }\n\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.end();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const endTimestampInS = spanTimeInputToSeconds(endTimestamp);\n\n    this._finished = true;\n    this.activities = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.op === 'ui.action.click') {\n      this.setAttribute(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.spanRecorder) {\n      DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestampInS * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestampInS);\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanContext().spanId === this.spanContext().spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!spanToJSON(span).timestamp) {\n          span.setStatus('cancelled');\n          span.end(endTimestampInS);\n          DEBUG_BUILD &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const { start_timestamp: startTime, timestamp: endTime } = spanToJSON(span);\n        const spanStartedBeforeTransactionFinish = startTime && startTime < endTimestampInS;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = endTime && startTime && endTime - startTime < timeoutWithMarginOfError;\n\n        if (DEBUG_BUILD) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      DEBUG_BUILD && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      DEBUG_BUILD && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      // eslint-disable-next-line deprecation/deprecation\n      const scope = this._idleHub.getScope();\n      // eslint-disable-next-line deprecation/deprecation\n      if (scope.getTransaction() === this) {\n        // eslint-disable-next-line deprecation/deprecation\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.end(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets executed before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanContext().spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      DEBUG_BUILD && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n  public cancelIdleTimeout(\n    endTimestamp?: Parameters<IdleTransaction['end']>[0],\n    {\n      restartOnChildSpanChange,\n    }: {\n      restartOnChildSpanChange?: boolean;\n    } = {\n      restartOnChildSpanChange: true,\n    },\n  ): void {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.end(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n  public setFinishReason(reason: string): void {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Permits the IdleTransaction to automatically end itself via the idle timeout and heartbeat mechanisms when the `delayAutoFinishUntilSignal` option was set to `true`.\n   */\n  public sendAutoFinishSignal(): void {\n    if (!this._autoFinishAllowed) {\n      DEBUG_BUILD && logger.log('[Tracing] Received finish signal for idle transaction.');\n      this._restartIdleTimeout();\n      this._autoFinishAllowed = true;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  private _restartIdleTimeout(endTimestamp?: Parameters<IdleTransaction['end']>[0]): void {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.end(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    DEBUG_BUILD && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      DEBUG_BUILD && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampInSeconds();\n      if (this._idleTimeoutCanceledPermanently) {\n        if (this._autoFinishAllowed) {\n          this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n          this.end(endTimestamp);\n        }\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      if (this._autoFinishAllowed) {\n        DEBUG_BUILD && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n        this.end();\n      }\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    DEBUG_BUILD && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n","import type { Transaction } from '@sentry/types';\nimport { extractTraceparentData as _extractTraceparentData } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveTransaction<T extends Transaction>(maybeHub?: Hub): T | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = maybeHub || getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = hub.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  return scope.getTransaction() as T | undefined;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nexport const extractTraceparentData = _extractTraceparentData;\n","import {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  logger,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SpanStatusType } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status: SpanStatusType = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n","import type { Options, SamplingContext } from '@sentry/types';\nimport { isNaN, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanToJSON } from '../utils/spanUtils';\nimport type { Transaction } from './transaction';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nexport function sampleTransaction<T extends Transaction>(\n  transaction: T,\n  options: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'>,\n  samplingContext: SamplingContext,\n): T {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  // eslint-disable-next-line deprecation/deprecation\n  if (transaction.sampled !== undefined) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(transaction.sampled));\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Tracing] starting ${transaction.op} transaction - ${spanToJSON(transaction).description}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n","import type { ClientOptions, CustomSamplingContext, TransactionContext } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getMainCarrier } from '../hub';\nimport { spanToTraceHeader } from '../utils/spanUtils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { sampleTransaction } from './sampling';\nimport { Transaction } from './transaction';\n\n/** Returns all trace headers that are currently on the top scope. */\n// eslint-disable-next-line deprecation/deprecation\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': spanToTraceHeader(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  transactionContext: TransactionContext,\n  idleTimeout: number,\n  finalTimeout: number,\n  onScope?: boolean,\n  customSamplingContext?: CustomSamplingContext,\n  heartbeatInterval?: number,\n  delayAutoFinishUntilSignal: boolean = false,\n): IdleTransaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nexport function addTracingExtensions(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric } from '../../types';\nimport { observe } from '../observe';\n\ndeclare global {\n  interface Performance {\n    interactionCount: number;\n  }\n}\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries: Metric['entries']): void => {\n  (entries as PerformanceEventTiming[]).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po: PerformanceObserver | undefined;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nexport const getInteractionCount = (): number => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nexport const initInteractionCountPolyfill = (): void => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } as PerformanceObserverInit);\n};\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { getInteractionCount, initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { INPMetric } from './types/inp';\n\ninterface Interaction {\n  id: number;\n  latency: number;\n  entries: PerformanceEventTiming[];\n}\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = (): number => {\n  return getInteractionCount();\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList: Interaction[] = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap: { [interactionId: string]: Interaction } = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry: PerformanceEventTiming): void => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId!];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    entry.duration > minLongestInteraction.latency\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId!,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = (): Interaction => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/responsiveness/) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/inp/#what-is-a-good-inp-score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onINP = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/inp/#what's-a-%22good%22-inp-value\n  // const thresholds = [200, 500];\n\n  // TODO(philipwalton): remove once the polyfill is no longer needed.\n  initInteractionCountPolyfill();\n\n  const metric = initMetric('INP');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: INPMetric['entries']): void => {\n    entries.forEach(entry => {\n      if (entry.interactionId) {\n        processEntry(entry);\n      }\n\n      // Entries of type `first-input` don't currently have an `interactionId`,\n      // so to consider them in INP we have to first check that an existing\n      // entry doesn't match the `duration` and `startTime`.\n      // Note that this logic assumes that `event` entries are dispatched\n      // before `first-input` entries. This is true in Chrome but it is not\n      // true in Firefox; however, Firefox doesn't support interactionId, so\n      // it's not an issue at the moment.\n      // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n      if (entry.entryType === 'first-input') {\n        const noMatchingEntry = !longestInteractionList.some(interaction => {\n          return interaction.entries.some(prevEntry => {\n            return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n          });\n        });\n        if (noMatchingEntry) {\n          processEntry(entry);\n        }\n      }\n    });\n\n    const inp = estimateP98LongestInteraction();\n\n    if (inp && inp.latency !== metric.value) {\n      metric.value = inp.latency;\n      metric.entries = inp.entries;\n      report();\n    }\n  };\n\n  const po = observe('event', handleEntries, {\n    // Event Timing entries have their durations rounded to the nearest 8ms,\n    // so a duration of 40ms would be any event that spans 2.5 or more frames\n    // at 60Hz. This threshold is chosen to strike a balance between usefulness\n    // and performance. Running this callback for any interaction that spans\n    // just one or two frames is likely not worth the insight that could be\n    // gained.\n    durationThreshold: opts.durationThreshold || 40,\n  } as PerformanceObserverInit);\n\n  report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  if (po) {\n    // Also observe entries of type `first-input`. This is useful in cases\n    // where the first interaction is less than the `durationThreshold`.\n    po.observe({ type: 'first-input', buffered: true });\n\n    onHidden(() => {\n      handleEntries(po.takeRecords() as INPMetric['entries']);\n\n      // If the interaction count shows that there were interactions but\n      // none were captured by the PerformanceObserver, report a latency of 0.\n      if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n        metric.value = 0;\n        metric.entries = [];\n      }\n\n      report(true);\n    });\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getNavigationEntry } from './lib/getNavigationEntry';\nimport { initMetric } from './lib/initMetric';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { TTFBMetric } from './types/ttfb';\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback: () => void): void => {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  if (WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => whenReady(callback), true);\n  } else if (WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/time-to-first-byte/) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nexport const onTTFB = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/ttfb/#what-is-a-good-ttfb-score\n  // const thresholds = [800, 1800];\n\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = getNavigationEntry() as TTFBMetric['entries'][number];\n\n    if (navEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navEntry.responseStart - getActivationStart(), 0);\n\n      // In some cases the value reported is negative or is larger\n      // than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      if (metric.value < 0 || metric.value > performance.now()) return;\n\n      metric.entries = [navEntry];\n\n      report(true);\n    }\n  });\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { CLSMetric, ReportCallback, StopListening } from './types';\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (\n  onReport: ReportCallback,\n  options: { reportAllChanges?: boolean } = {},\n): StopListening | undefined => {\n  const metric = initMetric('CLS', 0);\n  let report: ReturnType<typeof bindReporter>;\n\n  let sessionValue = 0;\n  let sessionEntries: PerformanceEntry[] = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries: LayoutShift[]): void => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric, options.reportAllChanges);\n\n    const stopListening = (): void => {\n      handleEntries(po.takeRecords() as CLSMetric['entries']);\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { FIDMetric, PerformanceEventTiming, ReportCallback } from './types';\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: ReportCallback): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntry = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries: FIDMetric['entries']): void => {\n    (entries as PerformanceEventTiming[]).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() as FIDMetric['entries']);\n      po.disconnect();\n    }, true);\n  }\n};\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { DsnComponents, SpanEnvelope, SpanItem } from '@sentry/types';\nimport type { Span } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Create envelope from Span item.\n */\nexport function createSpanEnvelope(spans: Span[], dsn?: DsnComponents): SpanEnvelope {\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const items = spans.map(createSpanItem);\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n\nfunction createSpanItem(span: Span): SpanItem {\n  const spanHeaders: SpanItem[0] = {\n    type: 'span',\n  };\n  return [spanHeaders, span];\n}\n","import type { Transaction } from '@sentry/core';\nimport type { Span, SpanContext } from '@sentry/types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n *\n * Note: this will not be possible anymore in v8,\n * unless we do some special handling for browser here...\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  // eslint-disable-next-line deprecation/deprecation\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/* eslint-disable max-lines */\nimport type { IdleTransaction, Transaction } from '@sentry/core';\nimport {\n  Span,\n  getActiveTransaction,\n  getClient,\n  hasTracingEnabled,\n  isValidSampleRate,\n  setMeasurement,\n} from '@sentry/core';\nimport type { ClientOptions, Measurements, SpanContext, TransactionContext } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, getComponentName, htmlTreeAsString, logger, parseUrl } from '@sentry/utils';\n\nimport { spanToJSON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../../common/debug-build';\nimport {\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addInpInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n  addTtfbInstrumentationHandler,\n} from '../instrument';\nimport { WINDOW } from '../types';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher';\nimport type {\n  InteractionRouteNameMapping,\n  NavigatorDeviceMemory,\n  NavigatorNetworkInformation,\n} from '../web-vitals/types';\nimport { _startChild, isMeasurementValue } from './utils';\n\nimport { createSpanEnvelope } from '@sentry/core';\nimport { getNavigationEntry } from '../web-vitals/lib/getNavigationEntry';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time: number): number {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI(): Performance | undefined {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor: number = 0;\n\nlet _measurements: Measurements = {};\nlet _lcpEntry: LargestContentfulPaint | undefined;\nlet _clsEntry: LayoutShift | undefined;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nexport function startTrackingWebVitals(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return (): void => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nexport function startTrackingLongTasks(): void {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nexport function startTrackingInteractions(): void {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const span: SpanContext = {\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          span.attributes = { 'ui.component_name': componentName };\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.startChild(span);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking INP webvital events.\n */\nexport function startTrackingINP(\n  interactionIdtoRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP(interactionIdtoRouteNameMapping, interactionsSampleRate);\n\n    return (): void => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS(): () => void {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry as LayoutShift;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(): () => void {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry as LargestContentfulPaint;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID(): () => void {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb(): () => void {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\nconst INP_ENTRY_MAP: Record<string, 'click' | 'hover' | 'drag' | 'press'> = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP(\n  interactionIdToRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  return addInpInstrumentationHandler(({ metric }) => {\n    if (metric.value === undefined) {\n      return;\n    }\n    const entry = metric.entries.find(\n      entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name] !== undefined,\n    );\n    const client = getClient();\n    if (!entry || !client) {\n      return;\n    }\n    const interactionType = INP_ENTRY_MAP[entry.name];\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const interaction =\n      entry.interactionId !== undefined ? interactionIdToRouteNameMapping[entry.interactionId] : undefined;\n    if (interaction === undefined) {\n      return;\n    }\n    const { routeName, parentContext, activeTransaction, user, replayId } = interaction;\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const profileId = activeTransaction !== undefined ? activeTransaction.getProfileId() : undefined;\n    const span = new Span({\n      startTimestamp: startTime,\n      endTimestamp: startTime + duration,\n      op: `ui.interaction.${interactionType}`,\n      name: htmlTreeAsString(entry.target),\n      attributes: {\n        release: options.release,\n        environment: options.environment,\n        transaction: routeName,\n        ...(userDisplay !== undefined && userDisplay !== '' ? { user: userDisplay } : {}),\n        ...(profileId !== undefined ? { profile_id: profileId } : {}),\n        ...(replayId !== undefined ? { replay_id: replayId } : {}),\n      },\n      exclusiveTime: metric.value,\n      measurements: {\n        inp: { value: metric.value, unit: 'millisecond' },\n      },\n    });\n\n    /** Check to see if the span should be sampled */\n    const sampleRate = getSampleRate(parentContext, options, interactionsSampleRate);\n\n    if (!sampleRate) {\n      return;\n    }\n\n    if (Math.random() < (sampleRate as number | boolean)) {\n      const envelope = span ? createSpanEnvelope([span], client.getDsn()) : undefined;\n      const transport = client && client.getTransport();\n      if (transport && envelope) {\n        transport.send(envelope).then(null, reason => {\n          DEBUG_BUILD && logger.error('Error while sending interaction:', reason);\n        });\n      }\n      return;\n    }\n  });\n}\n\n/** Add performance related spans to a transaction */\nexport function addPerformanceEntries(transaction: Transaction): void {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(transaction);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry: Record<string, any>) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (transaction.op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(transaction, entry, entry.name as string, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      setMeasurement(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nexport function _addMeasureSpans(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  description?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire transaction if it contained faulty spans.\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'request',\n      startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'response',\n      startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n  }\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n  renderBlockingStatus?: string;\n}\n\n/** Create resource-related spans */\nexport function _addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceUrl: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data: Record<string, any> = {};\n  setResourceEntrySizeData(data, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(data, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(data, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    data['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    data['server.address'] = parsedUrl.host;\n  }\n\n  data['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceUrl.replace(WINDOW.location.origin, ''),\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction: Transaction): void {\n  const navigator = WINDOW.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction: Transaction): void {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  data: Record<string, unknown>,\n  entry: ResourceEntry,\n  key: keyof Pick<ResourceEntry, 'transferSize' | 'encodedBodySize' | 'decodedBodySize'>,\n  dataKey: 'http.response_transfer_size' | 'http.response_content_length' | 'http.decoded_response_content_length',\n): void {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    data[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements: Measurements): void {\n  const navEntry = getNavigationEntry();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\n/** Taken from @sentry/core sampling.ts */\nfunction getSampleRate(\n  transactionContext: TransactionContext | undefined,\n  options: ClientOptions,\n  interactionsSampleRate: number,\n): number | boolean {\n  if (!hasTracingEnabled(options)) {\n    return false;\n  }\n  let sampleRate;\n  if (transactionContext !== undefined && typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      transactionContext,\n      name: transactionContext.name,\n      parentSampled: transactionContext.parentSampled,\n      attributes: {\n        // eslint-disable-next-line deprecation/deprecation\n        ...transactionContext.data,\n        ...transactionContext.attributes,\n      },\n      location: WINDOW.location,\n    });\n  } else if (transactionContext !== undefined && transactionContext.sampled !== undefined) {\n    sampleRate = transactionContext.sampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    sampleRate = 1;\n  }\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding interaction span because of invalid sample rate.');\n    return false;\n  }\n  if (sampleRate === true) {\n    return interactionsSampleRate;\n  } else if (sampleRate === false) {\n    return 0;\n  }\n  return sampleRate * interactionsSampleRate;\n}\n","/* eslint-disable max-lines */\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToJSON,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, Span } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  SENTRY_XHR_DATA_KEY,\n  addFetchInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  browserPerformanceTimeOrigin,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  parseUrl,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\n\nimport { instrumentFetchRequest } from '../common/fetch';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport { WINDOW } from './types';\n\nexport const DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * @deprecated Will be removed in v8.\n   * Use `shouldCreateSpanForRequest` to control span creation and `tracePropagationTargets` to control\n   * trace header attachment.\n   */\n  tracingOrigins: Array<string | RegExp>;\n\n  /**\n   * List of strings and/or regexes used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * @deprecated Use the top-level `tracePropagationTargets` option in `Sentry.init` instead.\n   * This option will be removed in v8.\n   *\n   * Default: ['localhost', /^\\//] @see {DEFAULT_TRACE_PROPAGATION_TARGETS}\n   */\n  tracePropagationTargets: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url: string): boolean =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry: PerformanceEntry): entry is PerformanceResourceTiming {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry as PerformanceResourceTiming).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nexport function extractNetworkProtocol(nextHopProtocol: string): { name: string; version: string } {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time: number = 0): number {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming: PerformanceResourceTiming): [string, string | number][] {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData: [string, string | number][] = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nexport function shouldAttachHeaders(url: string, tracePropagationTargets: (string | RegExp)[] | undefined): boolean {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nexport function xhrCallback(\n  handlerData: HandlerDataXhr,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!hasTracingEnabled() || !xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const isolationScope = getIsolationScope();\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n        onlyIfParent: true,\n        attributes: {\n          type: 'xhr',\n          'http.method': sentryXhrData.method,\n          'http.url': fullUrl,\n          url: sentryXhrData.url,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  const client = getClient();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    const { traceId, spanId, sampled, dsc } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n    const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n      dsc ||\n        (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n    );\n\n    setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr: SentryWrappedXMLHttpRequest,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader!(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n","import {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { Client, HandlerDataFetch, Scope, Span, SpanOrigin } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  isInstanceOf,\n  parseUrl,\n} from '@sentry/utils';\n\ntype PolymorphicRequestHeaders =\n  | Record<string, string | undefined>\n  | Array<[string, string]>\n  // the below is not preicsely the Header type used in Request, but it'll pass duck-typing\n  | {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      append: (key: string, value: string) => void;\n      get: (key: string) => string | null | undefined;\n    };\n\n/**\n * Create and track fetch request spans for usage in combination with `addInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function instrumentFetchRequest(\n  handlerData: HandlerDataFetch,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n  spanOrigin: SpanOrigin = 'auto.http.browser',\n): Span | undefined {\n  if (!hasTracingEnabled() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${method} ${url}`,\n        onlyIfParent: true,\n        attributes: {\n          url,\n          type: 'fetch',\n          'http.method': method,\n          'http.url': fullUrl,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanContext().spanId;\n    spans[span.spanContext().spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request: string | Request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options: { [key: string]: any } = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nexport function addTracingHeadersToFetchRequest(\n  request: string | unknown, // unknown is actually type Request but we can't export DOM types from this package,\n  client: Client,\n  scope: Scope,\n  options: {\n    headers?:\n      | {\n          [key: string]: string[] | string | undefined;\n        }\n      | PolymorphicRequestHeaders;\n  },\n  requestSpan?: Span,\n): PolymorphicRequestHeaders | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const span = requestSpan || scope.getSpan();\n\n  const isolationScope = getIsolationScope();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc ||\n      (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request as Request).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers as Headers);\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders: string[] = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers as Exclude<typeof headers, Headers>),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction endSpan(span: Span, handlerData: HandlerDataFetch): void {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus('internal_error');\n  }\n  span.end();\n}\n","/* eslint-disable max-lines */\nimport type { Hub, IdleTransaction } from '@sentry/core';\nimport { getClient, getCurrentScope } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  TRACING_DEFAULTS,\n  addTracingExtensions,\n  getActiveTransaction,\n  startIdleTransaction,\n} from '@sentry/core';\nimport type { EventProcessor, Integration, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\nimport { getDomElement, logger, propagationContextFromHeaders } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport {\n  addPerformanceEntries,\n  startTrackingINP,\n  startTrackingInteractions,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from './metrics';\nimport type { RequestInstrumentationOptions } from './request';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nimport { WINDOW } from './types';\nimport type { InteractionRouteNameMapping } from './web-vitals/types';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished during an idle state. An idle state is defined\n   * by a moment where there are no in-progress spans.\n   *\n   * The transaction will use the end timestamp of the last finished span as the endtime for the transaction.\n   * If there are still active spans when this the `idleTimeout` is set, the `idleTimeout` will get reset.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * The max duration for a transaction. If a transaction duration hits the `finalTimeout` value, it\n   * will be finished.\n   * Time is in ms.\n   *\n   * Default: 30000\n   */\n  finalTimeout: number;\n\n  /**\n   * The heartbeat interval. If no new spans are started or open spans are finished within 3 heartbeats,\n   * the transaction will be finished.\n   * Time is in ms.\n   *\n   * Default: 5000\n   */\n  heartbeatInterval: number;\n\n  /**\n   * Flag to enable/disable creation of `navigation` transaction on history changes.\n   *\n   * Default: true\n   */\n  startTransactionOnLocationChange: boolean;\n\n  /**\n   * Flag to enable/disable creation of `pageload` transaction on first pageload.\n   *\n   * Default: true\n   */\n  startTransactionOnPageLoad: boolean;\n\n  /**\n   * Flag Transactions where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundTransactions: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * If true, Sentry will capture INP web vitals as standalone spans .\n   *\n   * Default: false\n   */\n  enableInp: boolean;\n\n  /**\n   * Sample rate to determine interaction span sampling.\n   * interactionsSampleRate is applied on top of the global tracesSampleRate.\n   * ie a tracesSampleRate of 0.1 and interactionsSampleRate of 0.5 will result in a 0.05 sample rate for interactions.\n   *\n   * Default: 1\n   */\n  interactionsSampleRate: number;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<{\n    /**\n     * @deprecated This property no longer has any effect and will be removed in v8.\n     */\n    _reportAllChanges: boolean;\n  }>;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   * Note that the `enableLongTask` options is deprecated in favor of the option at the top level, and will be removed in v8.\n   *\n   * TODO (v8): Remove enableLongTask\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableLongTask: boolean;\n    enableInteractions: boolean;\n    // eslint-disable-next-line deprecation/deprecation\n    onStartRouteTransaction: (t: Transaction | undefined, ctx: TransactionContext, getCurrentHub: () => Hub) => void;\n  }>;\n\n  /**\n   * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction\n   * context data, or drop the transaction entirely (by setting `sampled = false` in the context).\n   *\n   * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.\n   *\n   * @param context: The context data which will be passed to `startTransaction` by default\n   *\n   * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.\n   */\n  beforeNavigate?(this: void, context: TransactionContext): TransactionContext | undefined;\n\n  /**\n   * Instrumentation that creates routing change transactions. By default creates\n   * pageload and navigation transactions.\n   */\n  routingInstrumentation<T extends Transaction>(\n    this: void,\n    customStartTransaction: (context: TransactionContext) => T | undefined,\n    startTransactionOnPageLoad?: boolean,\n    startTransactionOnLocationChange?: boolean,\n  ): void;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  enableInp: false,\n  interactionsSampleRate: 1,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * @deprecated Use `browserTracingIntegration()` instead.\n */\nexport class BrowserTracing implements Integration {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  public options: BrowserTracingOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  // eslint-disable-next-line deprecation/deprecation\n  private _getCurrentHub?: () => Hub;\n\n  private _collectWebVitals: () => void;\n\n  private _hasSetTracePropagationTargets: boolean;\n  private _interactionIdToRouteNameMapping: InteractionRouteNameMapping;\n  private _latestRoute: {\n    name: string | undefined;\n    context: TransactionContext | undefined;\n  };\n\n  public constructor(_options?: Partial<BrowserTracingOptions>) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    addTracingExtensions();\n\n    if (DEBUG_BUILD) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n    this._interactionIdToRouteNameMapping = {};\n\n    if (this.options.enableInp) {\n      startTrackingINP(this._interactionIdToRouteNameMapping, this.options.interactionsSampleRate);\n    }\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n\n    this._latestRoute = {\n      name: undefined,\n      context: undefined,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    // eslint-disable-next-line deprecation/deprecation\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if (DEBUG_BUILD && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context: TransactionContext) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    if (this.options.enableInp) {\n      this._registerInpInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n  private _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    if (!this._getCurrentHub) {\n      DEBUG_BUILD &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext: TransactionContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = propagationContextFromHeaders(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    this._latestRoute.name = finalContext.name;\n    this._latestRoute.context = finalContext;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (finalContext.sampled === false) {\n      DEBUG_BUILD && logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction) {\n      if (WINDOW.document) {\n        WINDOW.document.addEventListener('readystatechange', () => {\n          if (['interactive', 'complete'].includes(WINDOW.document!.readyState)) {\n            idleTransaction.sendAutoFinishSignal();\n          }\n        });\n\n        if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction as Transaction;\n  }\n\n  /** Start listener for interaction transactions */\n  private _registerInteractionListener(): void {\n    let inflightInteractionTransaction: IdleTransaction | undefined;\n    const registerInteractionTransaction = (): void => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      // eslint-disable-next-line deprecation/deprecation\n      const currentTransaction = getActiveTransaction();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        DEBUG_BUILD &&\n          logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.end();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRoute.name) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context: TransactionContext = {\n        name: this._latestRoute.name,\n        op,\n        trimEnd: true,\n        data: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: this._latestRoute.context\n            ? getSource(this._latestRoute.context)\n            : undefined || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n      }\n    });\n  }\n\n  /** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\n  private _registerInpInteractionListener(): void {\n    const handleEntries = ({ entries }: { entries: PerformanceEntry[] }): void => {\n      const client = getClient();\n      // We need to get the replay, user, and activeTransaction from the current scope\n      // so that we can associate replay id, profile id, and a user display to the span\n      const replay =\n        client !== undefined && client.getIntegrationByName !== undefined\n          ? (client.getIntegrationByName('Replay') as Integration & { getReplayId: () => string })\n          : undefined;\n      const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction();\n      const currentScope = getCurrentScope();\n      const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n      entries.forEach(entry => {\n        if (isPerformanceEventTiming(entry)) {\n          const interactionId = entry.interactionId;\n          if (interactionId === undefined) {\n            return;\n          }\n          const existingInteraction = this._interactionIdToRouteNameMapping[interactionId];\n          const duration = entry.duration;\n          const startTime = entry.startTime;\n          const keys = Object.keys(this._interactionIdToRouteNameMapping);\n          const minInteractionId =\n            keys.length > 0\n              ? keys.reduce((a, b) => {\n                  return this._interactionIdToRouteNameMapping[a].duration <\n                    this._interactionIdToRouteNameMapping[b].duration\n                    ? a\n                    : b;\n                })\n              : undefined;\n          // For a first input event to be considered, we must check that an interaction event does not already exist with the same duration and start time.\n          // This is also checked in the web-vitals library.\n          if (entry.entryType === 'first-input') {\n            const matchingEntry = keys\n              .map(key => this._interactionIdToRouteNameMapping[key])\n              .some(interaction => {\n                return interaction.duration === duration && interaction.startTime === startTime;\n              });\n            if (matchingEntry) {\n              return;\n            }\n          }\n          // Interactions with an id of 0 and are not first-input are not valid.\n          if (!interactionId) {\n            return;\n          }\n          // If the interaction already exists, we want to use the duration of the longest entry, since that is what the INP metric uses.\n          if (existingInteraction) {\n            existingInteraction.duration = Math.max(existingInteraction.duration, duration);\n          } else if (\n            keys.length < MAX_INTERACTIONS ||\n            minInteractionId === undefined ||\n            duration > this._interactionIdToRouteNameMapping[minInteractionId].duration\n          ) {\n            // If the interaction does not exist, we want to add it to the mapping if there is space, or if the duration is longer than the shortest entry.\n            const routeName = this._latestRoute.name;\n            const parentContext = this._latestRoute.context;\n            if (routeName && parentContext) {\n              if (minInteractionId && Object.keys(this._interactionIdToRouteNameMapping).length >= MAX_INTERACTIONS) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this._interactionIdToRouteNameMapping[minInteractionId];\n              }\n              this._interactionIdToRouteNameMapping[interactionId] = {\n                routeName,\n                duration,\n                parentContext,\n                user,\n                activeTransaction,\n                replayId,\n                startTime,\n              };\n            }\n          }\n        }\n      });\n    };\n    addPerformanceInstrumentationHandler('event', handleEntries);\n    addPerformanceInstrumentationHandler('first-input', handleEntries);\n  }\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\nfunction getSource(context: TransactionContext): TransactionSource | undefined {\n  const sourceFromAttributes = context.attributes && context.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\nfunction isPerformanceEventTiming(entry: PerformanceEntry): entry is PerformanceEventTiming {\n  return 'duration' in entry;\n}\n","import type { Transaction, TransactionContext } from '@sentry/types';\nimport { addHistoryInstrumentationHandler, browserPerformanceTimeOrigin, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!WINDOW || !WINDOW.location) {\n    DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = WINDOW.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addHistoryInstrumentationHandler(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.end();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n","import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction, spanToJSON } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document!.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        const { op, status } = spanToJSON(activeTransaction);\n\n        DEBUG_BUILD &&\n          logger.log(`[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${op}`);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          activeTransaction.setStatus(statusType);\n        }\n        // TODO: Can we rewrite this to an attribute?\n        // eslint-disable-next-line deprecation/deprecation\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n","import type { MeasurementUnit } from '@sentry/types';\n\nimport { getActiveTransaction } from './utils';\n\n/**\n * Adds a measurement to the current active transaction.\n */\nexport function setMeasurement(name: string, value: number, unit: MeasurementUnit): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const transaction = getActiveTransaction();\n  if (transaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMeasurement(name, value, unit);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\n\nimport {\n  BrowserClient,\n  defaultStackParser,\n  getCurrentHub,\n  makeFetchTransport,\n  showReportDialog,\n  Breadcrumbs,\n  GlobalHandlers,\n  InboundFilters,\n  FunctionToString,\n  LinkedErrors,\n  HttpContext,\n  TryCatch,\n  BrowserTracing,\n  Replay,\n} from '@sentry/browser';\n\nimport { CaptureConsole } from '@sentry/integrations';\n\nconst integrations = [\n  new InboundFilters(),\n  new FunctionToString(),\n  new TryCatch(),\n  new GlobalHandlers({\n    onerror: true,\n    onunhandledrejection: true,\n  }),\n  new Breadcrumbs({\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n  }),\n  new LinkedErrors({\n    key: 'cause',\n    limit: 5,\n  }),\n  new HttpContext(),\n];\n\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\n\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\n\nconst createClient = (config) =>\n  new BrowserClient({\n    dsn: config.dsn,\n\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n\n    beforeSend: (event) => {\n      event.logger = 'javascript';\n\n      if (config.scrubEmails && event.user?.email) {\n        delete event.user.email;\n      }\n\n      if (config.showFeedback && event.exception) {\n        showReportDialog({ eventId: event.event_id, user: Sentry.getUserData('name') });\n      }\n\n      return event;\n    },\n\n    tracesSampleRate: config.tracesSampleRate,\n    replaysSessionSampleRate: config.replaysSessionSampleRate,\n    replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n\n    integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean),\n  });\n\nwindow.Sentry = { createClient, getCurrentHub, showReportDialog };\n\nwindow.Sentry.getUserData = (nameAttr = 'username') => {\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username(),\n      };\n\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId,\n      };\n    }\n  }\n\n  return userData;\n};\n\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});\n"],"names":["isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","_typeof","require","_regeneratorRuntime","module","exports","__esModule","Op","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","n","getter","d","a","definition","o","get","g","e","window","hmd","children","set","prop","flarum","core","compat","isGlobalObj","Math","GLOBAL_OBJ","global","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","enabled","logger","enable","disable","isEnabled","_extends","assign","bind","target","arguments","source","apply","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","htmlTreeAsString","elem","options","nextStr","currentElem","out","height","len","keyAttrs","Array","isArray","maxStringLength","_htmlElementAsString","separator","parentNode","join","_oO","el","classes","attr","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","getComponentName","truncate","str","max","safeJoin","input","delimiter","output","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","o_O","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","isPojo","memoVal","returnValue","_i","_Object$keys","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","c","getFirstException","event","getEventDescription","eventId","event_id","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","_proto","onfulfilled","onrejected","_this","_executeHandlers","onfinally","_this2","isRejected","_this3","_setResult","RESOLVED","_this4","REJECTED","_this5","_value","_this6","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","DEFAULT_ENVIRONMENT","updateSession","session","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","inner","WeakSet","has","add","splice","_memo","memoize","unmemoize","stringified","_events","document","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","dynamicSamplingContextToSentryBaggageHeader","dynamicSamplingContext","entries","reduce","baggageHeader","_ref4","currentIndex","objectKey","objectValue","baggageEntry","encodeURIComponent","newBaggageHeader","objectToBaggageHeader","acc","_ref2","dscKey","dscValue","baggageHeaderToObject","keyOrValue","decodeURIComponent","trim","_ref3","TRACEPARENT_REGEXP","RegExp","propagationContextFromHeaders","sentryTrace","baggage","traceparentData","traceparent","parentSampled","matches","match","traceId","parentSpanId","extractTraceparentData","baggageObject","curr","currBaggageObject","_ref","SENTRY_BAGGAGE_KEY_PREFIX","baggageHeaderToDynamicSamplingContext","substring","spanId","sampled","dsc","generateSentryTraceHeader","sampledString","spanToTraceContext","span","_span$spanContext","spanContext","span_id","trace_id","_spanToJSON","spanToJSON","op","parent_span_id","tags","origin","spanToTraceHeader","_span$spanContext2","spanIsSampled","spanTimeInputToSeconds","ensureTimestampInSeconds","getTime","getSpanJSON","spanIsSpanClass","traceFlags","debugIdStackParserCache","WeakMap","captureContextKeys","captureEvent","getCurrentHub","addBreadcrumb","breadcrumb","getClient","getCurrentScope","getScope","getRootSpan","transaction","getDynamicSamplingContextFromClient","client","scope","getOptions","public_key","getDsn","publicKey","user_segment","getUser","segment","emit","getDynamicSamplingContextFromSpan","txn","v7FrozenDsc","_frozenDynamicSamplingContext","_txn$metadata","metadata","maybeSampleRate","sampleRate","sample_rate","jsonSpan","description","applyScopeDataToEvent","fingerprint","breadcrumbs","sdkProcessingMetadata","extra","contexts","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","trace","rootSpan","applySpanToEvent","maybeArray","concat","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","eventProcessors","attachments","propagationContext","mergeAndOverwriteScopeData","mergeVal","globalScope","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","clone","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","_extends2","setExtras","extras","setExtra","_extends3","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","update","captureContext","scopeToMerge","scopeData","getScopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","captureException","warn","syntheticException","originalException","captureMessage","SDK_VERSION","API_VERSION","parseFloat","Hub","isolationScope","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","_this$getStackTop","_ref$beforeBreadcrumb","beforeBreadcrumb","_ref$maxBreadcrumbs","finalBreadcrumb","configureScope","_this$getStackTop2","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","_this$getStackTop3","_ref2$environment","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","_this$getStackTop4","sentry","getMainCarrier","extensions","_len","args","_key","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","integrations","_step","_iterator","_createForOfIteratorHelperLoose","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","processEvent","convertIntegrationFnToClass","originalFunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","lastException","possibleMessages","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","frames","stacktrace","frame","filename","_getLastValidUrl","oO","SETUP_CLIENTS","functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","setTimeout","rest","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","onerror","msg","line","column","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","normalizeDepth","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","_getOptions","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","_getOptions2","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","log","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","addFetchInstrumentationHandler","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","_parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","addHistoryInstrumentationHandler","instrumentHistory","isChromePackagedApp","chromeVar","chrome","app","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","to","from","historyReplacementFunction","originalHistoryFunction","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","breadcrumbsIntegration","dom","category","_getConsoleBreadcrumbHandler","addClickKeypressInstrumentationHandler","componentName","serializeAttribute","element","_isEvent","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","_getFetchBreadcrumbHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","maxValueLength","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","request","referrer","headers","Referer","HttpContext","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","_inheritsLoose","subClass","superClass","_defineProperties","props","descriptor","prim","toPrimitive","_createClass","Constructor","protoProps","staticProps","SpanStatus","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","setHttpStatus","httpStatus","setData","spanStatus","getSpanStatusFromHttpCode","setStatus","SpanRecorder","maxlen","_maxlen","spans","spanRecorder","Span","_traceId","_spanId","_startTime","instrumenter","_attributes","setAttributes","attributes","_name","_parentSpanId","_sampled","_status","_endTime","exclusiveTime","_exclusiveTime","_measurements","measurements","_proto2","startChild","childSpan","_extends4","setAttribute","setName","updateName","isSuccess","end","toTraceparent","toContext","_getData","updateWithContext","getTraceContext","start_timestamp","_metrics_summary","getMetricSummaryJsonForSpan","profile_id","exclusive_time","isRecording","hasData","hasAttributes","string","startTime","endTime","hasTracingEnabled","maybeOptions","enableTracing","startInactiveSpan","ctx","normalizeContext","parentSpan","onlyIfParent","temporaryScope","forceTransaction","_parentSpan$spanConte","_isolationScope$getPr","ISOLATION_SCOPE_ON_START_SPAN_FIELD","SCOPE_ON_START_SPAN_FIELD","setCapturedScopesOnSpan","createChildSpanOrTransaction","Transaction","_Span","transactionContext","_hub","_metadata","_trimEnd","trimEnd","incomingDynamicSamplingContext","initSpanRecorder","setMeasurement","unit","setMetadata","newMetadata","timestampInS","_finishTransaction","getDynamicSamplingContext","setHub","getProfileId","finishedSpans","endTimes","current","_getCapturedScopesOnS","capturedSpanScope","capturedSpanIsolationScope","transaction_info","recordDroppedEvent","newName","spanMetadata","TRACING_DEFAULTS","idleTimeout","finalTimeout","heartbeatInterval","IDLE_TRANSACTION_FINISH_REASONS","IdleTransactionSpanRecorder","_SpanRecorder","_pushActivity","_popActivity","transactionSpanId","originalEnd","IdleTransaction","_Transaction","_idleHub","_idleTimeout","_finalTimeout","_heartbeatInterval","_onScope","delayAutoFinishUntilSignal","activities","_heartbeatCounter","_finished","_idleTimeoutCanceledPermanently","_beforeFinishCallbacks","_finishReason","_autoFinishAllowed","_restartIdleTimeout","endTimestampInS","spanStartedBeforeTransactionFinish","timeoutWithMarginOfError","registerBeforeFinishCallback","_pingHeartbeat","cancelIdleTimeout","_temp","restartOnChildSpanChange","_idleTimeoutID","setFinishReason","sendAutoFinishSignal","_beat","heartbeatString","_prevHeartbeatString","_this7","getActiveTransaction","maybeHub","errorsInstrumented","errorCallback","activeTransaction","sampleTransaction","samplingContext","Number","tracesSampler","tracesSampleRate","isValidSampleRate","rate","_startTransaction","_experiments","maxSpans","startIdleTransaction","onScope","tag","po","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","navigation","navigationEntry","entryType","getNavigationEntryFromPerformanceTiming","getActivationStart","navEntry","activationStart","initMetric","navigationType","prerendering","rating","floor","observe","opts","PerformanceObserver","supportedEntryTypes","list","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","interactionCountEstimate","minKnownInteractionId","maxKnownInteractionId","updateEstimate","interactionId","min","initInteractionCountPolyfill","durationThreshold","getInteractionCountForNavigation","interactionCount","longestInteractionList","longestInteractionMap","processEntry","minLongestInteraction","existingInteraction","latency","interaction","b","reportedMetricIDs","whenReady","onTTFB","onReport","report","responseStart","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addPerformanceInstrumentationHandler","instrumentPerformanceObserver","getCleanupCallback","instrumentCls","sessionValue","sessionEntries","handleEntries","hadRecentInput","firstSessionEntry","lastSessionEntry","stopListening","takeRecords","onCLS","instrumentFid","visibilityWatcher","handleEntry","processingStart","disconnect","onFID","instrumentLcp","lastEntry","capture","onLCP","instrumentTtfb","instrumentInp","prevEntry","candidateInteractionIndex","inp","onINP","addMetricObserver","previousValue","stopOnCallback","DSN_REGEX","dsnToString","dsn","withPassword","pass","port","projectId","dsnFromComponents","components","makeDsn","exec","_match$slice","_match$slice$","_match$slice$2","projectMatch","dsnFromString","createEnvelope","items","forEachEnvelopeItem","envelope","envelopeItem","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","_step2","_iterator2","itemHeaders","payload","stringifiedPayload","buffers","_step3","totalLength","buf","merged","offset","_iterator3","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","sdk","_metadataOrEvent$sdk","createSpanItem","isMeasurementValue","isFinite","_startChild","excluded","sourceKeys","_objectWithoutPropertiesLoose","_excluded","msToSec","time","getBrowserPerformanceAPI","_lcpEntry","_clsEntry","_performanceCursor","startTrackingWebVitals","fidCallback","_ref5","clsCallback","lcpCallback","addLcpInstrumentationHandler","ttfbCallback","_ref6","INP_ENTRY_MAP","click","pointerdown","pointerup","mousedown","mouseup","touchstart","touchend","mouseover","mouseout","mouseenter","mouseleave","pointerover","pointerout","pointerenter","pointerleave","dragstart","dragend","drag","dragenter","dragleave","dragover","drop","keydown","keyup","keypress","_addPerformanceNavigationTiming","eventEnd","start","setResourceEntrySizeData","dataKey","entryVal","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","enableHTTPTimings","tracingOrigins","tracePropagationTargets","instrumentOutgoingRequests","_traceFetch$traceXHR$","shouldCreateSpanForRequest","shouldCreateSpan","shouldAttachHeadersWithTargets","shouldAttachHeaders","createdSpan","spanOrigin","shouldCreateSpanResult","_handlerData$fetchDat","fullUrl","URL","getFullURL","__span","requestSpan","sentryTraceHeader","sentryBaggageHeader","newHeaders","existingBaggageHeader","newBaggageHeaders","addTracingHeadersToFetchRequest","contentLength","contentLengthNum","endSpan","instrumentFetchRequest","addHTTPTimings","__sentry_xhr_span_id__","setRequestHeader","setHeaderOnXhr","xhrCallback","cleanup","nextHopProtocol","initiatorType","isPerformanceResourceTiming","endsWith","resourceTiming","_extractNetworkProtoc","char","_nextHopProtocol$spli","extractNetworkProtocol","timingSpanData","getAbsoluteTime","redirectStart","fetchStart","domainLookupStart","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseEnd","resourceTimingEntryToSpanData","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","enableLongTask","enableInp","interactionsSampleRate","BrowserTracing","_hasSetTracePropagationTargets","_collectWebVitals","_interactionIdToRouteNameMapping","interactionIdtoRouteNameMapping","inpCallback","interactionIdToRouteNameMapping","_ref7","find","interactionType","routeName","parentContext","replayId","userDisplay","profileId","replay_id","getSampleRate","sent_at","transport","getTransport","send","_trackINP","startTrackingINP","enableInteractions","_latestRoute","_getCurrentHub","_this$options","instrumentRouting","_createRouteTransaction","onStartRouteTransaction","_registerInteractionListener","_registerInpInteractionListener","expandedContext","_this$options2","beforeNavigate","isPageloadTransaction","_propagationContextFr","getMetaContent","modifiedContext","finalContext","idleTransaction","performanceEntries","transactionStartTime","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","resourceUrl","parsedUrl","renderBlockingStatus","_addResourceSpans","connection","effectiveType","rtt","deviceMemory","hardwareConcurrency","_trackNavigator","_addTtfbRequestTimeToMeasurements","oldValue","measurementTimestamp","normalizedValue","fidMark","cls","measurementName","size","sources","node","_tagMetricInfo","addPerformanceEntries","inflightInteractionTransaction","registerInteractionTransaction","_data","_this3$options","currentTransaction","getSource","replay","getIntegrationByName","getReplayId","currentScope","isPerformanceEventTiming","minInteractionId","metaName","selector","metaTag","querySelector","sourceFromAttributes","sourceFromData","sourceFromMetadata","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_getPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","valueOf","isNativeReflectConstruct","instance","_wrapNativeSuper","_cache","Wrapper","_optionalChain","ops","lastAccessLHS","makeLogger","isSyntheticEvent","prepareEvent","_options$normalizeDep","_options$normalizeMax","normalizeMaxBreadth","prepared","dist","_options$maxValueLeng","applyClientOptions","integrationNames","applyIntegrationsMetadata","debugIdStackFramesCache","debugIdMap","_sentryDebugIds","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","normalizeEvent","removeTrailingSlash","updateRateLimits","limits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","_limit$split","retryAfter","categories","namespaces","headerDelay","delay","all","headerDate","parse","parseRetryAfterHeader","isBrowser","NodeType$1","REPLAY_SESSION_KEY","UNABLE_TO_SEND_REPLAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MAX_REPLAY_DURATION","_optionalChain$5","_value2","isShadowRoot","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","s","rules","cssRules","cssText","stringifyRule","rule","importStringified","regex","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","meta","oldNode","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","canvasService","canvasCtx","_id","tagNameRegex","genId","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","isSVGElement","ownerSVGElement","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","descriptorsStr","inParens","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","_options$skipChild","skipChild","_options$inlineStyles","inlineStylesheet","_options$maskInputOpt3","maskTextFn","slimDOMOptions","_options$dataURLOptio3","dataURLOptions","_options$inlineImages","inlineImages","_options$recordCanvas","recordCanvas","onSerialize","onIframeLoad","_options$iframeLoadTi","iframeLoadTimeout","onStylesheetLoad","_options$stylesheetLo","stylesheetLoadTimeout","_options$keepIframeSr","keepIframeSrcFn","_options$newlyAddedEl3","newlyAddedElement","_options$preserveWhit","preserveWhiteSpace","_serializedNode","_options$maskInputOpt","_options$dataURLOptio","_options$newlyAddedEl","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","isCustomElement","_options$maskInputOpt2","_options$dataURLOptio2","_options$newlyAddedEl2","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","stylesheet","styleSheets","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","getContext","x","width","y","getImageData","originalGetImageData","Uint32Array","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","_n$getBoundingClientR","getBoundingClientRect","rr_width","rr_height","src","contentDocument","rr_src","customElements","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","_Array$from","serializedChildNode","isElement$1","_i2","_Array$from2","isShadow","iframeEl","win","fired","blankUrl","timer","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","_value3","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","timeout","previous","leading","remaining","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","cachedImplementations","cached","impl","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_value4","_len5","_key5","isNodeInLinkedList","errorHandler","DoubleLinkedList","tail","_proto3","position","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","m","attributeName","isInputMasked","unattachedDoc","implementation","createHTMLDocument","old","_i3","_Array$from3","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","_i4","_Array$from4","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","childN","_proto4","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","r","_isAncestorInSet","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_value6","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","scrollCb","sampling","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref10","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","v","lastInputValue","currentWindow","h","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref15","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_15","_16","adoptStyleSheets","initObservers","_hooks","_ref9","viewportResizeCb","lastH","lastW","_step4","mutationObserver","mousemoveHandler","mousemoveCb","mousemove","timeBaseline","callbackThreshold","mousemoveCallback","positions","wrappedCb","totalOffset","timeOffset","updatePosition","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","_ref18","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref11","_ref12","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","_getIdAndStyleId","replaceSync","deleteRule","_getIdAndStyleId2","_getIdAndStyleId3","_getIdAndStyleId4","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref13","typeKey","_getIdAndStyleId5","_getIdAndStyleId6","_ref14","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref16","_ref17","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_getIdAndStyleId7","_17","removeProperty","_getIdAndStyleId8","remove","initStyleDeclarationObserver","fontObserver","collectFonts","_ref19","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","count","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","initSelectionObserver","customElementObserver","_ref20","customElementCb","initCustomElementObserver","pluginHandlers","_iterator4","plugins","plugin","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","_proto5","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","_this8","getRemoteId","getRemoteIds","ids","_this9","_optionalChain$1","_value7","_len7","_key7","wrappedEmit","_takeFullSnapshot","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","_proto6","addLoadListener","IframeManager","iframes","crossOriginIframeMap","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","_proto7","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","_this10","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","_step5","_iterator5","_this11","child","_this12","ShadowDomManagerNoop","_proto8","ShadowDomManager","shadowDoms","restoreHandlers","_proto9","patchAttachShadow","_this13","iframeElement","manager","option","CanvasManagerNoop","_proto10","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","_proto11","linkEl","trackStylesheetInLinkElement","_step6","adoptedStyleSheetData","styleIds","_iterator6","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","_proto12","_this14","onRequestAnimationFrame","thisBuffer","destroy","checkoutEveryNms","checkoutEveryNth","_options$blockClass","_options$blockSelecto","_options$unblockSelec","_options$ignoreClass","_options$ignoreSelect","_options$maskAllText","_options$maskTextClas","_options$unmaskTextCl","_options$maskTextSele","_options$unmaskTextSe","_options$inlineStyles2","maskAllInputs","_maskInputOptions","_slimDOMOptions","_options$maxCanvasSiz","maxCanvasSize","packFn","_options$sampling","_options$dataURLOptio4","mousemoveWait","_options$recordCanvas2","_options$recordCrossO","_options$recordAfter","recordAfter","_options$userTriggere","_options$collectFonts","_options$inlineImages2","_options$keepIframeSr2","_options$ignoreCSSAtt","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","lastFullSnapshotEvent","color","date","month","number","tel","week","select","radio","checkbox","NodeList","DOMTokenList","polyfill","incrementalSnapshotCount","eventProcessor","_step7","_iterator7","postMessage","exceedCount","exceedTime","takeFullSnapshot","_step8","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","_iterator8","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","_ref3$mirror","_ref3$blockClass","_ref3$blockSelector","_ref3$unblockSelector","_ref3$maskAllText","_ref3$maskTextClass","_ref3$unmaskTextClass","_ref3$maskTextSelecto","_ref3$unmaskTextSelec","_ref3$inlineStyleshee","_ref3$inlineImages","_ref3$recordCanvas","_ref3$maskAllInputs","_ref3$slimDOM","slimDOM","_ref3$keepIframeSrcFn","initialOffset","canvasMutationCb","CustomElement","timestampToMs","timestampToS","addBreadcrumbEvent","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","_proto13","addListeners","_this15","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_len8","_key8","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","_this16","timedOutClicks","mutationAfter","scrollAfter","_i5","_timedOutClicks","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","_this17","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","decodedBodySize","encodedBodySize","responseStatus","transferSize","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","setupPerformanceObserver","addPerformanceEntry","onEntries","_ref21","clearCallbacks","_ref22","replayPerformanceEntries","getLargestContentfulPaint","clearCallback","EventBufferSizeExceededError","_Error","EventBufferArray","events","_totalSize","hasCheckout","_proto14","addEvent","_addEvent2","_callee","eventSize","_context2","_x","_this18","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","_proto15","ensureReady","_this19","_ensureReadyPromise","_ref23","success","terminate","_this20","_getAndIncrementId","_ref24","EventBufferCompressionWorker","_earliestTimestamp","_proto16","_sendEventToWorker","_finishRequest","_finishRequest2","_callee2","_context3","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","_proto17","_finish","_callee3","_context4","ensureWorkerIsLoaded","_ensureWorkerIsLoaded2","_callee4","_context5","t0","_switchToCompressionWorker","_switchToCompressionWorker2","_callee5","_this$_fallback","addEventPromises","_iterator9","_step9","_context6","hasEvents","hasSessionStorage","sessionStorage","isSampled","lastActivity","segmentId","previousSessionId","saveSession","setItem","createSession","_ref26","sessionSampleRate","allowBuffering","_ref26$stickySession","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref28","maxReplayDuration","sessionIdleExpire","_ref28$targetTime","shouldRefreshSession","_ref29","loadOrCreateSession","_ref30","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","fetchSession","addEventSync","shouldAddEvent","_addEvent","_x2","_x3","_x4","_addEvent3","_callee11","replayOptions","eventAfterPossibleCallback","_context12","eventBuffer","recordingMode","maybeApplyCallback","beforeAddRecordingEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","isCustomEvent","isTransactionEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","__sentry__baseTransport__","isBaseTransportSend","sendResponse","replayContext","traceIds","handleTransactionEvent","errorIds","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","createPerformanceSpans","_ref31","addNetworkBreadcrumb","hubOrClient","tunnel","isHub","checkDsn","checkTunnel","getBodySize","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","_normalizeNetworkBody","first","last","exceedsSizeLimit","isProbablyJson","truncatedBody","e3","normalizeNetworkBody","normalizedBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","urls","baseURI","fixedUrl","getFullUrl","_captureFetchBreadcrumbToReplay","_callee12","_context13","_prepareFetchData","_x8","_x9","_x10","_prepareFetchData2","_callee13","_hint$startTimestamp2","_hint$endTimestamp2","_breadcrumb$data2","_breadcrumb$data2$sta","requestBodySize","responseBodySize","captureDetails","_context14","request_body_size","response_body_size","networkDetailAllowUrls","networkDetailDenyUrls","_getRequestInfo","_getResponseInfo","_ref32","networkCaptureBodies","networkRequestHeaders","getHeadersFromOptions","_getBodyString","_getFetchRequestArgBody","bodyStr","_x11","_x12","_x13","_x14","_getResponseInfo2","_callee14","_ref33","networkResponseHeaders","_yield$_parseFetchRes","bodyText","_context15","getAllHeaders","_parseFetchResponseBody","getResponseData","_ref34","_x15","_parseFetchResponseBody2","_callee15","_context16","_tryCloneResponse","_tryGetResponseText","allHeaders","_x16","_getResponseText2","_getResponseText","txt","_callee16","_context17","_captureXhrBreadcrumbToReplay","_callee17","_context18","_prepareXhrData","_hint$startTimestamp","_hint$endTimestamp","_breadcrumb$data","_breadcrumb$data$stat","getAllResponseHeaders","_line$split","getResponseHeaders","_ref35","requestBody","requestWarning","_ref36","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","responseBody","responseWarning","handleNetworkBreadcrumbs","_replay$getOptions2","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","_getBodySize","enrichXhrBreadcrumb","_x17","_x18","_x19","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","_x5","_x6","_x7","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","handleXhr","handleXhrSpanListener","_LAST_BREADCRUMB","addGlobalListeners","newBreadcrumb","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","handleScopeListener","_getDomTarget","isClick","getDomTarget","handleDom","clickDetector","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","includeAfterSendEventHandling","afterSendHandler","isReplayEvent","flush","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","handleGlobalEventListener","hasHooks","exceptionValue","handleHydrationError","handleBeforeSendEvent","lastTransaction","feedbackEvent","includeReplay","addMemoryEntry","_x20","_addMemoryEntry","_callee18","_context19","memoryEntry","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","getHandleRecordingEmit","hadFirstEvent","_isCheckout","isIncrementalEvent","isIncrementalMouseInteraction","_event$data","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","createReplayEnvelope","replayEvent","recordingData","sdkInfo","createEventEnvelopeHeaders","prepareRecordingData","_ref37","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","_x21","_prepareReplayEvent","_callee19","_ref38","eventHint","preparedEvent","_ref48","_context20","_integrations","platform","getSdkMetadata","sendReplayRequest","_x22","_sendReplayRequest","_callee20","_ref39","segment_id","eventContext","preparedRecordingData","baseEvent","rateLimits","_context21","replay_start_timestamp","error_ids","trace_ids","replay_type","cause","TransportStatusCodeError","isRateLimited","dataCategory","disabledUntil","RateLimitError","_Error2","_Error3","_this21","sendReplay","_x23","_x24","_sendReplay","_callee22","replayData","retryConfig","_context23","interval","_retryCount","_callee21","_context22","THROTTLED","ReplayContainer","_ref40","_this22","recordingOptions","__init5","__init6","_lastActivity","_isEnabled","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","_flush","debounced","cancel","debounce","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","wasThrottled","throttle","_this$getOptions","slowClickTimeout","slowClickIgnoreSelectors","_proto18","_canvas","initializeSampling","_this$_options","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","_stop","_callee6","_temp2","_ref41","_ref41$forceFlush","forceFlush","_context7","_removeListeners","force","removeItem","deleteSession","_x25","pause","resume","_checkSession","_sendBufferedReplayOrFlush","_callee7","_temp3","_ref42$continueRecord","continueRecording","activityTime","hasStoppedRecording","_context8","flushImmediate","_updateSessionActivity","_maybeSaveSession","_x26","cbResult","updateUserActivity","conditionalFlush","cancelFlush","urlPath","_clearContext","_this23","_ref25","customWorkerUrl","workerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","_refreshSession","_refreshSession2","_callee8","_context9","_x27","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_performanceCleanupCallback","_this24","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","_this25","_this26","_this27","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_this28","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","_runFlush2","_callee9","_context10","_this29","_ref43","_callee10","_temp4","_ref44$force","tooShort","tooLong","_context11","minReplayDuration","_flushLock","_x28","_this30","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay$1","_temp5","_ref47","_ref47$flushMinDelay","_ref47$flushMaxDelay","_ref47$minReplayDurat","_ref47$maxReplayDurat","_ref47$stickySession","_ref47$useCompression","_ref47$_experiments","_ref47$maskAllText","_ref47$maskAllInputs","_ref47$blockAllMedia","_ref47$mutationBreadc","_ref47$mutationLimit","_ref47$slowClickTimeo","_ref47$slowClickIgnor","_ref47$networkDetailA","_ref47$networkDetailD","_ref47$networkCapture","_ref47$networkRequest","_ref47$networkRespons","_ref47$mask","mask","_ref47$maskAttributes","maskAttributes","_ref47$unmask","unmask","_ref47$block","block","_ref47$unblock","unblock","_ref47$ignore","ignore","maskFn","privacyOptions","_ref45","getPrivacyOptions","password","_ref46","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","__initStatic","_proto19","_this31","_setup","_initialize","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","SentryError","logLevel","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","_encodedAuth","createMetricEnvelope","metricBucketItems","tagEntries","maybeTags","metricType","serializeMetricBuckets","createMetricEnvelopeItem","BaseClient","_integrationsInitialized","_numProcessing","_outcomes","_dsn","_transport","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","sendSession","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","forceInitialize","_setupIntegrations","getIntegrationById","integrationId","integrationName","addIntegration","isAlreadyInstalled","sendEvent","newItem","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelope","promise","_sendEnvelope","createSessionEnvelope","eventOrCount","sendClientReports","captureAggregateMetrics","metricsEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","ticked","clearInterval","_prepareEvent","_processEvent","finalEvent","isTransaction","beforeSendLabel","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","_clearOutcomes","outcomes","_key$split","quantity","BrowserClient","_BaseClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","createTransport","makeRequest","task","$","taskProducer","drain","capturedSetTimeout","makePromiseBuffer","bufferSize","filteredEnvelopeItems","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","subMatch","_extractSafariExtensi","extractSafariExtensionDetails","_extractSafariExtensi2","isSafariExtension","isSafariWebExtension","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","_hub$getStackTop","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","injectionPoint","severityLevelFromString","CaptureConsole","levels","consoleHandler","Replay","Sentry","createClient","config","_event$user","scrubEmails","showFeedback","getUserData","captureConsole","nameAttr","userData","_app$session","_userData","userId"],"sourceRoot":""}