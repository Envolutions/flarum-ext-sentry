{"version":3,"file":"forum.tracing.replay.js","mappings":"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","sources":["webpack://@fof/sentry/../../src/node.ts","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/harmony module decorator","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/webpack/runtime/make namespace object","webpack://@fof/sentry/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/sentry/../../src/debug-build.ts","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../src/baggage.ts","webpack://@fof/sentry/../../src/tracing.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../src/metrics/metric-summary.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@fof/sentry/../../src/semanticAttributes.ts","webpack://@fof/sentry/../../../src/tracing/spanstatus.ts","webpack://@fof/sentry/../../../src/tracing/span.ts","webpack://@fof/sentry/../../../src/utils/hasTracingEnabled.ts","webpack://@fof/sentry/../../../src/tracing/trace.ts","webpack://@fof/sentry/../../../src/tracing/transaction.ts","webpack://@fof/sentry/../../../src/tracing/idletransaction.ts","webpack://@fof/sentry/../../../src/tracing/utils.ts","webpack://@fof/sentry/../../../src/tracing/errors.ts","webpack://@fof/sentry/../../../src/tracing/sampling.ts","webpack://@fof/sentry/../../../src/tracing/hubextensions.ts","webpack://@fof/sentry/../../../src/common/debug-build.ts","webpack://@fof/sentry/../../../../../../src/browser/web-vitals/lib/polyfills/interactionCountPolyfill.ts","webpack://@fof/sentry/../../../src/browser/types.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/bindReporter.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getActivationStart.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/initMetric.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/generateUniqueID.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/observe.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/onHidden.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getCLS.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getFID.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getINP.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getLCP.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/onTTFB.ts","webpack://@fof/sentry/../../../src/browser/instrument.ts","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/../../src/span.ts","webpack://@fof/sentry/../../../../src/browser/metrics/utils.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@fof/sentry/../../../../src/browser/metrics/index.ts","webpack://@fof/sentry/../../../src/browser/request.ts","webpack://@fof/sentry/../../../src/common/fetch.ts","webpack://@fof/sentry/../../../src/browser/browsertracing.ts","webpack://@fof/sentry/../../../src/browser/router.ts","webpack://@fof/sentry/../../../src/browser/backgroundtab.ts","webpack://@fof/sentry/../../../src/tracing/measurement.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@fof/sentry/../../../src/buildPolyfills/_optionalChain.ts","webpack://@fof/sentry/../../../src/utils/isSentryRequestUrl.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../src/isBrowser.ts","webpack://@fof/sentry/../../../src/constants.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","webpack://@fof/sentry/../../../src/buildPolyfills/_nullishCoalesce.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","webpack://@fof/sentry/../../../src/types/rrweb.ts","webpack://@fof/sentry/../../../src/util/timestamp.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addBreadcrumbEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/domUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/onWindowOpen.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleClick.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../src/util/createBreadcrumb.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/getAttributesToRecord.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleDom.ts","webpack://@fof/sentry/../../../src/util/createPerformanceEntries.ts","webpack://@fof/sentry/../../../src/coreHandlers/performanceObserver.ts","webpack://@fof/sentry/../../../src/debug-build.ts","webpack://@fof/sentry/../../../src/util/log.ts","webpack://@fof/sentry/../../../src/eventBuffer/error.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferArray.ts","webpack://@fof/sentry/../../../src/eventBuffer/WorkerHandler.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferCompressionWorker.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferProxy.ts","webpack://@fof/sentry/../../../src/util/hasSessionStorage.ts","webpack://@fof/sentry/../../../src/util/isSampled.ts","webpack://@fof/sentry/../../../src/session/Session.ts","webpack://@fof/sentry/../../../src/session/saveSession.ts","webpack://@fof/sentry/../../../src/session/createSession.ts","webpack://@fof/sentry/../../../src/util/isExpired.ts","webpack://@fof/sentry/../../../src/util/isSessionExpired.ts","webpack://@fof/sentry/../../../src/session/shouldRefreshSession.ts","webpack://@fof/sentry/../../../src/session/loadOrCreateSession.ts","webpack://@fof/sentry/../../../src/session/fetchSession.ts","webpack://@fof/sentry/../../../src/util/addEvent.ts","webpack://@fof/sentry/../../../src/util/eventUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleAfterSendEvent.ts","webpack://@fof/sentry/../../../src/util/createPerformanceSpans.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/shouldFilterRequest.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/networkUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/fetchUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/xhrUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleFetch.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleXhr.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleScope.ts","webpack://@fof/sentry/../../../src/util/addGlobalListeners.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleHistory.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleGlobalEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/isRrwebError.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleBeforeSendEvent.ts","webpack://@fof/sentry/../../../src/util/addMemoryEntry.ts","webpack://@fof/sentry/../../../src/util/handleRecordingEmit.ts","webpack://@fof/sentry/../../../src/util/createReplayEnvelope.ts","webpack://@fof/sentry/../../../src/util/prepareRecordingData.ts","webpack://@fof/sentry/../../../src/util/prepareReplayEvent.ts","webpack://@fof/sentry/../../../src/util/sendReplayRequest.ts","webpack://@fof/sentry/../../../src/util/sendReplay.ts","webpack://@fof/sentry/../../../src/util/throttle.ts","webpack://@fof/sentry/../../../src/replay.ts","webpack://@fof/sentry/../../../src/util/debounce.ts","webpack://@fof/sentry/../../../src/session/clearSession.ts","webpack://@fof/sentry/../../../src/eventBuffer/index.ts","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/index.js","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/worker.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleKeyboardEvent.ts","webpack://@fof/sentry/../../../src/util/getPrivacyOptions.ts","webpack://@fof/sentry/../../../src/integration.ts","webpack://@fof/sentry/../../../src/util/maskAttribute.ts","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { DynamicSamplingContext } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { isString } from './is';\nimport { logger } from './logger';\n\nexport const BAGGAGE_HEADER_NAME = 'baggage';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject: Readonly<Record<string, string>> = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      for (const key of Object.keys(currBaggageObject)) {\n        acc[key] = currBaggageObject[key];\n      }\n      return acc;\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n","import type { PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n *\n * @deprecated Use `propagationContextFromHeaders` instead.\n */\n// TODO(v8): Remove this function\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceparentData,\n      dynamicSamplingContext: undefined,\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        spanId: uuid4().substring(16),\n      },\n    };\n  } else {\n    return {\n      traceparentData,\n      dynamicSamplingContext: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        parentSpanId: parentSpanId || uuid4().substring(16),\n        spanId: uuid4().substring(16),\n        sampled: parentSampled,\n        dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      },\n    };\n  }\n}\n\n/**\n * Create a propagation context from incoming headers.\n */\nexport function propagationContextFromHeaders(\n  sentryTrace: string | undefined,\n  baggage: string | number | boolean | string[] | null | undefined,\n): PropagationContext {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || uuid4(),\n      spanId: uuid4().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || uuid4(),\n      parentSpanId: parentSpanId || uuid4().substring(16),\n      spanId: uuid4().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","export const SDK_VERSION = '7.119.1';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import type { MeasurementUnit, Span } from '@sentry/types';\nimport type { MetricSummary } from '@sentry/types';\nimport type { Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport { getActiveSpan } from '../tracing';\nimport type { MetricType } from './types';\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\ntype MetricSummaryStorage = Map<string, [string, MetricSummary]>;\n\nlet SPAN_METRIC_SUMMARY: WeakMap<Span, MetricSummaryStorage> | undefined;\n\nfunction getMetricStorageForSpan(span: Span): MetricSummaryStorage | undefined {\n  return SPAN_METRIC_SUMMARY ? SPAN_METRIC_SUMMARY.get(span) : undefined;\n}\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nexport function getMetricSummaryJsonForSpan(span: Span): Record<string, Array<MetricSummary>> | undefined {\n  const storage = getMetricStorageForSpan(span);\n\n  if (!storage) {\n    return undefined;\n  }\n  const output: Record<string, Array<MetricSummary>> = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    if (!output[exportKey]) {\n      output[exportKey] = [];\n    }\n\n    output[exportKey].push(dropUndefinedKeys(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nexport function updateMetricSummaryOnActiveSpan(\n  metricType: MetricType,\n  sanitizedName: string,\n  value: number,\n  unit: MeasurementUnit,\n  tags: Record<string, Primitive>,\n  bucketKey: string,\n): void {\n  const span = getActiveSpan();\n  if (span) {\n    const storage = getMetricStorageForSpan(span) || new Map<string, [string, MetricSummary]>();\n\n    const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n    const bucketItem = storage.get(bucketKey);\n\n    if (bucketItem) {\n      const [, summary] = bucketItem;\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: Math.min(summary.min, value),\n          max: Math.max(summary.max, value),\n          count: (summary.count += 1),\n          sum: (summary.sum += value),\n          tags: summary.tags,\n        },\n      ]);\n    } else {\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: value,\n          max: value,\n          count: 1,\n          sum: value,\n          tags,\n        },\n      ]);\n    }\n\n    if (!SPAN_METRIC_SUMMARY) {\n      SPAN_METRIC_SUMMARY = new WeakMap();\n    }\n\n    SPAN_METRIC_SUMMARY.set(span, storage);\n  }\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import type { Span } from '@sentry/types';\n\n/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n\nexport type SpanStatusType =\n  /** The operation completed successfully. */\n  | 'ok'\n  /** Deadline expired before operation could complete. */\n  | 'deadline_exceeded'\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  | 'unauthenticated'\n  /** 403 Forbidden */\n  | 'permission_denied'\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  | 'not_found'\n  /** 429 Too Many Requests */\n  | 'resource_exhausted'\n  /** Client specified an invalid argument. 4xx. */\n  | 'invalid_argument'\n  /** 501 Not Implemented */\n  | 'unimplemented'\n  /** 503 Service Unavailable */\n  | 'unavailable'\n  /** Other/generic 5xx. */\n  | 'internal_error'\n  /** Unknown. Any non-standard HTTP status code. */\n  | 'unknown_error'\n  /** The operation was cancelled (typically by the user). */\n  | 'cancelled'\n  /** Already exists (409) */\n  | 'already_exists'\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  | 'failed_precondition'\n  /** The operation was aborted, typically due to a concurrency issue. */\n  | 'aborted'\n  /** Operation was attempted past the valid range. */\n  | 'out_of_range'\n  /** Unrecoverable data loss or corruption */\n  | 'data_loss';\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatusType {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @deprecated Use {@link spanStatusFromHttpCode} instead.\n * This export will be removed in v8 as the signature contains a typo.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport const spanStatusfromHttpCode = getSpanStatusFromHttpCode;\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  // TODO (v8): Remove these calls\n  // Relay does not require us to send the status code as a tag\n  // For now, just because users might expect it to land as a tag we keep sending it.\n  // Same with data.\n  // In v8, we replace both, simply with\n  // span.setAttribute('http.response.status_code', httpStatus);\n\n  // eslint-disable-next-line deprecation/deprecation\n  span.setTag('http.status_code', String(httpStatus));\n  // eslint-disable-next-line deprecation/deprecation\n  span.setData('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Instrumenter,\n  Measurements,\n  Primitive,\n  Span as SpanInterface,\n  SpanAttributeValue,\n  SpanAttributes,\n  SpanContext,\n  SpanContextData,\n  SpanJSON,\n  SpanOrigin,\n  SpanTimeInput,\n  TraceContext,\n  Transaction,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport {\n  SEMANTIC_ATTRIBUTE_PROFILE_ID,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n} from '../semanticAttributes';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport {\n  TRACE_FLAG_NONE,\n  TRACE_FLAG_SAMPLED,\n  spanTimeInputToSeconds,\n  spanToJSON,\n  spanToTraceContext,\n  spanToTraceHeader,\n} from '../utils/spanUtils';\nimport type { SpanStatusType } from './spanstatus';\nimport { setHttpStatus } from './spanstatus';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      // eslint-disable-next-line deprecation/deprecation\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * Tags for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public tags: { [key: string]: Primitive };\n\n  /**\n   * Data for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any };\n\n  /**\n   * List of spans that were finalized\n   *\n   * @deprecated This property will no longer be public. Span recording will be handled internally.\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `Sentry.getRootSpan()` instead\n   */\n  public transaction?: Transaction;\n\n  /**\n   * The instrumenter that created this span.\n   *\n   * TODO (v8): This can probably be replaced by an `instanceOf` check of the span class.\n   *            the instrumenter can only be sentry or otel so we can check the span instance\n   *            to verify which one it is and remove this field entirely.\n   *\n   * @deprecated This field will be removed.\n   */\n  public instrumenter: Instrumenter;\n\n  protected _traceId: string;\n  protected _spanId: string;\n  protected _parentSpanId?: string | undefined;\n  protected _sampled: boolean | undefined;\n  protected _name?: string | undefined;\n  protected _attributes: SpanAttributes;\n  /** Epoch timestamp in seconds when the span started. */\n  protected _startTime: number;\n  /** Epoch timestamp in seconds when the span ended. */\n  protected _endTime?: number | undefined;\n  /** Internal keeper of the status */\n  protected _status?: SpanStatusType | string | undefined;\n  protected _exclusiveTime?: number;\n\n  protected _measurements: Measurements;\n\n  private _logMessage?: string;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext: SpanContext = {}) {\n    this._traceId = spanContext.traceId || uuid4();\n    this._spanId = spanContext.spanId || uuid4().substring(16);\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags ? { ...spanContext.tags } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data ? { ...spanContext.data } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanContext.origin || 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.status) {\n      this._status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n    if (spanContext.exclusiveTime !== undefined) {\n      this._exclusiveTime = spanContext.exclusiveTime;\n    }\n    this._measurements = spanContext.measurements ? { ...spanContext.measurements } : {};\n  }\n\n  // This rule conflicts with another eslint rule :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * An alias for `description` of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name || '';\n  }\n\n  /**\n   * Update the name of the span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set name(name: string) {\n    this.updateName(name);\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get description(): string | undefined {\n    return this._name;\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set description(description: string | undefined) {\n    this._name = description;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated Use `spanContext().traceId` instead.\n   */\n  public get traceId(): string {\n    return this._traceId;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated You cannot update the traceId of a span after span creation.\n   */\n  public set traceId(traceId: string) {\n    this._traceId = traceId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated Use `spanContext().spanId` instead.\n   */\n  public get spanId(): string {\n    return this._spanId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated You cannot update the spanId of a span after span creation.\n   */\n  public set spanId(spanId: string) {\n    this._spanId = spanId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `startSpan` functions instead.\n   */\n  public set parentSpanId(string) {\n    this._parentSpanId = string;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).parent_span_id` instead.\n   */\n  public get parentSpanId(): string | undefined {\n    return this._parentSpanId;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated Use `isRecording()` instead.\n   */\n  public get sampled(): boolean | undefined {\n    return this._sampled;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated You cannot update the sampling decision of a span after span creation.\n   */\n  public set sampled(sampled: boolean | undefined) {\n    this._sampled = sampled;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public get attributes(): SpanAttributes {\n    return this._attributes;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `setAttributes()` instead.\n   */\n  public set attributes(attributes: SpanAttributes) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get startTimestamp(): number {\n    return this._startTime;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated In v8, you will not be able to update the span start time after creation.\n   */\n  public set startTimestamp(startTime: number) {\n    this._startTime = startTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get endTimestamp(): number | undefined {\n    return this._endTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Set the end time via `span.end()` instead.\n   */\n  public set endTimestamp(endTime: number | undefined) {\n    this._endTime = endTime;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `spanToJSON().status` instead to get the status.\n   */\n  public get status(): SpanStatusType | string | undefined {\n    return this._status;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `.setStatus()` instead to set or update the status.\n   */\n  public set status(status: SpanStatusType | string | undefined) {\n    this._status = status;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `spanToJSON().op` to read the op instead.\n   */\n  public get op(): string | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `startSpan()` functions to set or `span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'op')\n   *             to update the span instead.\n   */\n  public set op(op: string | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, op);\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `spanToJSON().origin` to read the origin instead.\n   */\n  public get origin(): SpanOrigin | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined;\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `startSpan()` functions to set the origin instead.\n   */\n  public set origin(origin: SpanOrigin | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /** @inheritdoc */\n  public spanContext(): SpanContextData {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /**\n   * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n   * Also the `sampled` decision will be inherited.\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): SpanInterface {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this._spanId,\n      sampled: this._sampled,\n      traceId: this._traceId,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.spanRecorder = this.spanRecorder;\n    // eslint-disable-next-line deprecation/deprecation\n    if (childSpan.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    const rootSpan = getRootSpan(this);\n    // TODO: still set span.transaction here until we have a more permanent solution\n    // Probably similarly to the weakmap we hold in node-experimental\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.transaction = rootSpan as Transaction;\n\n    if (DEBUG_BUILD && rootSpan) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = spanToJSON(childSpan).description || '< unknown name >';\n      const idStr = rootSpan.spanContext().spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      logger.log(logMessage);\n      this._logMessage = logMessage;\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * Sets the tag attribute on the current span.\n   *\n   * Can also be used to unset a tag, by passing `undefined`.\n   *\n   * @param key Tag key\n   * @param value Tag value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  public setTag(key: string, value: Primitive): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * Sets the data attribute on the current span\n   * @param key Data key\n   * @param value Data value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setData(key: string, value: any): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setAttribute(key: string, value: SpanAttributeValue | undefined): void {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n  public setAttributes(attributes: SpanAttributes): void {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatusType): this {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top-level `setHttpStatus()` instead.\n   */\n  public setHttpStatus(httpStatus: number): this {\n    setHttpStatus(this, httpStatus);\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @deprecated Use `.updateName()` instead.\n   */\n  public setName(name: string): void {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).status === 'ok'` instead.\n   */\n  public isSuccess(): boolean {\n    return this._status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n  public finish(endTimestamp?: number): void {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n  public end(endTimestamp?: SpanTimeInput): void {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n    const rootSpan = getRootSpan(this);\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      rootSpan &&\n      rootSpan.spanContext().spanId !== this._spanId\n    ) {\n      const logMessage = this._logMessage;\n      if (logMessage) {\n        logger.log((logMessage as string).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public toTraceparent(): string {\n    return spanToTraceHeader(this);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON()` or access the fields directly instead.\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      endTimestamp: this._endTime,\n      // eslint-disable-next-line deprecation/deprecation\n      op: this.op,\n      parentSpanId: this._parentSpanId,\n      sampled: this._sampled,\n      spanId: this._spanId,\n      startTimestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      traceId: this._traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Update the fields directly instead.\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data || {};\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n    this._endTime = spanContext.endTimestamp;\n    // eslint-disable-next-line deprecation/deprecation\n    this.op = spanContext.op;\n    this._parentSpanId = spanContext.parentSpanId;\n    this._sampled = spanContext.sampled;\n    this._spanId = spanContext.spanId || this._spanId;\n    this._startTime = spanContext.startTimestamp || this._startTime;\n    this._status = spanContext.status;\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags || {};\n    this._traceId = spanContext.traceId || this._traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceContext()` util function instead.\n   */\n  public getTraceContext(): TraceContext {\n    return spanToTraceContext(this);\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n  public getSpanJSON(): SpanJSON {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined,\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n      exclusive_time: this._exclusiveTime,\n      measurements: Object.keys(this._measurements).length > 0 ? this._measurements : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n  public isRecording(): boolean {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * Convert the object to JSON.\n   * @deprecated Use `spanToJSON(span)` instead.\n   */\n  public toJSON(): SpanJSON {\n    return this.getSpanJSON();\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n  private _getData():\n    | {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [key: string]: any;\n      }\n    | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const { data, _attributes: attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n","import type { Options } from '@sentry/types';\n\nimport { getClient } from '../exports';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n","import type { Scope, Span, SpanTimeInput, StartSpanOptions, TransactionContext } from '@sentry/types';\n\nimport { addNonEnumerableProperty, dropUndefinedKeys, logger, tracingContextFromHeaders } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '.';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getCurrentScope, withScope } from '../exports';\nimport type { Hub } from '../hub';\nimport { runWithAsyncContext } from '../hub';\nimport { getIsolationScope } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport type { Scope as ScopeClass } from '../scope';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanIsSampled, spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n *\n * @deprecated Use `startSpan` instead.\n */\nexport function trace<T>(\n  context: TransactionContext,\n  callback: (span?: Span) => T,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError: (error: unknown, span?: Span) => void = () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  afterFinish: () => void = () => {},\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const scope = getCurrentScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const parentSpan = scope.getSpan();\n\n  const spanContext = normalizeContext(context);\n  const activeSpan = createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: false,\n    scope,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(activeSpan);\n\n  return handleCallbackErrors(\n    () => callback(activeSpan),\n    error => {\n      activeSpan && activeSpan.setStatus('internal_error');\n      onError(error, activeSpan);\n    },\n    () => {\n      activeSpan && activeSpan.end();\n      // eslint-disable-next-line deprecation/deprecation\n      scope.setSpan(parentSpan);\n      afterFinish();\n    },\n  );\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpan<T>(context: StartSpanOptions, callback: (span: Span | undefined) => T): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet\n          if (activeSpan) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n        () => activeSpan && activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nexport const startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpanManual<T>(\n  context: StartSpanOptions,\n  callback: (span: Span | undefined, finish: () => void) => T,\n): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      function finishAndSetSpan(): void {\n        activeSpan && activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          if (activeSpan && activeSpan.isRecording()) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startInactiveSpan(context: StartSpanOptions): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const spanContext = normalizeContext(context);\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const parentSpan = context.scope\n    ? // eslint-disable-next-line deprecation/deprecation\n      context.scope.getSpan()\n    : getActiveSpan();\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return undefined;\n  }\n\n  const scope = context.scope || getCurrentScope();\n\n  // Even though we don't actually want to make this span active on the current scope,\n  // we need to make it active on a temporary scope that we use for event processing\n  // as otherwise, it won't pick the correct span for the event when processing it\n  const temporaryScope = (scope as ScopeClass).clone();\n\n  return createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope: temporaryScope,\n  });\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getSpan();\n}\n\ninterface ContinueTrace {\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers,\n   * or in the browser from `<meta name=\"sentry-trace\">` and `<meta name=\"baggage\">` HTML tags.\n   *\n   * @deprecated Use the version of this function taking a callback as second parameter instead:\n   *\n   * ```\n   * Sentry.continueTrace(sentryTrace: '...', baggage: '...' }, () => {\n   *    // ...\n   * })\n   * ```\n   *\n   */\n  ({\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  }): Partial<TransactionContext>;\n\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n   * and `<meta name=\"baggage\">` HTML tags.\n   *\n   * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n   * be attached to the incoming trace.\n   *\n   * Deprecation notice: In the next major version of the SDK the provided callback will not receive a transaction\n   * context argument.\n   */\n  <V>(\n    {\n      sentryTrace,\n      baggage,\n    }: {\n      // eslint-disable-next-line deprecation/deprecation\n      sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n      // eslint-disable-next-line deprecation/deprecation\n      baggage: Parameters<typeof tracingContextFromHeaders>[1];\n    },\n    // TODO(v8): Remove parameter from this callback.\n    callback: (transactionContext: Partial<TransactionContext>) => V,\n  ): V;\n}\n\nexport const continueTrace: ContinueTrace = <V>(\n  {\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  },\n  callback?: (transactionContext: Partial<TransactionContext>) => V,\n): V | Partial<TransactionContext> => {\n  // TODO(v8): Change this function so it doesn't do anything besides setting the propagation context on the current scope:\n  /*\n    return withScope((scope) => {\n      const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n      scope.setPropagationContext(propagationContext);\n      return callback();\n    })\n  */\n\n  const currentScope = getCurrentScope();\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext: Partial<TransactionContext> = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return runWithAsyncContext(() => {\n    return callback(transactionContext);\n  });\n};\n\nfunction createChildSpanOrTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  {\n    parentSpan,\n    spanContext,\n    forceTransaction,\n    scope,\n  }: {\n    parentSpan: Span | undefined;\n    spanContext: TransactionContext;\n    forceTransaction?: boolean;\n    scope: Scope;\n  },\n): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span: Span | undefined;\n  if (parentSpan && !forceTransaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    span = parentSpan.startChild(spanContext);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const sampled = spanIsSampled(parentSpan);\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  } else {\n    const { traceId, dsc, parentSpanId, sampled } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  }\n\n  // We always set this as active span on the scope\n  // In the case of this being an inactive span, we ensure to pass a detached scope in here in the first place\n  // But by having this here, we can ensure that the lookup through `getCapturedScopesOnSpan` results in the correct scope & span combo\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to TransactionContext.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context: StartSpanOptions): TransactionContext {\n  if (context.startTime) {\n    const ctx: TransactionContext & { startTime?: SpanTimeInput } = { ...context };\n    ctx.startTimestamp = spanTimeInputToSeconds(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return context;\n}\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\nfunction setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n","import type {\n  Context,\n  Contexts,\n  DynamicSamplingContext,\n  MeasurementUnit,\n  SpanTimeInput,\n  Transaction as TransactionInterface,\n  TransactionContext,\n  TransactionEvent,\n  TransactionMetadata,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes';\nimport { spanTimeInputToSeconds, spanToJSON, spanToTraceContext } from '../utils/spanUtils';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext';\nimport { Span as SpanClass, SpanRecorder } from './span';\nimport { getCapturedScopesOnSpan } from './trace';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  /**\n   * The reference to the current hub.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public _hub: Hub;\n\n  protected _name: string;\n\n  private _contexts: Contexts;\n\n  private _trimEnd?: boolean | undefined;\n\n  // DO NOT yet remove this property, it is used in a hack for v7 backwards compatibility.\n  private _frozenDynamicSamplingContext: Readonly<Partial<DynamicSamplingContext>> | undefined;\n\n  private _metadata: Partial<TransactionMetadata>;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   *\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n    this._contexts = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this._metadata = {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.metadata,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    // TODO (v8): Replace this with another way to set the root span\n    // eslint-disable-next-line deprecation/deprecation\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this._metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  // This sadly conflicts with the getter/setter ordering :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * Getter for `name` property.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Setter for `name` property, which also sets `source` as custom.\n   * @deprecated Use `updateName()` and `setMetadata()` instead.\n   */\n  public set name(newName: string) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.setName(newName);\n  }\n\n  /**\n   * Get the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public get metadata(): TransactionMetadata {\n    // We merge attributes in for backwards compatibility\n    return {\n      // Defaults\n      // eslint-disable-next-line deprecation/deprecation\n      source: 'custom',\n      spanMetadata: {},\n\n      // Legacy metadata\n      ...this._metadata,\n\n      // From attributes\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] && {\n        source: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] as TransactionMetadata['source'],\n      }),\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] && {\n        sampleRate: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] as TransactionMetadata['sampleRate'],\n      }),\n    };\n  }\n\n  /**\n   * Update the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public set metadata(metadata: TransactionMetadata) {\n    this._metadata = metadata;\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /**\n   * Setter for `name` property, which also sets `source` on the metadata.\n   *\n   * @deprecated Use `.updateName()` and `.setAttribute()` instead.\n   */\n  public setName(name: string, source: TransactionMetadata['source'] = 'custom'): void {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n\n  /** @inheritdoc */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set the context of a transaction event.\n   * @deprecated Use either `.setAttribute()`, or set the context on the scope before creating the transaction.\n   */\n  public setContext(key: string, context: Context | null): void {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top-level `setMeasurement()` instead.\n   */\n  public setMeasurement(name: string, value: number, unit: MeasurementUnit = ''): void {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Store metadata on this transaction.\n   * @deprecated Use attributes or store data on the scope instead.\n   */\n  public setMetadata(newMetadata: Partial<TransactionMetadata>): void {\n    this._metadata = { ...this._metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const timestampInS = spanTimeInputToSeconds(endTimestamp);\n    const transaction = this._finishTransaction(timestampInS);\n    if (!transaction) {\n      return undefined;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): TransactionContext {\n    // eslint-disable-next-line deprecation/deprecation\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this._name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(transactionContext: TransactionContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    super.updateWithContext(transactionContext);\n\n    this._name = transactionContext.name || '';\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   *\n   * @deprecated Use top-level `getDynamicSamplingContextFromSpan` instead.\n   */\n  public getDynamicSamplingContext(): Readonly<Partial<DynamicSamplingContext>> {\n    return getDynamicSamplingContextFromSpan(this);\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setHub(hub: Hub): void {\n    this._hub = hub;\n  }\n\n  /**\n   * Get the profile id of the transaction.\n   */\n  public getProfileId(): string | undefined {\n    if (this._contexts !== undefined && this._contexts['profile'] !== undefined) {\n      return this._contexts['profile'].profile_id as string;\n    }\n    return undefined;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n  protected _finishTransaction(endTimestamp?: number): TransactionEvent | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this._endTime !== undefined) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.end(endTimestamp);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const finishedSpans = this.spanRecorder\n      ? // eslint-disable-next-line deprecation/deprecation\n        this.spanRecorder.spans.filter(span => span !== this && spanToJSON(span).timestamp)\n      : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      const endTimes = finishedSpans.map(span => spanToJSON(span).timestamp).filter(Boolean) as number[];\n      this._endTime = endTimes.reduce((prev, current) => {\n        return prev > current ? prev : current;\n      });\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { metadata } = this;\n    // eslint-disable-next-line deprecation/deprecation\n    const { source } = metadata;\n\n    const transaction: TransactionEvent = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: spanToTraceContext(this),\n      },\n      // TODO: Pass spans serialized via `spanToJSON()` here instead in v8.\n      spans: finishedSpans,\n      start_timestamp: this._startTime,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    DEBUG_BUILD && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`);\n\n    return transaction;\n  }\n}\n","/* eslint-disable max-lines */\nimport type { SpanTimeInput, TransactionContext } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\nimport type { Span } from './span';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\n\nexport const TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string,\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanContext().spanId !== this.transactionSpanId) {\n      // We patch span.end() to pop an activity after setting an endTimestamp.\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const originalEnd = span.end;\n      span.end = (...rest: unknown[]) => {\n        this._popActivity(span.spanContext().spanId);\n        return originalEnd.apply(span, rest);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (spanToJSON(span).timestamp === undefined) {\n        this._pushActivity(span.spanContext().spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean>;\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean;\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n  private _idleTimeoutCanceledPermanently: boolean;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[];\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  private _idleTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  private _finishReason: (typeof IDLE_TRANSACTION_FINISH_REASONS)[number];\n\n  private _autoFinishAllowed: boolean;\n\n  /**\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  public constructor(\n    transactionContext: TransactionContext,\n    // eslint-disable-next-line deprecation/deprecation\n    private readonly _idleHub: Hub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n    private readonly _idleTimeout: number = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n    private readonly _finalTimeout: number = TRACING_DEFAULTS.finalTimeout,\n    private readonly _heartbeatInterval: number = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    private readonly _onScope: boolean = false,\n    /**\n     * When set to `true`, will disable the idle timeout (`_idleTimeout` option) and heartbeat mechanisms (`_heartbeatInterval`\n     * option) until the `sendAutoFinishSignal()` method is called. The final timeout mechanism (`_finalTimeout` option)\n     * will not be affected by this option, meaning the transaction will definitely be finished when the final timeout is\n     * reached, no matter what this option is configured to.\n     *\n     * Defaults to `false`.\n     */\n    delayAutoFinishUntilSignal: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n    this._autoFinishAllowed = !delayAutoFinishUntilSignal;\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      DEBUG_BUILD && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanContext().spanId}`);\n      // eslint-disable-next-line deprecation/deprecation\n      _idleHub.getScope().setSpan(this);\n    }\n\n    if (!delayAutoFinishUntilSignal) {\n      this._restartIdleTimeout();\n    }\n\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.end();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const endTimestampInS = spanTimeInputToSeconds(endTimestamp);\n\n    this._finished = true;\n    this.activities = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.op === 'ui.action.click') {\n      this.setAttribute(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.spanRecorder) {\n      DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestampInS * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestampInS);\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanContext().spanId === this.spanContext().spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!spanToJSON(span).timestamp) {\n          span.setStatus('cancelled');\n          span.end(endTimestampInS);\n          DEBUG_BUILD &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const { start_timestamp: startTime, timestamp: endTime } = spanToJSON(span);\n        const spanStartedBeforeTransactionFinish = startTime && startTime < endTimestampInS;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = endTime && startTime && endTime - startTime < timeoutWithMarginOfError;\n\n        if (DEBUG_BUILD) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      DEBUG_BUILD && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      DEBUG_BUILD && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      // eslint-disable-next-line deprecation/deprecation\n      const scope = this._idleHub.getScope();\n      // eslint-disable-next-line deprecation/deprecation\n      if (scope.getTransaction() === this) {\n        // eslint-disable-next-line deprecation/deprecation\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.end(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets executed before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanContext().spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      DEBUG_BUILD && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n  public cancelIdleTimeout(\n    endTimestamp?: Parameters<IdleTransaction['end']>[0],\n    {\n      restartOnChildSpanChange,\n    }: {\n      restartOnChildSpanChange?: boolean;\n    } = {\n      restartOnChildSpanChange: true,\n    },\n  ): void {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.end(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n  public setFinishReason(reason: string): void {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Permits the IdleTransaction to automatically end itself via the idle timeout and heartbeat mechanisms when the `delayAutoFinishUntilSignal` option was set to `true`.\n   */\n  public sendAutoFinishSignal(): void {\n    if (!this._autoFinishAllowed) {\n      DEBUG_BUILD && logger.log('[Tracing] Received finish signal for idle transaction.');\n      this._restartIdleTimeout();\n      this._autoFinishAllowed = true;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  private _restartIdleTimeout(endTimestamp?: Parameters<IdleTransaction['end']>[0]): void {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.end(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    DEBUG_BUILD && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      DEBUG_BUILD && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampInSeconds();\n      if (this._idleTimeoutCanceledPermanently) {\n        if (this._autoFinishAllowed) {\n          this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n          this.end(endTimestamp);\n        }\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      if (this._autoFinishAllowed) {\n        DEBUG_BUILD && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n        this.end();\n      }\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    DEBUG_BUILD && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n","import type { Transaction } from '@sentry/types';\nimport { extractTraceparentData as _extractTraceparentData } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveTransaction<T extends Transaction>(maybeHub?: Hub): T | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = maybeHub || getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = hub.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  return scope.getTransaction() as T | undefined;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nexport const extractTraceparentData = _extractTraceparentData;\n","import {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  logger,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SpanStatusType } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status: SpanStatusType = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n","import type { Options, SamplingContext } from '@sentry/types';\nimport { isNaN, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanToJSON } from '../utils/spanUtils';\nimport type { Transaction } from './transaction';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nexport function sampleTransaction<T extends Transaction>(\n  transaction: T,\n  options: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'>,\n  samplingContext: SamplingContext,\n): T {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  // eslint-disable-next-line deprecation/deprecation\n  if (transaction.sampled !== undefined) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(transaction.sampled));\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Tracing] starting ${transaction.op} transaction - ${spanToJSON(transaction).description}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n","import type { ClientOptions, CustomSamplingContext, TransactionContext } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getMainCarrier } from '../hub';\nimport { spanToTraceHeader } from '../utils/spanUtils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { sampleTransaction } from './sampling';\nimport { Transaction } from './transaction';\n\n/** Returns all trace headers that are currently on the top scope. */\n// eslint-disable-next-line deprecation/deprecation\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': spanToTraceHeader(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  transactionContext: TransactionContext,\n  idleTimeout: number,\n  finalTimeout: number,\n  onScope?: boolean,\n  customSamplingContext?: CustomSamplingContext,\n  heartbeatInterval?: number,\n  delayAutoFinishUntilSignal: boolean = false,\n): IdleTransaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nexport function addTracingExtensions(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric } from '../../types';\nimport { observe } from '../observe';\n\ndeclare global {\n  interface Performance {\n    interactionCount: number;\n  }\n}\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries: Metric['entries']): void => {\n  (entries as PerformanceEventTiming[]).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po: PerformanceObserver | undefined;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nexport const getInteractionCount = (): number => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nexport const initInteractionCountPolyfill = (): void => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } as PerformanceObserverInit);\n};\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { CLSMetric, ReportCallback, StopListening } from './types';\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (\n  onReport: ReportCallback,\n  options: { reportAllChanges?: boolean } = {},\n): StopListening | undefined => {\n  const metric = initMetric('CLS', 0);\n  let report: ReturnType<typeof bindReporter>;\n\n  let sessionValue = 0;\n  let sessionEntries: PerformanceEntry[] = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries: LayoutShift[]): void => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric, options.reportAllChanges);\n\n    const stopListening = (): void => {\n      handleEntries(po.takeRecords() as CLSMetric['entries']);\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { FIDMetric, PerformanceEventTiming, ReportCallback } from './types';\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: ReportCallback): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntry = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries: FIDMetric['entries']): void => {\n    (entries as PerformanceEventTiming[]).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() as FIDMetric['entries']);\n      po.disconnect();\n    }, true);\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { getInteractionCount, initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { INPMetric } from './types/inp';\n\ninterface Interaction {\n  id: number;\n  latency: number;\n  entries: PerformanceEventTiming[];\n}\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = (): number => {\n  return getInteractionCount();\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList: Interaction[] = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap: { [interactionId: string]: Interaction } = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry: PerformanceEventTiming): void => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId!];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    entry.duration > minLongestInteraction.latency\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId!,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = (): Interaction => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/responsiveness/) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/inp/#what-is-a-good-inp-score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onINP = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/inp/#what's-a-%22good%22-inp-value\n  // const thresholds = [200, 500];\n\n  // TODO(philipwalton): remove once the polyfill is no longer needed.\n  initInteractionCountPolyfill();\n\n  const metric = initMetric('INP');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: INPMetric['entries']): void => {\n    entries.forEach(entry => {\n      if (entry.interactionId) {\n        processEntry(entry);\n      }\n\n      // Entries of type `first-input` don't currently have an `interactionId`,\n      // so to consider them in INP we have to first check that an existing\n      // entry doesn't match the `duration` and `startTime`.\n      // Note that this logic assumes that `event` entries are dispatched\n      // before `first-input` entries. This is true in Chrome but it is not\n      // true in Firefox; however, Firefox doesn't support interactionId, so\n      // it's not an issue at the moment.\n      // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n      if (entry.entryType === 'first-input') {\n        const noMatchingEntry = !longestInteractionList.some(interaction => {\n          return interaction.entries.some(prevEntry => {\n            return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n          });\n        });\n        if (noMatchingEntry) {\n          processEntry(entry);\n        }\n      }\n    });\n\n    const inp = estimateP98LongestInteraction();\n\n    if (inp && inp.latency !== metric.value) {\n      metric.value = inp.latency;\n      metric.entries = inp.entries;\n      report();\n    }\n  };\n\n  const po = observe('event', handleEntries, {\n    // Event Timing entries have their durations rounded to the nearest 8ms,\n    // so a duration of 40ms would be any event that spans 2.5 or more frames\n    // at 60Hz. This threshold is chosen to strike a balance between usefulness\n    // and performance. Running this callback for any interaction that spans\n    // just one or two frames is likely not worth the insight that could be\n    // gained.\n    durationThreshold: opts.durationThreshold || 40,\n  } as PerformanceObserverInit);\n\n  report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  if (po) {\n    // Also observe entries of type `first-input`. This is useful in cases\n    // where the first interaction is less than the `durationThreshold`.\n    po.observe({ type: 'first-input', buffered: true });\n\n    onHidden(() => {\n      handleEntries(po.takeRecords() as INPMetric['entries']);\n\n      // If the interaction count shows that there were interactions but\n      // none were captured by the PerformanceObserver, report a latency of 0.\n      if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n        metric.value = 0;\n        metric.entries = [];\n      }\n\n      report(true);\n    });\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getNavigationEntry } from './lib/getNavigationEntry';\nimport { initMetric } from './lib/initMetric';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { TTFBMetric } from './types/ttfb';\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback: () => void): void => {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  if (WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => whenReady(callback), true);\n  } else if (WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/time-to-first-byte/) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nexport const onTTFB = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/ttfb/#what-is-a-good-ttfb-score\n  // const thresholds = [800, 1800];\n\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = getNavigationEntry() as TTFBMetric['entries'][number];\n\n    if (navEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navEntry.responseStart - getActivationStart(), 0);\n\n      // In some cases the value reported is negative or is larger\n      // than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      if (metric.value < 0 || metric.value > performance.now()) return;\n\n      metric.entries = [navEntry];\n\n      report(true);\n    }\n  });\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { DsnComponents, SpanEnvelope, SpanItem } from '@sentry/types';\nimport type { Span } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Create envelope from Span item.\n */\nexport function createSpanEnvelope(spans: Span[], dsn?: DsnComponents): SpanEnvelope {\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const items = spans.map(createSpanItem);\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n\nfunction createSpanItem(span: Span): SpanItem {\n  const spanHeaders: SpanItem[0] = {\n    type: 'span',\n  };\n  return [spanHeaders, span];\n}\n","import type { Transaction } from '@sentry/core';\nimport type { Span, SpanContext } from '@sentry/types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n *\n * Note: this will not be possible anymore in v8,\n * unless we do some special handling for browser here...\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  // eslint-disable-next-line deprecation/deprecation\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/* eslint-disable max-lines */\nimport type { IdleTransaction, Transaction } from '@sentry/core';\nimport {\n  Span,\n  getActiveTransaction,\n  getClient,\n  hasTracingEnabled,\n  isValidSampleRate,\n  setMeasurement,\n} from '@sentry/core';\nimport type { ClientOptions, Measurements, SpanContext, TransactionContext } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, getComponentName, htmlTreeAsString, logger, parseUrl } from '@sentry/utils';\n\nimport { spanToJSON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../../common/debug-build';\nimport {\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addInpInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n  addTtfbInstrumentationHandler,\n} from '../instrument';\nimport { WINDOW } from '../types';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher';\nimport type {\n  InteractionRouteNameMapping,\n  NavigatorDeviceMemory,\n  NavigatorNetworkInformation,\n} from '../web-vitals/types';\nimport { _startChild, isMeasurementValue } from './utils';\n\nimport { createSpanEnvelope } from '@sentry/core';\nimport { getNavigationEntry } from '../web-vitals/lib/getNavigationEntry';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time: number): number {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI(): Performance | undefined {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor: number = 0;\n\nlet _measurements: Measurements = {};\nlet _lcpEntry: LargestContentfulPaint | undefined;\nlet _clsEntry: LayoutShift | undefined;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nexport function startTrackingWebVitals(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return (): void => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nexport function startTrackingLongTasks(): void {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nexport function startTrackingInteractions(): void {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const span: SpanContext = {\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          span.attributes = { 'ui.component_name': componentName };\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.startChild(span);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking INP webvital events.\n */\nexport function startTrackingINP(\n  interactionIdtoRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP(interactionIdtoRouteNameMapping, interactionsSampleRate);\n\n    return (): void => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS(): () => void {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry as LayoutShift;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(): () => void {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry as LargestContentfulPaint;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID(): () => void {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb(): () => void {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\nconst INP_ENTRY_MAP: Record<string, 'click' | 'hover' | 'drag' | 'press'> = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP(\n  interactionIdToRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  return addInpInstrumentationHandler(({ metric }) => {\n    if (metric.value === undefined) {\n      return;\n    }\n    const entry = metric.entries.find(\n      entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name] !== undefined,\n    );\n    const client = getClient();\n    if (!entry || !client) {\n      return;\n    }\n    const interactionType = INP_ENTRY_MAP[entry.name];\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const interaction =\n      entry.interactionId !== undefined ? interactionIdToRouteNameMapping[entry.interactionId] : undefined;\n    if (interaction === undefined) {\n      return;\n    }\n    const { routeName, parentContext, activeTransaction, user, replayId } = interaction;\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const profileId = activeTransaction !== undefined ? activeTransaction.getProfileId() : undefined;\n    const span = new Span({\n      startTimestamp: startTime,\n      endTimestamp: startTime + duration,\n      op: `ui.interaction.${interactionType}`,\n      name: htmlTreeAsString(entry.target),\n      attributes: {\n        release: options.release,\n        environment: options.environment,\n        transaction: routeName,\n        ...(userDisplay !== undefined && userDisplay !== '' ? { user: userDisplay } : {}),\n        ...(profileId !== undefined ? { profile_id: profileId } : {}),\n        ...(replayId !== undefined ? { replay_id: replayId } : {}),\n      },\n      exclusiveTime: metric.value,\n      measurements: {\n        inp: { value: metric.value, unit: 'millisecond' },\n      },\n    });\n\n    /** Check to see if the span should be sampled */\n    const sampleRate = getSampleRate(parentContext, options, interactionsSampleRate);\n\n    if (!sampleRate) {\n      return;\n    }\n\n    if (Math.random() < (sampleRate as number | boolean)) {\n      const envelope = span ? createSpanEnvelope([span], client.getDsn()) : undefined;\n      const transport = client && client.getTransport();\n      if (transport && envelope) {\n        transport.send(envelope).then(null, reason => {\n          DEBUG_BUILD && logger.error('Error while sending interaction:', reason);\n        });\n      }\n      return;\n    }\n  });\n}\n\n/** Add performance related spans to a transaction */\nexport function addPerformanceEntries(transaction: Transaction): void {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(transaction);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry: Record<string, any>) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (transaction.op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(transaction, entry, entry.name as string, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      setMeasurement(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nexport function _addMeasureSpans(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  description?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire transaction if it contained faulty spans.\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'request',\n      startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'response',\n      startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n  }\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n  renderBlockingStatus?: string;\n}\n\n/** Create resource-related spans */\nexport function _addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceUrl: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data: Record<string, any> = {};\n  setResourceEntrySizeData(data, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(data, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(data, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    data['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    data['server.address'] = parsedUrl.host;\n  }\n\n  data['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceUrl.replace(WINDOW.location.origin, ''),\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction: Transaction): void {\n  const navigator = WINDOW.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction: Transaction): void {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  data: Record<string, unknown>,\n  entry: ResourceEntry,\n  key: keyof Pick<ResourceEntry, 'transferSize' | 'encodedBodySize' | 'decodedBodySize'>,\n  dataKey: 'http.response_transfer_size' | 'http.response_content_length' | 'http.decoded_response_content_length',\n): void {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    data[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements: Measurements): void {\n  const navEntry = getNavigationEntry();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\n/** Taken from @sentry/core sampling.ts */\nfunction getSampleRate(\n  transactionContext: TransactionContext | undefined,\n  options: ClientOptions,\n  interactionsSampleRate: number,\n): number | boolean {\n  if (!hasTracingEnabled(options)) {\n    return false;\n  }\n  let sampleRate;\n  if (transactionContext !== undefined && typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      transactionContext,\n      name: transactionContext.name,\n      parentSampled: transactionContext.parentSampled,\n      attributes: {\n        // eslint-disable-next-line deprecation/deprecation\n        ...transactionContext.data,\n        ...transactionContext.attributes,\n      },\n      location: WINDOW.location,\n    });\n  } else if (transactionContext !== undefined && transactionContext.sampled !== undefined) {\n    sampleRate = transactionContext.sampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    sampleRate = 1;\n  }\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding interaction span because of invalid sample rate.');\n    return false;\n  }\n  if (sampleRate === true) {\n    return interactionsSampleRate;\n  } else if (sampleRate === false) {\n    return 0;\n  }\n  return sampleRate * interactionsSampleRate;\n}\n","/* eslint-disable max-lines */\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToJSON,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, Span } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  SENTRY_XHR_DATA_KEY,\n  addFetchInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  browserPerformanceTimeOrigin,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  parseUrl,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\n\nimport { instrumentFetchRequest } from '../common/fetch';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport { WINDOW } from './types';\n\nexport const DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * @deprecated Will be removed in v8.\n   * Use `shouldCreateSpanForRequest` to control span creation and `tracePropagationTargets` to control\n   * trace header attachment.\n   */\n  tracingOrigins: Array<string | RegExp>;\n\n  /**\n   * List of strings and/or regexes used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * @deprecated Use the top-level `tracePropagationTargets` option in `Sentry.init` instead.\n   * This option will be removed in v8.\n   *\n   * Default: ['localhost', /^\\//] @see {DEFAULT_TRACE_PROPAGATION_TARGETS}\n   */\n  tracePropagationTargets: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url: string): boolean =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry: PerformanceEntry): entry is PerformanceResourceTiming {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry as PerformanceResourceTiming).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nexport function extractNetworkProtocol(nextHopProtocol: string): { name: string; version: string } {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time: number = 0): number {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming: PerformanceResourceTiming): [string, string | number][] {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData: [string, string | number][] = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nexport function shouldAttachHeaders(url: string, tracePropagationTargets: (string | RegExp)[] | undefined): boolean {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nexport function xhrCallback(\n  handlerData: HandlerDataXhr,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!hasTracingEnabled() || !xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const isolationScope = getIsolationScope();\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n        onlyIfParent: true,\n        attributes: {\n          type: 'xhr',\n          'http.method': sentryXhrData.method,\n          'http.url': fullUrl,\n          url: sentryXhrData.url,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  const client = getClient();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    const { traceId, spanId, sampled, dsc } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n    const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n      dsc ||\n        (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n    );\n\n    setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr: SentryWrappedXMLHttpRequest,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader!(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n","import {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { Client, HandlerDataFetch, Scope, Span, SpanOrigin } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  isInstanceOf,\n  parseUrl,\n} from '@sentry/utils';\n\ntype PolymorphicRequestHeaders =\n  | Record<string, string | undefined>\n  | Array<[string, string]>\n  // the below is not preicsely the Header type used in Request, but it'll pass duck-typing\n  | {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      append: (key: string, value: string) => void;\n      get: (key: string) => string | null | undefined;\n    };\n\n/**\n * Create and track fetch request spans for usage in combination with `addInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function instrumentFetchRequest(\n  handlerData: HandlerDataFetch,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n  spanOrigin: SpanOrigin = 'auto.http.browser',\n): Span | undefined {\n  if (!hasTracingEnabled() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${method} ${url}`,\n        onlyIfParent: true,\n        attributes: {\n          url,\n          type: 'fetch',\n          'http.method': method,\n          'http.url': fullUrl,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanContext().spanId;\n    spans[span.spanContext().spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request: string | Request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options: { [key: string]: any } = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nexport function addTracingHeadersToFetchRequest(\n  request: string | unknown, // unknown is actually type Request but we can't export DOM types from this package,\n  client: Client,\n  scope: Scope,\n  options: {\n    headers?:\n      | {\n          [key: string]: string[] | string | undefined;\n        }\n      | PolymorphicRequestHeaders;\n  },\n  requestSpan?: Span,\n): PolymorphicRequestHeaders | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const span = requestSpan || scope.getSpan();\n\n  const isolationScope = getIsolationScope();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc ||\n      (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request as Request).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers as Headers);\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders: string[] = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers as Exclude<typeof headers, Headers>),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction endSpan(span: Span, handlerData: HandlerDataFetch): void {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus('internal_error');\n  }\n  span.end();\n}\n","/* eslint-disable max-lines */\nimport type { Hub, IdleTransaction } from '@sentry/core';\nimport { getClient, getCurrentScope } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  TRACING_DEFAULTS,\n  addTracingExtensions,\n  getActiveTransaction,\n  startIdleTransaction,\n} from '@sentry/core';\nimport type { EventProcessor, Integration, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\nimport { getDomElement, logger, propagationContextFromHeaders } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport {\n  addPerformanceEntries,\n  startTrackingINP,\n  startTrackingInteractions,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from './metrics';\nimport type { RequestInstrumentationOptions } from './request';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nimport { WINDOW } from './types';\nimport type { InteractionRouteNameMapping } from './web-vitals/types';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished during an idle state. An idle state is defined\n   * by a moment where there are no in-progress spans.\n   *\n   * The transaction will use the end timestamp of the last finished span as the endtime for the transaction.\n   * If there are still active spans when this the `idleTimeout` is set, the `idleTimeout` will get reset.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * The max duration for a transaction. If a transaction duration hits the `finalTimeout` value, it\n   * will be finished.\n   * Time is in ms.\n   *\n   * Default: 30000\n   */\n  finalTimeout: number;\n\n  /**\n   * The heartbeat interval. If no new spans are started or open spans are finished within 3 heartbeats,\n   * the transaction will be finished.\n   * Time is in ms.\n   *\n   * Default: 5000\n   */\n  heartbeatInterval: number;\n\n  /**\n   * Flag to enable/disable creation of `navigation` transaction on history changes.\n   *\n   * Default: true\n   */\n  startTransactionOnLocationChange: boolean;\n\n  /**\n   * Flag to enable/disable creation of `pageload` transaction on first pageload.\n   *\n   * Default: true\n   */\n  startTransactionOnPageLoad: boolean;\n\n  /**\n   * Flag Transactions where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundTransactions: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * If true, Sentry will capture INP web vitals as standalone spans .\n   *\n   * Default: false\n   */\n  enableInp: boolean;\n\n  /**\n   * Sample rate to determine interaction span sampling.\n   * interactionsSampleRate is applied on top of the global tracesSampleRate.\n   * ie a tracesSampleRate of 0.1 and interactionsSampleRate of 0.5 will result in a 0.05 sample rate for interactions.\n   *\n   * Default: 1\n   */\n  interactionsSampleRate: number;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<{\n    /**\n     * @deprecated This property no longer has any effect and will be removed in v8.\n     */\n    _reportAllChanges: boolean;\n  }>;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   * Note that the `enableLongTask` options is deprecated in favor of the option at the top level, and will be removed in v8.\n   *\n   * TODO (v8): Remove enableLongTask\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableLongTask: boolean;\n    enableInteractions: boolean;\n    // eslint-disable-next-line deprecation/deprecation\n    onStartRouteTransaction: (t: Transaction | undefined, ctx: TransactionContext, getCurrentHub: () => Hub) => void;\n  }>;\n\n  /**\n   * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction\n   * context data, or drop the transaction entirely (by setting `sampled = false` in the context).\n   *\n   * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.\n   *\n   * @param context: The context data which will be passed to `startTransaction` by default\n   *\n   * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.\n   */\n  beforeNavigate?(this: void, context: TransactionContext): TransactionContext | undefined;\n\n  /**\n   * Instrumentation that creates routing change transactions. By default creates\n   * pageload and navigation transactions.\n   */\n  routingInstrumentation<T extends Transaction>(\n    this: void,\n    customStartTransaction: (context: TransactionContext) => T | undefined,\n    startTransactionOnPageLoad?: boolean,\n    startTransactionOnLocationChange?: boolean,\n  ): void;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  enableInp: false,\n  interactionsSampleRate: 1,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * @deprecated Use `browserTracingIntegration()` instead.\n */\nexport class BrowserTracing implements Integration {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  public options: BrowserTracingOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  // eslint-disable-next-line deprecation/deprecation\n  private _getCurrentHub?: () => Hub;\n\n  private _collectWebVitals: () => void;\n\n  private _hasSetTracePropagationTargets: boolean;\n  private _interactionIdToRouteNameMapping: InteractionRouteNameMapping;\n  private _latestRoute: {\n    name: string | undefined;\n    context: TransactionContext | undefined;\n  };\n\n  public constructor(_options?: Partial<BrowserTracingOptions>) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    addTracingExtensions();\n\n    if (DEBUG_BUILD) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n    this._interactionIdToRouteNameMapping = {};\n\n    if (this.options.enableInp) {\n      startTrackingINP(this._interactionIdToRouteNameMapping, this.options.interactionsSampleRate);\n    }\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n\n    this._latestRoute = {\n      name: undefined,\n      context: undefined,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    // eslint-disable-next-line deprecation/deprecation\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if (DEBUG_BUILD && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context: TransactionContext) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    if (this.options.enableInp) {\n      this._registerInpInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n  private _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    if (!this._getCurrentHub) {\n      DEBUG_BUILD &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext: TransactionContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = propagationContextFromHeaders(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    this._latestRoute.name = finalContext.name;\n    this._latestRoute.context = finalContext;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (finalContext.sampled === false) {\n      DEBUG_BUILD && logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction) {\n      if (WINDOW.document) {\n        WINDOW.document.addEventListener('readystatechange', () => {\n          if (['interactive', 'complete'].includes(WINDOW.document!.readyState)) {\n            idleTransaction.sendAutoFinishSignal();\n          }\n        });\n\n        if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction as Transaction;\n  }\n\n  /** Start listener for interaction transactions */\n  private _registerInteractionListener(): void {\n    let inflightInteractionTransaction: IdleTransaction | undefined;\n    const registerInteractionTransaction = (): void => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      // eslint-disable-next-line deprecation/deprecation\n      const currentTransaction = getActiveTransaction();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        DEBUG_BUILD &&\n          logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.end();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRoute.name) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context: TransactionContext = {\n        name: this._latestRoute.name,\n        op,\n        trimEnd: true,\n        data: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: this._latestRoute.context\n            ? getSource(this._latestRoute.context)\n            : undefined || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n      }\n    });\n  }\n\n  /** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\n  private _registerInpInteractionListener(): void {\n    const handleEntries = ({ entries }: { entries: PerformanceEntry[] }): void => {\n      const client = getClient();\n      // We need to get the replay, user, and activeTransaction from the current scope\n      // so that we can associate replay id, profile id, and a user display to the span\n      const replay =\n        client !== undefined && client.getIntegrationByName !== undefined\n          ? (client.getIntegrationByName('Replay') as Integration & { getReplayId: () => string })\n          : undefined;\n      const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction();\n      const currentScope = getCurrentScope();\n      const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n      entries.forEach(entry => {\n        if (isPerformanceEventTiming(entry)) {\n          const interactionId = entry.interactionId;\n          if (interactionId === undefined) {\n            return;\n          }\n          const existingInteraction = this._interactionIdToRouteNameMapping[interactionId];\n          const duration = entry.duration;\n          const startTime = entry.startTime;\n          const keys = Object.keys(this._interactionIdToRouteNameMapping);\n          const minInteractionId =\n            keys.length > 0\n              ? keys.reduce((a, b) => {\n                  return this._interactionIdToRouteNameMapping[a].duration <\n                    this._interactionIdToRouteNameMapping[b].duration\n                    ? a\n                    : b;\n                })\n              : undefined;\n          // For a first input event to be considered, we must check that an interaction event does not already exist with the same duration and start time.\n          // This is also checked in the web-vitals library.\n          if (entry.entryType === 'first-input') {\n            const matchingEntry = keys\n              .map(key => this._interactionIdToRouteNameMapping[key])\n              .some(interaction => {\n                return interaction.duration === duration && interaction.startTime === startTime;\n              });\n            if (matchingEntry) {\n              return;\n            }\n          }\n          // Interactions with an id of 0 and are not first-input are not valid.\n          if (!interactionId) {\n            return;\n          }\n          // If the interaction already exists, we want to use the duration of the longest entry, since that is what the INP metric uses.\n          if (existingInteraction) {\n            existingInteraction.duration = Math.max(existingInteraction.duration, duration);\n          } else if (\n            keys.length < MAX_INTERACTIONS ||\n            minInteractionId === undefined ||\n            duration > this._interactionIdToRouteNameMapping[minInteractionId].duration\n          ) {\n            // If the interaction does not exist, we want to add it to the mapping if there is space, or if the duration is longer than the shortest entry.\n            const routeName = this._latestRoute.name;\n            const parentContext = this._latestRoute.context;\n            if (routeName && parentContext) {\n              if (minInteractionId && Object.keys(this._interactionIdToRouteNameMapping).length >= MAX_INTERACTIONS) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this._interactionIdToRouteNameMapping[minInteractionId];\n              }\n              this._interactionIdToRouteNameMapping[interactionId] = {\n                routeName,\n                duration,\n                parentContext,\n                user,\n                activeTransaction,\n                replayId,\n                startTime,\n              };\n            }\n          }\n        }\n      });\n    };\n    addPerformanceInstrumentationHandler('event', handleEntries);\n    addPerformanceInstrumentationHandler('first-input', handleEntries);\n  }\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\nfunction getSource(context: TransactionContext): TransactionSource | undefined {\n  const sourceFromAttributes = context.attributes && context.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\nfunction isPerformanceEventTiming(entry: PerformanceEntry): entry is PerformanceEventTiming {\n  return 'duration' in entry;\n}\n","import type { Transaction, TransactionContext } from '@sentry/types';\nimport { addHistoryInstrumentationHandler, browserPerformanceTimeOrigin, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!WINDOW || !WINDOW.location) {\n    DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = WINDOW.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addHistoryInstrumentationHandler(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.end();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n","import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction, spanToJSON } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document!.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        const { op, status } = spanToJSON(activeTransaction);\n\n        DEBUG_BUILD &&\n          logger.log(`[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${op}`);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          activeTransaction.setStatus(statusType);\n        }\n        // TODO: Can we rewrite this to an attribute?\n        // eslint-disable-next-line deprecation/deprecation\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n","import type { MeasurementUnit } from '@sentry/types';\n\nimport { getActiveTransaction } from './utils';\n\n/**\n * Adds a measurement to the current active transaction.\n */\nexport function setMeasurement(name: string, value: number, unit: MeasurementUnit): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const transaction = getActiveTransaction();\n  if (transaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMeasurement(name, value, unit);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { addBreadcrumb } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nexport function logInfo(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nexport function logInfoNextTick(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message: string): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\n\nimport {\n  BrowserClient,\n  defaultStackParser,\n  getCurrentHub,\n  makeFetchTransport,\n  showReportDialog,\n  Breadcrumbs,\n  GlobalHandlers,\n  InboundFilters,\n  FunctionToString,\n  LinkedErrors,\n  HttpContext,\n  TryCatch,\n  BrowserTracing,\n  Replay,\n} from '@sentry/browser';\n\nimport { CaptureConsole } from '@sentry/integrations';\n\nconst integrations = [\n  new InboundFilters(),\n  new FunctionToString(),\n  new TryCatch(),\n  new GlobalHandlers({\n    onerror: true,\n    onunhandledrejection: true,\n  }),\n  new Breadcrumbs({\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n  }),\n  new LinkedErrors({\n    key: 'cause',\n    limit: 5,\n  }),\n  new HttpContext(),\n];\n\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\n\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\n\nconst createClient = (config) =>\n  new BrowserClient({\n    dsn: config.dsn,\n\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n\n    beforeSend: (event) => {\n      event.logger = 'javascript';\n\n      if (config.scrubEmails && event.user?.email) {\n        delete event.user.email;\n      }\n\n      if (config.showFeedback && event.exception) {\n        showReportDialog({ eventId: event.event_id, user: Sentry.getUserData('name') });\n      }\n\n      return event;\n    },\n\n    tracesSampleRate: config.tracesSampleRate,\n    replaysSessionSampleRate: config.replaysSessionSampleRate,\n    replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n\n    integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean),\n  });\n\nwindow.Sentry = { createClient, getCurrentHub, showReportDialog };\n\nwindow.Sentry.getUserData = (nameAttr = 'username') => {\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username(),\n      };\n\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId,\n      };\n    }\n  }\n\n  return userData;\n};\n\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});\n"],"names":["isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","_typeof","require","_regeneratorRuntime","module","exports","__esModule","Op","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","n","getter","d","a","definition","o","get","g","e","window","hmd","children","set","prop","r","flarum","core","compat","DEBUG_BUILD","__SENTRY_DEBUG__","isGlobalObj","Math","GLOBAL_OBJ","global","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","enabled","logger","enable","disable","isEnabled","_len","arguments","args","Array","_key","_GLOBAL_OBJ$console","apply","PREFIX","concat","_extends","assign","bind","target","source","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","DEFAULT_MAX_STRING_LENGTH","htmlTreeAsString","elem","options","nextStr","currentElem","out","height","len","keyAttrs","isArray","maxStringLength","_htmlElementAsString","separator","parentNode","join","_oO","el","classes","attr","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","getComponentName","truncate","str","max","safeJoin","input","delimiter","output","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","o_O","log","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","isPojo","memoVal","returnValue","_i","_Object$keys","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","c","getFirstException","event","getEventDescription","eventId","event_id","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","_proto","onfulfilled","onrejected","_this","_executeHandlers","onfinally","_this2","isRejected","_this3","_setResult","RESOLVED","_this4","REJECTED","_this5","_value","_this6","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","ONE_SECOND_IN_MS","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","DEFAULT_ENVIRONMENT","updateSession","session","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","inner","WeakSet","has","add","splice","_memo","memoize","unmemoize","stringified","_events","document","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","MAX_BAGGAGE_STRING_LENGTH","dynamicSamplingContextToSentryBaggageHeader","dynamicSamplingContext","entries","reduce","baggageHeader","_ref4","currentIndex","objectKey","objectValue","baggageEntry","encodeURIComponent","newBaggageHeader","warn","objectToBaggageHeader","acc","_ref2","dscKey","dscValue","baggageHeaderToObject","keyOrValue","decodeURIComponent","trim","_ref3","TRACEPARENT_REGEXP","RegExp","propagationContextFromHeaders","sentryTrace","baggage","traceparentData","traceparent","parentSampled","matches","match","traceId","parentSpanId","extractTraceparentData","baggageObject","curr","currBaggageObject","_ref","baggageHeaderToDynamicSamplingContext","substring","spanId","sampled","dsc","generateSentryTraceHeader","sampledString","TRACE_FLAG_SAMPLED","spanToTraceContext","span","_span$spanContext","spanContext","span_id","trace_id","_spanToJSON","spanToJSON","op","parent_span_id","tags","origin","spanToTraceHeader","_span$spanContext2","spanIsSampled","spanTimeInputToSeconds","ensureTimestampInSeconds","getTime","getSpanJSON","spanIsSpanClass","traceFlags","debugIdStackParserCache","WeakMap","captureContextKeys","captureEvent","getCurrentHub","addBreadcrumb","breadcrumb","getClient","getCurrentScope","getScope","getRootSpan","transaction","getDynamicSamplingContextFromClient","client","scope","getOptions","public_key","getDsn","publicKey","user_segment","getUser","segment","emit","getDynamicSamplingContextFromSpan","txn","v7FrozenDsc","_frozenDynamicSamplingContext","_txn$metadata","metadata","maybeSampleRate","sampleRate","sample_rate","jsonSpan","description","applyScopeDataToEvent","fingerprint","breadcrumbs","sdkProcessingMetadata","extra","contexts","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","trace","rootSpan","applySpanToEvent","maybeArray","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","eventProcessors","attachments","propagationContext","mergeAndOverwriteScopeData","mergeVal","globalScope","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","clone","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","_extends2","setExtras","extras","setExtra","_extends3","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","update","captureContext","scopeToMerge","scopeData","getScopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","captureException","syntheticException","originalException","captureMessage","SDK_VERSION","API_VERSION","parseFloat","Hub","isolationScope","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","_this$getStackTop","_ref$beforeBreadcrumb","beforeBreadcrumb","_ref$maxBreadcrumbs","finalBreadcrumb","configureScope","_this$getStackTop2","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","_this$getStackTop3","_ref2$environment","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","_this$getStackTop4","sentry","getMainCarrier","extensions","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","integrations","_step","_iterator","_createForOfIteratorHelperLoose","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","processEvent","convertIntegrationFnToClass","originalFunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","lastException","possibleMessages","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","frames","stacktrace","frame","filename","_getLastValidUrl","oO","SETUP_CLIENTS","functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","setTimeout","rest","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","onerror","msg","line","column","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","normalizeDepth","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","_getOptions","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","globalHandlerLog","_getOptions2","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","DEBOUNCE_DURATION","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","addFetchInstrumentationHandler","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","_parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","addHistoryInstrumentationHandler","instrumentHistory","isChromePackagedApp","chromeVar","chrome","app","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","to","from","historyReplacementFunction","originalHistoryFunction","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","MAX_ALLOWED_STRING_LENGTH","breadcrumbsIntegration","dom","category","_getConsoleBreadcrumbHandler","addClickKeypressInstrumentationHandler","componentName","serializeAttribute","element","_isEvent","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","_getFetchBreadcrumbHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","maxValueLength","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","SPAN_METRIC_SUMMARY","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","request","referrer","headers","Referer","HttpContext","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","_inheritsLoose","subClass","superClass","_defineProperties","props","descriptor","prim","toPrimitive","_createClass","Constructor","protoProps","staticProps","getMetricSummaryJsonForSpan","storage","getMetricStorageForSpan","_step$value$","exportKey","summary","SpanStatus","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","setHttpStatus","httpStatus","setData","spanStatus","getSpanStatusFromHttpCode","setStatus","SpanRecorder","maxlen","_maxlen","spans","spanRecorder","Span","_traceId","_spanId","_startTime","instrumenter","_attributes","setAttributes","attributes","_name","_parentSpanId","_sampled","_status","_endTime","exclusiveTime","_exclusiveTime","_measurements","measurements","_proto2","startChild","childSpan","logMessage","_logMessage","_extends4","setAttribute","setName","updateName","isSuccess","end","toTraceparent","toContext","_getData","updateWithContext","getTraceContext","start_timestamp","_metrics_summary","profile_id","exclusive_time","isRecording","hasData","hasAttributes","string","startTime","endTime","hasTracingEnabled","maybeOptions","enableTracing","startInactiveSpan","ctx","normalizeContext","parentSpan","onlyIfParent","temporaryScope","forceTransaction","_parentSpan$spanConte","_isolationScope$getPr","ISOLATION_SCOPE_ON_START_SPAN_FIELD","SCOPE_ON_START_SPAN_FIELD","setCapturedScopesOnSpan","createChildSpanOrTransaction","Transaction","_Span","transactionContext","_hub","_metadata","_trimEnd","trimEnd","incomingDynamicSamplingContext","initSpanRecorder","setMeasurement","unit","setMetadata","newMetadata","timestampInS","_finishTransaction","getDynamicSamplingContext","setHub","getProfileId","recordDroppedEvent","finishedSpans","endTimes","current","_getCapturedScopesOnS","capturedSpanScope","capturedSpanIsolationScope","transaction_info","newName","spanMetadata","TRACING_DEFAULTS","idleTimeout","finalTimeout","heartbeatInterval","IDLE_TRANSACTION_FINISH_REASONS","IdleTransactionSpanRecorder","_SpanRecorder","_pushActivity","_popActivity","transactionSpanId","originalEnd","IdleTransaction","_Transaction","_idleHub","_idleTimeout","_finalTimeout","_heartbeatInterval","_onScope","delayAutoFinishUntilSignal","activities","_heartbeatCounter","_finished","_idleTimeoutCanceledPermanently","_beforeFinishCallbacks","_finishReason","_autoFinishAllowed","_restartIdleTimeout","endTimestampInS","spanStartedBeforeTransactionFinish","timeoutWithMarginOfError","spanEndedBeforeFinalTimeout","stringifiedSpan","registerBeforeFinishCallback","_pingHeartbeat","cancelIdleTimeout","_temp","restartOnChildSpanChange","_idleTimeoutID","setFinishReason","sendAutoFinishSignal","_beat","heartbeatString","_prevHeartbeatString","_this7","getActiveTransaction","maybeHub","errorsInstrumented","errorCallback","activeTransaction","sampleTransaction","samplingContext","Number","tracesSampler","tracesSampleRate","isValidSampleRate","rate","_startTransaction","configInstrumenter","transactionInstrumenter","_experiments","maxSpans","startIdleTransaction","onScope","tag","po","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","navigation","navigationEntry","entryType","getNavigationEntryFromPerformanceTiming","getActivationStart","navEntry","activationStart","initMetric","navigationType","prerendering","rating","floor","observe","opts","PerformanceObserver","supportedEntryTypes","list","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","onCLS","onReport","report","sessionValue","sessionEntries","handleEntries","hadRecentInput","firstSessionEntry","lastSessionEntry","stopListening","takeRecords","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","onFID","visibilityWatcher","handleEntry","processingStart","disconnect","interactionCountEstimate","minKnownInteractionId","maxKnownInteractionId","updateEstimate","interactionId","min","initInteractionCountPolyfill","durationThreshold","getInteractionCountForNavigation","interactionCount","longestInteractionList","longestInteractionMap","processEntry","minLongestInteraction","existingInteraction","latency","interaction","b","onINP","prevEntry","candidateInteractionIndex","inp","reportedMetricIDs","onLCP","lastEntry","capture","whenReady","onTTFB","responseStart","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addPerformanceInstrumentationHandler","instrumentPerformanceObserver","getCleanupCallback","instrumentCls","instrumentFid","instrumentLcp","instrumentTtfb","instrumentInp","addMetricObserver","previousValue","stopOnCallback","DSN_REGEX","dsnToString","dsn","withPassword","pass","port","projectId","dsnFromComponents","components","makeDsn","exec","_match$slice","_match$slice$","_match$slice$2","projectMatch","dsnFromString","find","component","isValidProtocol","validateDsn","createEnvelope","items","forEachEnvelopeItem","envelope","envelopeItem","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","_step2","_iterator2","itemHeaders","payload","stringifiedPayload","buffers","_step3","totalLength","buf","merged","offset","_iterator3","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","sdk","_metadataOrEvent$sdk","createSpanItem","isMeasurementValue","isFinite","_startChild","excluded","sourceKeys","_objectWithoutPropertiesLoose","_excluded","MAX_INT_AS_BYTES","msToSec","time","getBrowserPerformanceAPI","_lcpEntry","_clsEntry","_performanceCursor","startTrackingWebVitals","fidCallback","_ref5","clsCallback","lcpCallback","addLcpInstrumentationHandler","ttfbCallback","_ref6","INP_ENTRY_MAP","click","pointerdown","pointerup","mousedown","mouseup","touchstart","touchend","mouseover","mouseout","mouseenter","mouseleave","pointerover","pointerout","pointerenter","pointerleave","dragstart","dragend","drag","dragenter","dragleave","dragover","drop","keydown","keyup","keypress","_addPerformanceNavigationTiming","eventEnd","start","setResourceEntrySizeData","dataKey","entryVal","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","enableHTTPTimings","tracingOrigins","tracePropagationTargets","instrumentOutgoingRequests","_traceFetch$traceXHR$","shouldCreateSpanForRequest","shouldCreateSpan","shouldAttachHeadersWithTargets","shouldAttachHeaders","createdSpan","spanOrigin","shouldCreateSpanResult","_handlerData$fetchDat","fullUrl","URL","getFullURL","__span","requestSpan","sentryTraceHeader","sentryBaggageHeader","newHeaders","existingBaggageHeader","newBaggageHeaders","addTracingHeadersToFetchRequest","contentLength","contentLengthNum","endSpan","instrumentFetchRequest","addHTTPTimings","__sentry_xhr_span_id__","setRequestHeader","setHeaderOnXhr","xhrCallback","cleanup","nextHopProtocol","initiatorType","isPerformanceResourceTiming","endsWith","resourceTiming","_extractNetworkProtoc","char","_nextHopProtocol$spli","extractNetworkProtocol","timingSpanData","getAbsoluteTime","redirectStart","fetchStart","domainLookupStart","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseEnd","resourceTimingEntryToSpanData","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","enableLongTask","enableInp","interactionsSampleRate","BrowserTracing","_hasSetTracePropagationTargets","_collectWebVitals","_interactionIdToRouteNameMapping","interactionIdtoRouteNameMapping","inpCallback","interactionIdToRouteNameMapping","_ref7","interactionType","routeName","parentContext","replayId","userDisplay","profileId","replay_id","getSampleRate","sent_at","transport","getTransport","send","_trackINP","startTrackingINP","enableInteractions","_latestRoute","_getCurrentHub","_this$options","instrumentRouting","clientOptionsTracePropagationTargets","_createRouteTransaction","onStartRouteTransaction","statusType","_registerInteractionListener","_registerInpInteractionListener","expandedContext","_this$options2","beforeNavigate","isPageloadTransaction","_propagationContextFr","getMetaContent","modifiedContext","finalContext","idleTransaction","performanceEntries","transactionStartTime","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","resourceUrl","parsedUrl","renderBlockingStatus","_addResourceSpans","connection","effectiveType","rtt","deviceMemory","hardwareConcurrency","_trackNavigator","_addTtfbRequestTimeToMeasurements","oldValue","measurementTimestamp","normalizedValue","fidMark","cls","measurementName","size","sources","node","_tagMetricInfo","addPerformanceEntries","inflightInteractionTransaction","registerInteractionTransaction","_data","_this3$options","currentTransaction","getSource","replay","getIntegrationByName","getReplayId","currentScope","isPerformanceEventTiming","minInteractionId","metaName","selector","metaTag","querySelector","sourceFromAttributes","sourceFromData","sourceFromMetadata","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_getPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","valueOf","isNativeReflectConstruct","instance","_wrapNativeSuper","_cache","Wrapper","_optionalChain","ops","lastAccessLHS","makeLogger","isSyntheticEvent","prepareEvent","_options$normalizeDep","_options$normalizeMax","normalizeMaxBreadth","prepared","dist","_options$maxValueLeng","applyClientOptions","integrationNames","applyIntegrationsMetadata","debugIdStackFramesCache","debugIdMap","_sentryDebugIds","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","normalizeEvent","removeTrailingSlash","DEFAULT_RETRY_AFTER","updateRateLimits","limits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","_limit$split","retryAfter","categories","namespaces","headerDelay","delay","all","headerDate","parse","parseRetryAfterHeader","isBrowser","NodeType$1","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","RETRY_BASE_INTERVAL","RETRY_MAX_COUNT","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MAX_REPLAY_DURATION","_optionalChain$5","_value2","isShadowRoot","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","s","rules","cssRules","cssText","stringifyRule","rule","importStringified","regex","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","meta","oldNode","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","canvasService","canvasCtx","_id","tagNameRegex","IGNORED_NODE","genId","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","isSVGElement","ownerSVGElement","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","descriptorsStr","inParens","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","_options$skipChild","skipChild","_options$inlineStyles","inlineStylesheet","_options$maskInputOpt3","maskTextFn","slimDOMOptions","_options$dataURLOptio3","dataURLOptions","_options$inlineImages","inlineImages","_options$recordCanvas","recordCanvas","onSerialize","onIframeLoad","_options$iframeLoadTi","iframeLoadTimeout","onStylesheetLoad","_options$stylesheetLo","stylesheetLoadTimeout","_options$keepIframeSr","keepIframeSrcFn","_options$newlyAddedEl3","newlyAddedElement","_options$preserveWhit","preserveWhiteSpace","_serializedNode","_options$maskInputOpt","_options$dataURLOptio","_options$newlyAddedEl","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","isCustomElement","_options$maskInputOpt2","_options$dataURLOptio2","_options$newlyAddedEl2","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","stylesheet","styleSheets","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","getContext","x","width","y","getImageData","originalGetImageData","Uint32Array","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","_n$getBoundingClientR","getBoundingClientRect","rr_width","rr_height","src","contentDocument","rr_src","customElements","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","_Array$from","serializedChildNode","isElement$1","_i2","_Array$from2","isShadow","iframeEl","win","fired","blankUrl","timer","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","_value3","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","timeout","previous","leading","remaining","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","cachedImplementations","cached","impl","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_value4","_len5","_key5","isNodeInLinkedList","errorHandler","DoubleLinkedList","tail","_proto3","position","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","m","attributeName","isInputMasked","unattachedDoc","implementation","createHTMLDocument","old","_i3","_Array$from3","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","_i4","_Array$from4","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","childN","_proto4","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","_isAncestorInSet","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_value6","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","scrollCb","sampling","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref10","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","v","lastInputValue","currentWindow","h","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref15","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_15","_16","adoptStyleSheets","initObservers","_hooks","_ref9","viewportResizeCb","lastH","lastW","_step4","mutationObserver","mousemoveHandler","mousemoveCb","mousemove","timeBaseline","callbackThreshold","mousemoveCallback","positions","wrappedCb","totalOffset","timeOffset","updatePosition","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","_ref18","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref11","_ref12","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","_getIdAndStyleId","replaceSync","deleteRule","_getIdAndStyleId2","_getIdAndStyleId3","_getIdAndStyleId4","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref13","typeKey","_getIdAndStyleId5","_getIdAndStyleId6","_ref14","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref16","_ref17","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_getIdAndStyleId7","_17","removeProperty","_getIdAndStyleId8","remove","initStyleDeclarationObserver","fontObserver","collectFonts","_ref19","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","count","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","initSelectionObserver","customElementObserver","_ref20","customElementCb","initCustomElementObserver","pluginHandlers","_iterator4","plugins","plugin","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","_proto5","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","_this8","getRemoteId","getRemoteIds","ids","_this9","_optionalChain$1","_value7","_len7","_key7","wrappedEmit","_takeFullSnapshot","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","_proto6","addLoadListener","IframeManager","iframes","crossOriginIframeMap","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","_proto7","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","_this10","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","_step5","_iterator5","_this11","child","_this12","ShadowDomManagerNoop","_proto8","ShadowDomManager","shadowDoms","restoreHandlers","_proto9","patchAttachShadow","_this13","iframeElement","manager","option","CanvasManagerNoop","_proto10","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","_proto11","linkEl","trackStylesheetInLinkElement","_step6","adoptedStyleSheetData","styleIds","_iterator6","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","_proto12","_this14","onRequestAnimationFrame","thisBuffer","destroy","checkoutEveryNms","checkoutEveryNth","_options$blockClass","_options$blockSelecto","_options$unblockSelec","_options$ignoreClass","_options$ignoreSelect","_options$maskAllText","_options$maskTextClas","_options$unmaskTextCl","_options$maskTextSele","_options$unmaskTextSe","_options$inlineStyles2","maskAllInputs","_maskInputOptions","_slimDOMOptions","_options$maxCanvasSiz","maxCanvasSize","packFn","_options$sampling","_options$dataURLOptio4","mousemoveWait","_options$recordCanvas2","_options$recordCrossO","_options$recordAfter","recordAfter","_options$userTriggere","_options$collectFonts","_options$inlineImages2","_options$keepIframeSr2","_options$ignoreCSSAtt","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","lastFullSnapshotEvent","color","date","month","number","tel","week","select","radio","checkbox","NodeList","DOMTokenList","polyfill","incrementalSnapshotCount","eventProcessor","_step7","_iterator7","postMessage","exceedCount","exceedTime","takeFullSnapshot","_step8","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","_iterator8","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","_ref3$mirror","_ref3$blockClass","_ref3$blockSelector","_ref3$unblockSelector","_ref3$maskAllText","_ref3$maskTextClass","_ref3$unmaskTextClass","_ref3$maskTextSelecto","_ref3$unmaskTextSelec","_ref3$inlineStyleshee","_ref3$inlineImages","_ref3$recordCanvas","_ref3$maskAllInputs","_ref3$slimDOM","slimDOM","_ref3$keepIframeSrcFn","initialOffset","canvasMutationCb","CustomElement","ReplayEventTypeIncrementalSnapshot","timestampToMs","timestampToS","addBreadcrumbEvent","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","INTERACTIVE_SELECTOR","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","_proto13","addListeners","_this15","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_len8","_key8","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","_this16","timedOutClicks","mutationAfter","scrollAfter","_i5","_timedOutClicks","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","_this17","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","decodedBodySize","encodedBodySize","responseStatus","transferSize","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","setupPerformanceObserver","addPerformanceEntry","onEntries","_ref21","clearCallbacks","_ref22","replayPerformanceEntries","getLargestContentfulPaint","clearCallback","logInfo","shouldAddBreadcrumb","addLogBreadcrumb","logInfoNextTick","EventBufferSizeExceededError","_Error","EventBufferArray","events","_totalSize","hasCheckout","_proto14","addEvent","_addEvent2","_callee","eventSize","_context2","_x","_this18","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","_proto15","ensureReady","_this19","_ensureReadyPromise","_ref23","success","terminate","_this20","_getAndIncrementId","_ref24","EventBufferCompressionWorker","_earliestTimestamp","_proto16","_sendEventToWorker","_finishRequest","_finishRequest2","_callee2","_context3","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","_proto17","_finish","_callee3","_context4","ensureWorkerIsLoaded","_ensureWorkerIsLoaded2","_callee4","_context5","t0","_switchToCompressionWorker","_switchToCompressionWorker2","_callee5","_this$_fallback","addEventPromises","_iterator9","_step9","_context6","hasEvents","hasSessionStorage","sessionStorage","isSampled","lastActivity","segmentId","previousSessionId","saveSession","setItem","createSession","_ref26","sessionSampleRate","allowBuffering","_ref26$stickySession","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref28","maxReplayDuration","sessionIdleExpire","_ref28$targetTime","shouldRefreshSession","_ref29","loadOrCreateSession","_ref30","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","sessionObj","fetchSession","addEventSync","shouldAddEvent","_addEvent","_x2","_x3","_x4","_addEvent3","_callee11","replayOptions","eventAfterPossibleCallback","_context12","eventBuffer","recordingMode","maybeApplyCallback","beforeAddRecordingEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","isCustomEvent","isTransactionEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","__sentry__baseTransport__","isBaseTransportSend","sendResponse","replayContext","traceIds","handleTransactionEvent","errorIds","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","createPerformanceSpans","_ref31","addNetworkBreadcrumb","hubOrClient","isHub","tunnel","checkDsn","checkTunnel","isSentryRequestUrl","shouldFilterRequest","getBodySize","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","_normalizeNetworkBody","first","last","exceedsSizeLimit","isProbablyJson","truncatedBody","e3","normalizeNetworkBody","normalizedBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","urls","baseURI","fixedUrl","getFullUrl","_captureFetchBreadcrumbToReplay","_callee12","_context13","_prepareFetchData","_x8","_x9","_x10","_prepareFetchData2","_callee13","_hint$startTimestamp2","_hint$endTimestamp2","_breadcrumb$data2","_breadcrumb$data2$sta","requestBodySize","responseBodySize","captureDetails","_context14","request_body_size","response_body_size","networkDetailAllowUrls","networkDetailDenyUrls","_getRequestInfo","_getResponseInfo","_ref32","networkCaptureBodies","networkRequestHeaders","getHeadersFromOptions","_getBodyString","_getFetchRequestArgBody","bodyStr","_x11","_x12","_x13","_x14","_getResponseInfo2","_callee14","_ref33","networkResponseHeaders","_yield$_parseFetchRes","bodyText","_context15","getAllHeaders","_parseFetchResponseBody","getResponseData","_ref34","_x15","_parseFetchResponseBody2","_callee15","_context16","_tryCloneResponse","_tryGetResponseText","allHeaders","_x16","_getResponseText2","_getResponseText","txt","_callee16","_context17","_captureXhrBreadcrumbToReplay","_callee17","_context18","_prepareXhrData","_hint$startTimestamp","_hint$endTimestamp","_breadcrumb$data","_breadcrumb$data$stat","getAllResponseHeaders","_line$split","getResponseHeaders","_ref35","requestBody","requestWarning","_ref36","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","responseBody","responseWarning","handleNetworkBreadcrumbs","_replay$getOptions2","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","_getBodySize","enrichXhrBreadcrumb","_x17","_x18","_x19","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","_x5","_x6","_x7","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","handleXhr","handleXhrSpanListener","_LAST_BREADCRUMB","addGlobalListeners","newBreadcrumb","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","handleScopeListener","_getDomTarget","isClick","getDomTarget","handleDom","clickDetector","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","includeAfterSendEventHandling","afterSendHandler","isReplayEvent","flush","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","handleGlobalEventListener","hasHooks","exceptionValue","handleHydrationError","handleBeforeSendEvent","lastTransaction","feedbackEvent","includeReplay","addMemoryEntry","_x20","_addMemoryEntry","_callee18","_context19","memoryEntry","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","getHandleRecordingEmit","hadFirstEvent","_isCheckout","isIncrementalEvent","isIncrementalMouseInteraction","_event$data","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","createReplayEnvelope","replayEvent","recordingData","sdkInfo","createEventEnvelopeHeaders","prepareRecordingData","_ref37","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","_x21","_prepareReplayEvent","_callee19","_ref38","eventHint","preparedEvent","_ref48","_context20","_integrations","platform","getSdkMetadata","sendReplayRequest","_x22","_sendReplayRequest","_callee20","_ref39","segment_id","eventContext","preparedRecordingData","baseEvent","rateLimits","_context21","replay_start_timestamp","error_ids","trace_ids","replay_type","cause","TransportStatusCodeError","isRateLimited","dataCategory","disabledUntil","RateLimitError","_Error2","_Error3","_this21","sendReplay","_x23","_x24","_sendReplay","_callee22","replayData","retryConfig","_context23","interval","_retryCount","_callee21","_context22","THROTTLED","ReplayContainer","_ref40","_this22","recordingOptions","__init5","__init6","_lastActivity","_isEnabled","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","cancel","debounce","_flush","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","wasThrottled","throttle","_this$getOptions","slowClickTimeout","slowClickIgnoreSelectors","_proto18","_canvas","initializeSampling","_this$_options","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","_stop","_callee6","_temp2","_ref41","_ref41$forceFlush","forceFlush","_context7","_removeListeners","force","removeItem","deleteSession","_x25","pause","resume","_checkSession","_sendBufferedReplayOrFlush","_callee7","_temp3","_ref42$continueRecord","continueRecording","activityTime","hasStoppedRecording","_context8","flushImmediate","_updateSessionActivity","_maybeSaveSession","_x26","cbResult","updateUserActivity","conditionalFlush","cancelFlush","urlPath","_clearContext","_this23","_ref25","customWorkerUrl","workerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","_refreshSession","_refreshSession2","_callee8","_context9","_x27","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_performanceCleanupCallback","_this24","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","_this25","_this26","_this27","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_this28","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","_runFlush2","_callee9","_context10","_this29","_ref43","_callee10","_temp4","_ref44$force","tooShort","tooLong","_context11","minReplayDuration","_flushLock","_x28","_this30","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay$1","_temp5","_ref47","_ref47$flushMinDelay","_ref47$flushMaxDelay","_ref47$minReplayDurat","_ref47$maxReplayDurat","_ref47$stickySession","_ref47$useCompression","_ref47$_experiments","_ref47$maskAllText","_ref47$maskAllInputs","_ref47$blockAllMedia","_ref47$mutationBreadc","_ref47$mutationLimit","_ref47$slowClickTimeo","_ref47$slowClickIgnor","_ref47$networkDetailA","_ref47$networkDetailD","_ref47$networkCapture","_ref47$networkRequest","_ref47$networkRespons","_ref47$mask","mask","_ref47$maskAttributes","maskAttributes","_ref47$unmask","unmask","_ref47$block","block","_ref47$unblock","unblock","_ref47$ignore","ignore","maskFn","privacyOptions","_ref45","getPrivacyOptions","password","_ref46","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","__initStatic","_proto19","_this31","_setup","_initialize","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","SentryError","logLevel","SENTRY_API_VERSION","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","_encodedAuth","createMetricEnvelope","metricBucketItems","tagEntries","maybeTags","metricType","serializeMetricBuckets","createMetricEnvelopeItem","ALREADY_SEEN_ERROR","BaseClient","_integrationsInitialized","_numProcessing","_outcomes","_dsn","_transport","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","sendSession","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","forceInitialize","_setupIntegrations","getIntegrationById","integrationId","integrationName","addIntegration","isAlreadyInstalled","sendEvent","newItem","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelope","promise","_sendEnvelope","createSessionEnvelope","eventOrCount","sendClientReports","captureAggregateMetrics","metricsEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","ticked","clearInterval","_prepareEvent","_processEvent","finalEvent","sentryError","isTransaction","beforeSendLabel","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","_clearOutcomes","outcomes","_key$split","quantity","BrowserClient","_BaseClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","task","$","taskProducer","drain","capturedSetTimeout","makePromiseBuffer","bufferSize","filteredEnvelopeItems","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","subMatch","_extractSafariExtensi","extractSafariExtensionDetails","_extractSafariExtensi2","isSafariExtension","isSafariWebExtension","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","_hub$getStackTop","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","injectionPoint","severityLevelFromString","CaptureConsole","levels","consoleHandler","Replay","Sentry","createClient","config","_event$user","scrubEmails","showFeedback","getUserData","captureConsole","nameAttr","userData","_app$session","_userData","userId"],"sourceRoot":""}