{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/debug-build.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","export const SDK_VERSION = '7.119.1';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\n\nimport {\n  BrowserClient,\n  defaultStackParser,\n  getCurrentHub,\n  makeFetchTransport,\n  showReportDialog,\n  Breadcrumbs,\n  GlobalHandlers,\n  InboundFilters,\n  FunctionToString,\n  LinkedErrors,\n  HttpContext,\n  TryCatch,\n  BrowserTracing,\n  Replay,\n} from '@sentry/browser';\n\nimport { CaptureConsole } from '@sentry/integrations';\n\nconst integrations = [\n  new InboundFilters(),\n  new FunctionToString(),\n  new TryCatch(),\n  new GlobalHandlers({\n    onerror: true,\n    onunhandledrejection: true,\n  }),\n  new Breadcrumbs({\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n  }),\n  new LinkedErrors({\n    key: 'cause',\n    limit: 5,\n  }),\n  new HttpContext(),\n];\n\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\n\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\n\nconst createClient = (config) =>\n  new BrowserClient({\n    dsn: config.dsn,\n\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n\n    beforeSend: (event) => {\n      event.logger = 'javascript';\n\n      if (config.scrubEmails && event.user?.email) {\n        delete event.user.email;\n      }\n\n      if (config.showFeedback && event.exception) {\n        showReportDialog({ eventId: event.event_id, user: Sentry.getUserData('name') });\n      }\n\n      return event;\n    },\n\n    tracesSampleRate: config.tracesSampleRate,\n    replaysSessionSampleRate: config.replaysSessionSampleRate,\n    replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n\n    integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean),\n  });\n\nwindow.Sentry = { createClient, getCurrentHub, showReportDialog };\n\nwindow.Sentry.getUserData = (nameAttr = 'username') => {\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username(),\n      };\n\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId,\n      };\n    }\n  }\n\n  return userData;\n};\n\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});\n"],"names":["_typeof","require","_regeneratorRuntime","module","exports","__esModule","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","d","a","definition","o","get","g","e","window","prop","flarum","core","compat","isGlobalObj","Math","GLOBAL_OBJ","global","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","enabled","logger","enable","disable","isEnabled","_extends","assign","bind","target","arguments","source","apply","objectToString","toString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","htmlTreeAsString","elem","options","nextStr","currentElem","out","height","len","keyAttrs","Array","isArray","maxStringLength","_htmlElementAsString","separator","parentNode","join","_oO","el","classes","attr","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","id","split","allowedAttrs","truncate","str","max","safeJoin","input","delimiter","output","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","o_O","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","isPojo","memoVal","returnValue","set","_i","_Object$keys","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","c","getFirstException","event","getEventDescription","eventId","event_id","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","_proto","onfulfilled","onrejected","_this","_executeHandlers","onfinally","_this2","isRejected","_this3","_setResult","RESOLVED","_this4","REJECTED","_this5","_value","_this6","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","DEFAULT_ENVIRONMENT","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","updateSession","session","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","inner","WeakSet","has","add","splice","_memo","memoize","unmemoize","stringified","_events","document","isSyntheticEvent","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","spanToTraceContext","span","_span$spanContext","spanContext","span_id","spanId","trace_id","traceId","_spanToJSON","spanToJSON","op","parent_span_id","tags","origin","getSpanJSON","spanIsSpanClass","debugIdStackParserCache","WeakMap","captureContextKeys","captureEvent","getCurrentHub","addBreadcrumb","breadcrumb","getClient","getRootSpan","transaction","getDynamicSamplingContextFromClient","client","scope","getOptions","public_key","getDsn","publicKey","user_segment","getUser","segment","dsc","emit","getDynamicSamplingContextFromSpan","getScope","txn","v7FrozenDsc","_frozenDynamicSamplingContext","_txn$metadata","metadata","maybeSampleRate","sampleRate","sample_rate","jsonSpan","description","sampled","traceFlags","spanIsSampled","applyScopeDataToEvent","fingerprint","breadcrumbs","sdkProcessingMetadata","extra","contexts","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","trace","rootSpan","dynamicSamplingContext","applySpanToEvent","maybeArray","concat","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","eventProcessors","attachments","propagationContext","mergeAndOverwriteScopeData","mergeVal","globalScope","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","clone","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","_extends2","setExtras","extras","setExtra","_extends3","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","update","captureContext","scopeToMerge","scopeData","getScopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","captureException","warn","syntheticException","originalException","captureMessage","substring","SDK_VERSION","API_VERSION","parseFloat","Hub","isolationScope","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","_this$getStackTop","_ref","_ref$beforeBreadcrumb","beforeBreadcrumb","_ref$maxBreadcrumbs","finalBreadcrumb","configureScope","_this$getStackTop2","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","_this$getStackTop3","_ref2","_ref2$environment","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","_this$getStackTop4","sentry","getMainCarrier","extensions","_len","args","_key","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","integrations","_step","_iterator","_createForOfIteratorHelperLoose","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","processEvent","convertIntegrationFnToClass","originalFunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","lastException","possibleMessages","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","frames","stacktrace","frame","filename","_getLastValidUrl","oO","SETUP_CLIENTS","functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","setTimeout","rest","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","instrumentError","onerror","msg","line","column","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","normalizeDepth","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","_getOptions","groups","match","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","_getOptions2","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","log","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","_parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","instrumentHistory","isChromePackagedApp","chromeVar","chrome","app","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","to","from","historyReplacementFunction","originalHistoryFunction","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","breadcrumbsIntegration","dom","category","_getConsoleBreadcrumbHandler","addClickKeypressInstrumentationHandler","componentName","serializeAttribute","element","_isEvent","getComponentName","_getDomBreadcrumbHandler","addXhrInstrumentationHandler","_getXhrBreadcrumbHandler","addFetchInstrumentationHandler","_getFetchBreadcrumbHandler","addHistoryInstrumentationHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","maxValueLength","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","request","referrer","headers","Referer","HttpContext","_setPrototypeOf","p","_inheritsLoose","subClass","superClass","DSN_REGEX","dsnToString","dsn","withPassword","pass","port","projectId","dsnFromComponents","components","makeDsn","exec","_match$slice","_match$slice$","_match$slice$2","projectMatch","dsnFromString","createEnvelope","items","forEachEnvelopeItem","envelope","envelopeItem","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","_step2","_iterator2","itemHeaders","payload","stringifiedPayload","buffers","_step3","totalLength","reduce","acc","buf","merged","offset","_iterator3","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","sdk","_metadataOrEvent$sdk","_getPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","valueOf","isNativeReflectConstruct","instance","_wrapNativeSuper","_cache","Wrapper","SentryError","_Error","logLevel","ReferenceError","_assertThisInitialized","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","tunnel","sdkInfo","_metadata","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","encodeURIComponent","_encodedAuth","createMetricEnvelope","metricBucketItems","sent_at","tagEntries","entries","maybeTags","unit","metric","metricType","serializeMetricBuckets","createMetricEnvelopeItem","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_dsn","_transport","transport","recordDroppedEvent","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","capturedSpanScope","sendSession","getSdkMetadata","getTransport","flush","timeout","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","getEventProcessors","eventProcessor","forceInitialize","_isEnabled","_setupIntegrations","getIntegrationById","integrationId","getIntegrationByName","integrationName","addIntegration","isAlreadyInstalled","sendEvent","newItem","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelopeHeaders","createEventEnvelope","promise","_sendEnvelope","sendResponse","createSessionEnvelope","eventOrCount","sendClientReports","count","captureAggregateMetrics","metricsEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","Number","ticked","interval","clearInterval","_prepareEvent","_options$normalizeDep","_options$normalizeMax","normalizeMaxBreadth","prepared","dist","_options$maxValueLeng","applyClientOptions","integrationNames","applyIntegrationsMetadata","debugIdStackFramesCache","debugIdMap","_sentryDebugIds","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","b","spans","normalizeEvent","prepareEvent","parentSpanId","_processEvent","finalEvent","_this7","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","capturedSpanIsolationScope","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","transaction_info","_this8","send","_clearOutcomes","outcomes","_key$split","quantity","BrowserClient","_BaseClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","visibilityState","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","platform","discarded_events","createTransport","makeRequest","remove","task","$","taskProducer","drain","counter","capturedSetTimeout","makePromiseBuffer","bufferSize","rateLimits","filteredEnvelopeItems","limits","all","disabledUntil","isRateLimited","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","_limit$split","retryAfter","categories","namespaces","headerDelay","delay","headerDate","parse","parseRetryAfterHeader","updateRateLimits","__sentry__baseTransport__","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","subMatch","_extractSafariExtensi","extractSafariExtensionDetails","_extractSafariExtensi2","isSafariExtension","isSafariWebExtension","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","_hub$getStackTop","script","crossOrigin","src","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","removeEventListener","injectionPoint","makeLogger","severityLevelFromString","CaptureConsole","levels","find","consoleHandler","Sentry","createClient","config","_event$user","scrubEmails","showFeedback","getUserData","tracesSampleRate","replaysSessionSampleRate","replaysOnErrorSampleRate","captureConsole","nameAttr","userData","_app$session","_userData","userId"],"sourceRoot":""}