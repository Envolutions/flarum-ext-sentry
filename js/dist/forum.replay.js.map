{"version":3,"file":"forum.replay.js","mappings":"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","sources":["webpack://@fof/sentry/../../src/node.ts","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/harmony module decorator","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/debug-build.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@fof/sentry/../../../src/buildPolyfills/_optionalChain.ts","webpack://@fof/sentry/../../../src/utils/isSentryRequestUrl.ts","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../src/isBrowser.ts","webpack://@fof/sentry/../../../src/common/debug-build.ts","webpack://@fof/sentry/../../../src/browser/types.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getActivationStart.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/onHidden.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/observe.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getLCP.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/initMetric.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/generateUniqueID.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/bindReporter.ts","webpack://@fof/sentry/../../../src/browser/instrument.ts","webpack://@fof/sentry/../../../src/constants.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","webpack://@fof/sentry/../../../src/buildPolyfills/_nullishCoalesce.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","webpack://@fof/sentry/../../../src/coreHandlers/util/onWindowOpen.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","webpack://@fof/sentry/../../../src/util/timestamp.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addBreadcrumbEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/domUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleClick.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../src/util/createBreadcrumb.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/getAttributesToRecord.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleDom.ts","webpack://@fof/sentry/../../../src/util/createPerformanceEntries.ts","webpack://@fof/sentry/../../../src/coreHandlers/performanceObserver.ts","webpack://@fof/sentry/../../../src/debug-build.ts","webpack://@fof/sentry/../../../src/eventBuffer/error.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferArray.ts","webpack://@fof/sentry/../../../src/eventBuffer/WorkerHandler.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferCompressionWorker.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferProxy.ts","webpack://@fof/sentry/../../../src/util/hasSessionStorage.ts","webpack://@fof/sentry/../../../src/util/isSampled.ts","webpack://@fof/sentry/../../../src/session/Session.ts","webpack://@fof/sentry/../../../src/session/saveSession.ts","webpack://@fof/sentry/../../../src/session/createSession.ts","webpack://@fof/sentry/../../../src/util/isExpired.ts","webpack://@fof/sentry/../../../src/util/isSessionExpired.ts","webpack://@fof/sentry/../../../src/session/shouldRefreshSession.ts","webpack://@fof/sentry/../../../src/session/loadOrCreateSession.ts","webpack://@fof/sentry/../../../src/session/fetchSession.ts","webpack://@fof/sentry/../../../src/util/addEvent.ts","webpack://@fof/sentry/../../../src/util/eventUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleAfterSendEvent.ts","webpack://@fof/sentry/../../../src/util/createPerformanceSpans.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/shouldFilterRequest.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/networkUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/fetchUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/xhrUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleFetch.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleXhr.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleScope.ts","webpack://@fof/sentry/../../../src/util/addGlobalListeners.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleHistory.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleGlobalEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/isRrwebError.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleBeforeSendEvent.ts","webpack://@fof/sentry/../../../src/util/addMemoryEntry.ts","webpack://@fof/sentry/../../../src/util/handleRecordingEmit.ts","webpack://@fof/sentry/../../../src/types/rrweb.ts","webpack://@fof/sentry/../../../src/util/createReplayEnvelope.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/../../../src/util/prepareRecordingData.ts","webpack://@fof/sentry/../../../src/util/prepareReplayEvent.ts","webpack://@fof/sentry/../../../src/util/sendReplayRequest.ts","webpack://@fof/sentry/../../../src/util/sendReplay.ts","webpack://@fof/sentry/../../../src/util/throttle.ts","webpack://@fof/sentry/../../../src/replay.ts","webpack://@fof/sentry/../../../src/util/debounce.ts","webpack://@fof/sentry/../../../src/session/clearSession.ts","webpack://@fof/sentry/../../src/semanticAttributes.ts","webpack://@fof/sentry/../../../src/eventBuffer/index.ts","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/index.js","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/worker.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleKeyboardEvent.ts","webpack://@fof/sentry/../../../src/util/getPrivacyOptions.ts","webpack://@fof/sentry/../../../src/integration.ts","webpack://@fof/sentry/../../../src/util/maskAttribute.ts","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","export const SDK_VERSION = '7.119.1';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\n\nimport {\n  BrowserClient,\n  defaultStackParser,\n  getCurrentHub,\n  makeFetchTransport,\n  showReportDialog,\n  Breadcrumbs,\n  GlobalHandlers,\n  InboundFilters,\n  FunctionToString,\n  LinkedErrors,\n  HttpContext,\n  TryCatch,\n  BrowserTracing,\n  Replay,\n} from '@sentry/browser';\n\nimport { CaptureConsole } from '@sentry/integrations';\n\nconst integrations = [\n  new InboundFilters(),\n  new FunctionToString(),\n  new TryCatch(),\n  new GlobalHandlers({\n    onerror: true,\n    onunhandledrejection: true,\n  }),\n  new Breadcrumbs({\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n  }),\n  new LinkedErrors({\n    key: 'cause',\n    limit: 5,\n  }),\n  new HttpContext(),\n];\n\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\n\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\n\nconst createClient = (config) =>\n  new BrowserClient({\n    dsn: config.dsn,\n\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n\n    beforeSend: (event) => {\n      event.logger = 'javascript';\n\n      if (config.scrubEmails && event.user?.email) {\n        delete event.user.email;\n      }\n\n      if (config.showFeedback && event.exception) {\n        showReportDialog({ eventId: event.event_id, user: Sentry.getUserData('name') });\n      }\n\n      return event;\n    },\n\n    tracesSampleRate: config.tracesSampleRate,\n    replaysSessionSampleRate: config.replaysSessionSampleRate,\n    replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n\n    integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean),\n  });\n\nwindow.Sentry = { createClient, getCurrentHub, showReportDialog };\n\nwindow.Sentry.getUserData = (nameAttr = 'username') => {\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username(),\n      };\n\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId,\n      };\n    }\n  }\n\n  return userData;\n};\n\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});\n"],"names":["isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","_typeof","require","_regeneratorRuntime","module","exports","__esModule","Op","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","n","getter","d","a","definition","o","get","g","e","window","hmd","children","set","prop","flarum","core","compat","isGlobalObj","Math","GLOBAL_OBJ","global","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","enabled","logger","enable","disable","isEnabled","_extends","assign","bind","target","arguments","source","apply","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","htmlTreeAsString","elem","options","nextStr","currentElem","out","height","len","keyAttrs","Array","isArray","maxStringLength","_htmlElementAsString","separator","parentNode","join","_oO","el","classes","attr","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","truncate","str","max","safeJoin","input","delimiter","output","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","o_O","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","isPojo","memoVal","returnValue","_i","_Object$keys","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","c","getFirstException","event","getEventDescription","eventId","event_id","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","_proto","onfulfilled","onrejected","_this","_executeHandlers","onfinally","_this2","isRejected","_this3","_setResult","RESOLVED","_this4","REJECTED","_this5","_value","_this6","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","DEFAULT_ENVIRONMENT","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","updateSession","session","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","inner","WeakSet","has","add","splice","_memo","memoize","unmemoize","stringified","_events","document","isSyntheticEvent","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","spanToTraceContext","span","_span$spanContext","spanContext","span_id","spanId","trace_id","traceId","_spanToJSON","spanToJSON","op","parent_span_id","tags","origin","getSpanJSON","spanIsSpanClass","debugIdStackParserCache","WeakMap","captureContextKeys","captureEvent","getCurrentHub","addBreadcrumb","breadcrumb","getClient","getRootSpan","transaction","getDynamicSamplingContextFromClient","client","scope","getOptions","public_key","getDsn","publicKey","user_segment","getUser","segment","dsc","emit","getDynamicSamplingContextFromSpan","getScope","txn","v7FrozenDsc","_frozenDynamicSamplingContext","_txn$metadata","metadata","maybeSampleRate","sampleRate","sample_rate","jsonSpan","description","sampled","traceFlags","spanIsSampled","applyScopeDataToEvent","fingerprint","breadcrumbs","sdkProcessingMetadata","extra","contexts","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","trace","rootSpan","dynamicSamplingContext","applySpanToEvent","maybeArray","concat","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","eventProcessors","attachments","propagationContext","mergeAndOverwriteScopeData","mergeVal","globalScope","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","clone","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","_extends2","setExtras","extras","setExtra","_extends3","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","update","captureContext","scopeToMerge","scopeData","getScopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","captureException","warn","syntheticException","originalException","captureMessage","substring","SDK_VERSION","API_VERSION","parseFloat","Hub","isolationScope","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","_this$getStackTop","_ref","_ref$beforeBreadcrumb","beforeBreadcrumb","_ref$maxBreadcrumbs","finalBreadcrumb","configureScope","_this$getStackTop2","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","_this$getStackTop3","_ref2","_ref2$environment","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","_this$getStackTop4","sentry","getMainCarrier","extensions","_len","args","_key","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","integrations","_step","_iterator","_createForOfIteratorHelperLoose","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","processEvent","convertIntegrationFnToClass","originalFunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","lastException","possibleMessages","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","frames","stacktrace","frame","filename","_getLastValidUrl","oO","SETUP_CLIENTS","functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","setTimeout","rest","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","instrumentError","onerror","msg","line","column","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","normalizeDepth","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","_getOptions","groups","match","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","_getOptions2","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","log","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","_parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","instrumentHistory","isChromePackagedApp","chromeVar","chrome","app","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","to","from","historyReplacementFunction","originalHistoryFunction","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","breadcrumbsIntegration","dom","category","_getConsoleBreadcrumbHandler","addClickKeypressInstrumentationHandler","componentName","serializeAttribute","element","_isEvent","getComponentName","_getDomBreadcrumbHandler","addXhrInstrumentationHandler","_getXhrBreadcrumbHandler","addFetchInstrumentationHandler","_getFetchBreadcrumbHandler","addHistoryInstrumentationHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","maxValueLength","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","request","referrer","headers","Referer","HttpContext","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_defineProperties","props","descriptor","prim","toPrimitive","_createClass","Constructor","protoProps","staticProps","_setPrototypeOf","p","_inheritsLoose","subClass","superClass","_getPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","valueOf","isNativeReflectConstruct","instance","_wrapNativeSuper","_cache","Wrapper","_optionalChain","ops","lastAccessLHS","browserPerformanceTimeOrigin","makeLogger","getCurrentScope","prepareEvent","_options$normalizeDep","_options$normalizeMax","normalizeMaxBreadth","prepared","dist","_options$maxValueLeng","applyClientOptions","integrationNames","sdk","applyIntegrationsMetadata","debugIdStackFramesCache","debugIdMap","_sentryDebugIds","cachedDebugIdStackFrameCache","filenameDebugIdMap","reduce","acc","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","b","spans","normalizeEvent","removeTrailingSlash","dsnToString","dsn","withPassword","pass","port","projectId","updateRateLimits","limits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","_limit$split","retryAfter","categories","namespaces","headerDelay","delay","_step2","_iterator2","all","headerDate","parse","parseRetryAfterHeader","isBrowser","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","navigation","navigationEntry","entryType","startTime","getNavigationEntryFromPerformanceTiming","getActivationStart","navEntry","activationStart","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","firstHiddenTime","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","getEntries","buffered","reportedMetricIDs","onLCP","onReport","navigationType","report","visibilityWatcher","prerendering","Infinity","timeStamp","metric","rating","delta","entries","floor","handleEntries","lastEntry","prevValue","forceReport","bindReporter","stopListening","takeRecords","disconnect","capture","_previousLcp","instrumentLcp","getCleanupCallback","NodeType$1","REPLAY_SESSION_KEY","UNABLE_TO_SEND_REPLAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MAX_REPLAY_DURATION","_optionalChain$5","_value2","isShadowRoot","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","s","rules","cssRules","cssText","stringifyRule","rule","importStringified","regex","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","node","meta","oldNode","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","canvasService","canvasCtx","_id","tagNameRegex","RegExp","genId","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","parts","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","isSVGElement","ownerSVGElement","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","exec","descriptorsStr","inParens","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","selector","matches","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","_options$skipChild","skipChild","_options$inlineStyles","inlineStylesheet","_options$maskInputOpt3","maskTextFn","slimDOMOptions","_options$dataURLOptio3","dataURLOptions","_options$inlineImages","inlineImages","_options$recordCanvas","recordCanvas","onSerialize","onIframeLoad","_options$iframeLoadTi","iframeLoadTimeout","onStylesheetLoad","_options$stylesheetLo","stylesheetLoadTimeout","_options$keepIframeSr","keepIframeSrcFn","_options$newlyAddedEl3","newlyAddedElement","_options$preserveWhit","preserveWhiteSpace","_serializedNode","_options$maskInputOpt","_options$dataURLOptio","_options$newlyAddedEl","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","isCustomElement","_options$maskInputOpt2","_options$dataURLOptio2","_options$newlyAddedEl2","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","attributes","stylesheet","styleSheets","find","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","ctx","getContext","x","width","y","getImageData","originalGetImageData","Uint32Array","min","buffer","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","oldValue","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","_n$getBoundingClientR","getBoundingClientRect","rr_width","rr_height","src","contentDocument","rr_src","customElements","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","endsWith","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","_Array$from","serializedChildNode","isElement$1","_i2","_Array$from2","isShadow","iframeEl","win","fired","blankUrl","timer","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","_value3","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","timeout","previous","leading","remaining","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","getTime","StyleSheetMirror","styleIDMap","idStyleMap","_proto2","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","cachedImplementations","cached","impl","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_value4","_len5","_key5","isNodeInLinkedList","errorHandler","DoubleLinkedList","tail","_proto3","position","current","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","_step3","_iterator3","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","m","attributeName","isInputMasked","setAttribute","unattachedDoc","implementation","createHTMLDocument","old","_i3","_Array$from3","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","_i4","_Array$from4","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","childN","_proto4","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","r","size","_isAncestorInSet","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_value6","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","_ref7","scrollCb","sampling","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref10","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","v","lastInputValue","currentWindow","h","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref15","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_this7","_15","_16","adoptStyleSheets","initObservers","_hooks","_ref9","viewportResizeCb","lastH","lastW","_step4","mutationObserver","mousemoveHandler","_ref4","mousemoveCb","mousemove","timeBaseline","callbackThreshold","mousemoveCallback","positions","wrappedCb","totalOffset","timeOffset","updatePosition","_ref5","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","_ref6","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","Number","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","_ref18","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref11","_ref12","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","_getIdAndStyleId","replaceSync","deleteRule","_getIdAndStyleId2","_getIdAndStyleId3","_getIdAndStyleId4","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref13","typeKey","_getIdAndStyleId5","_getIdAndStyleId6","_ref14","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref16","_ref17","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_getIdAndStyleId7","_17","removeProperty","_getIdAndStyleId8","remove","initStyleDeclarationObserver","fontObserver","collectFonts","_ref19","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","count","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","start","end","initSelectionObserver","customElementObserver","_ref20","customElementCb","initCustomElementObserver","pluginHandlers","_iterator4","plugins","plugin","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","_proto5","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","_this8","getRemoteId","getRemoteIds","ids","_this9","_optionalChain$1","_value7","_len7","_key7","wrappedEmit","_takeFullSnapshot","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","_proto6","addLoadListener","IframeManager","iframes","crossOriginIframeMap","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","_proto7","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","_this10","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","_step5","_iterator5","_this11","child","_this12","ShadowDomManagerNoop","_proto8","ShadowDomManager","shadowDoms","restoreHandlers","_proto9","patchAttachShadow","_this13","iframeElement","manager","option","CanvasManagerNoop","_proto10","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","_proto11","linkEl","trackStylesheetInLinkElement","_step6","adoptedStyleSheetData","styleIds","_iterator6","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","_proto12","_this14","onRequestAnimationFrame","thisBuffer","buffers","destroy","checkoutEveryNms","checkoutEveryNth","_options$blockClass","_options$blockSelecto","_options$unblockSelec","_options$ignoreClass","_options$ignoreSelect","_options$maskAllText","_options$maskTextClas","_options$unmaskTextCl","_options$maskTextSele","_options$unmaskTextSe","_options$inlineStyles2","maskAllInputs","_maskInputOptions","_slimDOMOptions","_options$maxCanvasSiz","maxCanvasSize","packFn","_options$sampling","_options$dataURLOptio4","mousemoveWait","_options$recordCanvas2","_options$recordCrossO","_options$recordAfter","recordAfter","_options$userTriggere","_options$collectFonts","_options$inlineImages2","_options$keepIframeSr2","_options$ignoreCSSAtt","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","lastFullSnapshotEvent","color","date","month","number","tel","time","week","select","radio","checkbox","NodeList","DOMTokenList","polyfill","incrementalSnapshotCount","eventProcessor","_step7","_iterator7","buf","postMessage","exceedCount","exceedTime","takeFullSnapshot","_step8","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","_iterator8","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","_ref3","_ref3$mirror","_ref3$blockClass","_ref3$blockSelector","_ref3$unblockSelector","_ref3$maskAllText","_ref3$maskTextClass","_ref3$unmaskTextClass","_ref3$maskTextSelecto","_ref3$unmaskTextSelec","_ref3$inlineStyleshee","_ref3$inlineImages","_ref3$recordCanvas","_ref3$maskAllInputs","_ref3$slimDOM","slimDOM","_ref3$keepIframeSrcFn","initialOffset","canvasMutationCb","CustomElement","timestampToMs","timestampToS","addBreadcrumbEvent","replay","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","tag","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","_proto13","addListeners","_this15","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_len8","_key8","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","click","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","_this16","timedOutClicks","mutationAfter","scrollAfter","_i5","_timedOutClicks","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","_this17","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","initiatorType","responseEnd","decodedBodySize","encodedBodySize","responseStatus","transferSize","getAbsoluteTime","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","setupPerformanceObserver","addPerformanceEntry","performanceEntries","onEntries","_ref21","stopOnCallback","clearCallbacks","durationThreshold","instrumentPerformanceObserver","addPerformanceInstrumentationHandler","previousValue","addMetricObserver","_ref22","replayPerformanceEntries","getLargestContentfulPaint","clearCallback","EventBufferSizeExceededError","_Error","EventBufferArray","events","_totalSize","hasCheckout","_proto14","addEvent","_addEvent2","_callee","eventSize","_context2","_x","_this18","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","_proto15","ensureReady","_this19","_ensureReadyPromise","_ref23","success","terminate","_this20","_getAndIncrementId","_ref24","EventBufferCompressionWorker","_earliestTimestamp","_proto16","_sendEventToWorker","_finishRequest","_finishRequest2","_callee2","_context3","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","_proto17","_finish","_callee3","_context4","ensureWorkerIsLoaded","_ensureWorkerIsLoaded2","_callee4","_context5","t0","_switchToCompressionWorker","_switchToCompressionWorker2","_callee5","_this$_fallback","addEventPromises","_iterator9","_step9","_context6","hasEvents","hasSessionStorage","sessionStorage","isSampled","lastActivity","segmentId","previousSessionId","saveSession","setItem","createSession","_ref26","_temp","sessionSampleRate","allowBuffering","_ref26$stickySession","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref28","maxReplayDuration","sessionIdleExpire","_ref28$targetTime","shouldRefreshSession","_ref29","loadOrCreateSession","_ref30","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","fetchSession","addEventSync","shouldAddEvent","_addEvent","_x2","_x3","_x4","_addEvent3","_callee11","replayOptions","eventAfterPossibleCallback","_context12","eventBuffer","recordingMode","maybeApplyCallback","beforeAddRecordingEvent","recordDroppedEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","_experiments","isCustomEvent","isTransactionEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","transport","getTransport","send","__sentry__baseTransport__","isBaseTransportSend","sendResponse","replayContext","traceIds","handleTransactionEvent","errorIds","replayId","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","createPerformanceSpans","_ref31","addNetworkBreadcrumb","hubOrClient","tunnel","isHub","checkDsn","checkTunnel","getBodySize","textEncoder","encode","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","_normalizeNetworkBody","first","last","exceedsSizeLimit","isProbablyJson","truncatedBody","e3","normalizeNetworkBody","normalizedBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","urls","fullUrl","baseURI","fixedUrl","URL","getFullUrl","_captureFetchBreadcrumbToReplay","_callee12","_context13","_prepareFetchData","_x8","_x9","_x10","_prepareFetchData2","_callee13","_hint$startTimestamp2","_hint$endTimestamp2","_breadcrumb$data2","_breadcrumb$data2$sta","requestBodySize","responseBodySize","captureDetails","_context14","request_body_size","response_body_size","networkDetailAllowUrls","networkDetailDenyUrls","_getRequestInfo","_getResponseInfo","_ref32","networkCaptureBodies","networkRequestHeaders","getHeadersFromOptions","_getBodyString","_getFetchRequestArgBody","bodyStr","_x11","_x12","_x13","_x14","_getResponseInfo2","_callee14","_ref33","networkResponseHeaders","_yield$_parseFetchRes","bodyText","_context15","getAllHeaders","_parseFetchResponseBody","getResponseData","_ref34","_x15","_parseFetchResponseBody2","_callee15","_context16","_tryCloneResponse","_tryGetResponseText","allHeaders","_x16","_getResponseText2","_getResponseText","txt","_callee16","_context17","_captureXhrBreadcrumbToReplay","_callee17","_context18","_prepareXhrData","_hint$startTimestamp","_hint$endTimestamp","_breadcrumb$data","_breadcrumb$data$stat","getAllResponseHeaders","_line$split","getResponseHeaders","_ref35","requestBody","requestWarning","_ref36","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","responseBody","responseWarning","handleNetworkBreadcrumbs","TextEncoder","_replay$getOptions2","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","_getBodySize","enrichXhrBreadcrumb","_x17","_x18","_x19","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","_x5","_x6","_x7","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","handleXhr","handleXhrSpanListener","_LAST_BREADCRUMB","addGlobalListeners","newBreadcrumb","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","handleScopeListener","_getDomTarget","isClick","getDomTarget","handleDom","clickDetector","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","includeAfterSendEventHandling","afterSendHandler","isReplayEvent","flush","feedback","replay_id","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","handleGlobalEventListener","hasHooks","exceptionValue","handleHydrationError","handleBeforeSendEvent","lastTransaction","feedbackEvent","includeReplay","addMemoryEntry","_x20","_addMemoryEntry","_callee18","_context19","memoryEntry","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","getHandleRecordingEmit","hadFirstEvent","_isCheckout","isIncrementalEvent","isIncrementalMouseInteraction","_event$data","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","createReplayEnvelope","replayEvent","recordingData","sdkInfo","sent_at","createEventEnvelopeHeaders","metadataOrEvent","_metadataOrEvent$sdk","getSdkMetadataForEnvelopeHeader","items","prepareRecordingData","_ref37","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","_x21","_prepareReplayEvent","_callee19","_ref38","eventHint","preparedEvent","_ref48","_context20","_integrations","platform","getSdkMetadata","sendReplayRequest","_x22","_sendReplayRequest","_callee20","_ref39","segment_id","eventContext","preparedRecordingData","baseEvent","envelope","rateLimits","_context21","replay_start_timestamp","error_ids","trace_ids","replay_type","cause","TransportStatusCodeError","isRateLimited","dataCategory","disabledUntil","RateLimitError","_Error2","_Error3","_this21","sendReplay","_x23","_x24","_sendReplay","_callee22","replayData","retryConfig","_context23","interval","_retryCount","_callee21","_context22","THROTTLED","ReplayContainer","_ref40","_this22","recordingOptions","__init5","__init6","_lastActivity","_isEnabled","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","_flush","debounced","cancel","debounce","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","wasThrottled","throttle","_this$getOptions","slowClickTimeout","slowClickIgnoreSelectors","_proto18","_canvas","initializeSampling","_this$_options","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","_stop","_callee6","_temp2","_ref41","_ref41$forceFlush","forceFlush","_context7","_removeListeners","force","removeItem","deleteSession","_x25","pause","resume","_checkSession","_sendBufferedReplayOrFlush","_callee7","_temp3","_ref42$continueRecord","continueRecording","activityTime","hasStoppedRecording","_context8","flushImmediate","_updateSessionActivity","_maybeSaveSession","_x26","cbResult","updateUserActivity","conditionalFlush","cancelFlush","urlPath","pathname","_clearContext","_this23","_ref25","customWorkerUrl","workerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","_refreshSession","_refreshSession2","_callee8","_context9","_x27","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_performanceCleanupCallback","_this24","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","_this25","_this26","_this27","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_this28","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","_runFlush2","_callee9","_context10","_this29","_ref43","_callee10","_temp4","_ref44$force","tooShort","tooLong","_context11","minReplayDuration","_flushLock","_x28","_this30","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay$1","_temp5","_ref47","_ref47$flushMinDelay","_ref47$flushMaxDelay","_ref47$minReplayDurat","_ref47$maxReplayDurat","_ref47$stickySession","_ref47$useCompression","_ref47$_experiments","_ref47$maskAllText","_ref47$maskAllInputs","_ref47$blockAllMedia","_ref47$mutationBreadc","_ref47$mutationLimit","_ref47$slowClickTimeo","_ref47$slowClickIgnor","_ref47$networkDetailA","_ref47$networkDetailD","_ref47$networkCapture","_ref47$networkRequest","_ref47$networkRespons","_ref47$mask","mask","_ref47$maskAttributes","maskAttributes","_ref47$unmask","unmask","_ref47$block","block","_ref47$unblock","unblock","_ref47$ignore","ignore","maskFn","privacyOptions","_ref45","getPrivacyOptions","password","_ref46","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","__initStatic","_proto19","_this31","_setup","_initialize","getReplayId","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","getIntegrationByName","DSN_REGEX","dsnFromComponents","components","makeDsn","_match$slice","_match$slice$","_match$slice$2","projectMatch","dsnFromString","createEnvelope","forEachEnvelopeItem","envelopeItem","encodeUTF8","serializeEnvelope","envHeaders","append","itemHeaders","stringifiedPayload","totalLength","merged","offset","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","statsd","envelopeItemTypeToDataCategory","SentryError","logLevel","ReferenceError","_assertThisInitialized","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_metadata","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","encodeURIComponent","_encodedAuth","createMetricEnvelope","metricBucketItems","tagEntries","maybeTags","unit","metricType","serializeMetricBuckets","createMetricEnvelopeItem","BaseClient","_integrationsInitialized","_numProcessing","_outcomes","_dsn","_transport","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","capturedSpanScope","sendSession","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","forceInitialize","_setupIntegrations","getIntegrationById","integrationId","integrationName","addIntegration","isAlreadyInstalled","sendEvent","newItem","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelope","promise","_sendEnvelope","createSessionEnvelope","eventOrCount","sendClientReports","captureAggregateMetrics","metricsEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","ticked","clearInterval","_prepareEvent","parentSpanId","_processEvent","finalEvent","isTransaction","beforeSendLabel","capturedSpanIsolationScope","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","transaction_info","_clearOutcomes","outcomes","_key$split","quantity","BrowserClient","_BaseClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","createTransport","makeRequest","task","$","taskProducer","drain","capturedSetTimeout","makePromiseBuffer","bufferSize","filteredEnvelopeItems","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","subMatch","_extractSafariExtensi","extractSafariExtensionDetails","_extractSafariExtensi2","isSafariExtension","isSafariWebExtension","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","_hub$getStackTop","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","injectionPoint","severityLevelFromString","CaptureConsole","levels","consoleHandler","Replay","Sentry","createClient","config","_event$user","scrubEmails","showFeedback","getUserData","tracesSampleRate","captureConsole","nameAttr","userData","_app$session","_userData","userId"],"sourceRoot":""}