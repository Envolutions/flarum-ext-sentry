{"version":3,"file":"forum.replay.js","mappings":"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","sources":["webpack://@fof/sentry/../../src/node.ts","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/harmony module decorator","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/webpack/runtime/make namespace object","webpack://@fof/sentry/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/sentry/../../src/debug-build.ts","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@fof/sentry/../../../src/buildPolyfills/_optionalChain.ts","webpack://@fof/sentry/../../../src/utils/isSentryRequestUrl.ts","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../src/isBrowser.ts","webpack://@fof/sentry/../../../src/common/debug-build.ts","webpack://@fof/sentry/../../../src/browser/types.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getActivationStart.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/onHidden.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/observe.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getLCP.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/initMetric.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/generateUniqueID.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/bindReporter.ts","webpack://@fof/sentry/../../../src/browser/instrument.ts","webpack://@fof/sentry/../../../src/constants.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","webpack://@fof/sentry/../../../src/buildPolyfills/_nullishCoalesce.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","webpack://@fof/sentry/../../../src/types/rrweb.ts","webpack://@fof/sentry/../../../src/util/timestamp.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addBreadcrumbEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/domUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/onWindowOpen.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleClick.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../src/util/createBreadcrumb.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/getAttributesToRecord.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleDom.ts","webpack://@fof/sentry/../../../src/util/createPerformanceEntries.ts","webpack://@fof/sentry/../../../src/coreHandlers/performanceObserver.ts","webpack://@fof/sentry/../../../src/debug-build.ts","webpack://@fof/sentry/../../../src/util/log.ts","webpack://@fof/sentry/../../../src/eventBuffer/error.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferArray.ts","webpack://@fof/sentry/../../../src/eventBuffer/WorkerHandler.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferCompressionWorker.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferProxy.ts","webpack://@fof/sentry/../../../src/util/hasSessionStorage.ts","webpack://@fof/sentry/../../../src/util/isSampled.ts","webpack://@fof/sentry/../../../src/session/Session.ts","webpack://@fof/sentry/../../../src/session/saveSession.ts","webpack://@fof/sentry/../../../src/session/createSession.ts","webpack://@fof/sentry/../../../src/util/isExpired.ts","webpack://@fof/sentry/../../../src/util/isSessionExpired.ts","webpack://@fof/sentry/../../../src/session/shouldRefreshSession.ts","webpack://@fof/sentry/../../../src/session/loadOrCreateSession.ts","webpack://@fof/sentry/../../../src/session/fetchSession.ts","webpack://@fof/sentry/../../../src/util/addEvent.ts","webpack://@fof/sentry/../../../src/util/eventUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleAfterSendEvent.ts","webpack://@fof/sentry/../../../src/util/createPerformanceSpans.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/shouldFilterRequest.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/networkUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/fetchUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/xhrUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleFetch.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleXhr.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleScope.ts","webpack://@fof/sentry/../../../src/util/addGlobalListeners.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleHistory.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleGlobalEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/isRrwebError.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleBeforeSendEvent.ts","webpack://@fof/sentry/../../../src/util/addMemoryEntry.ts","webpack://@fof/sentry/../../../src/util/handleRecordingEmit.ts","webpack://@fof/sentry/../../../src/util/createReplayEnvelope.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/../../../src/util/prepareRecordingData.ts","webpack://@fof/sentry/../../../src/util/prepareReplayEvent.ts","webpack://@fof/sentry/../../../src/util/sendReplayRequest.ts","webpack://@fof/sentry/../../../src/util/sendReplay.ts","webpack://@fof/sentry/../../../src/util/throttle.ts","webpack://@fof/sentry/../../../src/replay.ts","webpack://@fof/sentry/../../../src/util/debounce.ts","webpack://@fof/sentry/../../../src/session/clearSession.ts","webpack://@fof/sentry/../../src/semanticAttributes.ts","webpack://@fof/sentry/../../../src/eventBuffer/index.ts","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/index.js","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/worker.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleKeyboardEvent.ts","webpack://@fof/sentry/../../../src/util/getPrivacyOptions.ts","webpack://@fof/sentry/../../../src/integration.ts","webpack://@fof/sentry/../../../src/util/maskAttribute.ts","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","export const SDK_VERSION = '7.119.1';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { addBreadcrumb } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nexport function logInfo(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nexport function logInfoNextTick(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message: string): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\n\nimport {\n  BrowserClient,\n  defaultStackParser,\n  getCurrentHub,\n  makeFetchTransport,\n  showReportDialog,\n  Breadcrumbs,\n  GlobalHandlers,\n  InboundFilters,\n  FunctionToString,\n  LinkedErrors,\n  HttpContext,\n  TryCatch,\n  BrowserTracing,\n  Replay,\n} from '@sentry/browser';\n\nimport { CaptureConsole } from '@sentry/integrations';\n\nconst integrations = [\n  new InboundFilters(),\n  new FunctionToString(),\n  new TryCatch(),\n  new GlobalHandlers({\n    onerror: true,\n    onunhandledrejection: true,\n  }),\n  new Breadcrumbs({\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n  }),\n  new LinkedErrors({\n    key: 'cause',\n    limit: 5,\n  }),\n  new HttpContext(),\n];\n\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\n\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\n\nconst createClient = (config) =>\n  new BrowserClient({\n    dsn: config.dsn,\n\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n\n    beforeSend: (event) => {\n      event.logger = 'javascript';\n\n      if (config.scrubEmails && event.user?.email) {\n        delete event.user.email;\n      }\n\n      if (config.showFeedback && event.exception) {\n        showReportDialog({ eventId: event.event_id, user: Sentry.getUserData('name') });\n      }\n\n      return event;\n    },\n\n    tracesSampleRate: config.tracesSampleRate,\n    replaysSessionSampleRate: config.replaysSessionSampleRate,\n    replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n\n    integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean),\n  });\n\nwindow.Sentry = { createClient, getCurrentHub, showReportDialog };\n\nwindow.Sentry.getUserData = (nameAttr = 'username') => {\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username(),\n      };\n\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId,\n      };\n    }\n  }\n\n  return userData;\n};\n\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});\n"],"names":["isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","_typeof","require","_regeneratorRuntime","module","exports","__esModule","Op","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","n","getter","d","a","definition","o","get","g","e","window","hmd","children","set","prop","r","flarum","core","compat","DEBUG_BUILD","__SENTRY_DEBUG__","isGlobalObj","Math","GLOBAL_OBJ","global","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","enabled","logger","enable","disable","isEnabled","_len","arguments","args","Array","_key","_GLOBAL_OBJ$console","apply","PREFIX","concat","_extends","assign","bind","target","source","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","DEFAULT_MAX_STRING_LENGTH","htmlTreeAsString","elem","options","nextStr","currentElem","out","height","len","keyAttrs","isArray","maxStringLength","_htmlElementAsString","separator","parentNode","join","_oO","el","classes","attr","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","truncate","str","max","safeJoin","input","delimiter","output","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","o_O","log","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","isPojo","memoVal","returnValue","_i","_Object$keys","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","c","getFirstException","event","getEventDescription","eventId","event_id","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","_proto","onfulfilled","onrejected","_this","_executeHandlers","onfinally","_this2","isRejected","_this3","_setResult","RESOLVED","_this4","REJECTED","_this5","_value","_this6","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","ONE_SECOND_IN_MS","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","DEFAULT_ENVIRONMENT","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","updateSession","session","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","inner","WeakSet","has","add","splice","_memo","memoize","unmemoize","stringified","_events","document","isSyntheticEvent","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","TRACE_FLAG_SAMPLED","spanToTraceContext","span","_span$spanContext","spanContext","span_id","spanId","trace_id","traceId","_spanToJSON","spanToJSON","op","parent_span_id","tags","origin","getSpanJSON","spanIsSpanClass","debugIdStackParserCache","WeakMap","captureContextKeys","captureEvent","getCurrentHub","addBreadcrumb","breadcrumb","getClient","getRootSpan","transaction","getDynamicSamplingContextFromClient","client","scope","getOptions","public_key","getDsn","publicKey","user_segment","getUser","segment","dsc","emit","getDynamicSamplingContextFromSpan","getScope","txn","v7FrozenDsc","_frozenDynamicSamplingContext","_txn$metadata","metadata","maybeSampleRate","sampleRate","sample_rate","jsonSpan","description","sampled","traceFlags","spanIsSampled","applyScopeDataToEvent","fingerprint","breadcrumbs","sdkProcessingMetadata","extra","contexts","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","trace","rootSpan","dynamicSamplingContext","applySpanToEvent","maybeArray","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","eventProcessors","attachments","propagationContext","mergeAndOverwriteScopeData","mergeVal","globalScope","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","clone","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","_extends2","setExtras","extras","setExtra","_extends3","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","update","captureContext","scopeToMerge","scopeData","getScopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","captureException","warn","syntheticException","originalException","captureMessage","substring","SDK_VERSION","API_VERSION","parseFloat","Hub","isolationScope","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","_this$getStackTop","_ref","_ref$beforeBreadcrumb","beforeBreadcrumb","_ref$maxBreadcrumbs","finalBreadcrumb","configureScope","_this$getStackTop2","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","_this$getStackTop3","_ref2","_ref2$environment","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","_this$getStackTop4","sentry","getMainCarrier","extensions","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","integrations","_step","_iterator","_createForOfIteratorHelperLoose","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","processEvent","convertIntegrationFnToClass","originalFunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","lastException","possibleMessages","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","frames","stacktrace","frame","filename","_getLastValidUrl","oO","SETUP_CLIENTS","functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","setTimeout","rest","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","instrumentError","onerror","msg","line","column","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","normalizeDepth","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","_getOptions","groups","match","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","globalHandlerLog","_getOptions2","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","DEBOUNCE_DURATION","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","_parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","instrumentHistory","isChromePackagedApp","chromeVar","chrome","app","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","to","from","historyReplacementFunction","originalHistoryFunction","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","MAX_ALLOWED_STRING_LENGTH","breadcrumbsIntegration","dom","category","_getConsoleBreadcrumbHandler","addClickKeypressInstrumentationHandler","componentName","serializeAttribute","element","_isEvent","getComponentName","_getDomBreadcrumbHandler","addXhrInstrumentationHandler","_getXhrBreadcrumbHandler","addFetchInstrumentationHandler","_getFetchBreadcrumbHandler","addHistoryInstrumentationHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","maxValueLength","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","request","referrer","headers","Referer","HttpContext","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_defineProperties","props","descriptor","prim","toPrimitive","_createClass","Constructor","protoProps","staticProps","_setPrototypeOf","p","_inheritsLoose","subClass","superClass","_getPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","valueOf","isNativeReflectConstruct","instance","_wrapNativeSuper","_cache","Wrapper","_optionalChain","ops","lastAccessLHS","browserPerformanceTimeOrigin","makeLogger","getCurrentScope","prepareEvent","_options$normalizeDep","_options$normalizeMax","normalizeMaxBreadth","prepared","dist","_options$maxValueLeng","applyClientOptions","integrationNames","sdk","applyIntegrationsMetadata","debugIdStackFramesCache","debugIdMap","_sentryDebugIds","cachedDebugIdStackFrameCache","filenameDebugIdMap","reduce","acc","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","b","spans","normalizeEvent","removeTrailingSlash","dsnToString","dsn","withPassword","pass","port","projectId","DEFAULT_RETRY_AFTER","updateRateLimits","limits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","_limit$split","retryAfter","categories","namespaces","headerDelay","delay","_step2","_iterator2","all","headerDate","parse","parseRetryAfterHeader","isBrowser","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","navigation","navigationEntry","entryType","startTime","getNavigationEntryFromPerformanceTiming","getActivationStart","navEntry","activationStart","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","firstHiddenTime","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","getEntries","buffered","reportedMetricIDs","onLCP","onReport","navigationType","report","visibilityWatcher","prerendering","Infinity","timeStamp","metric","rating","delta","entries","floor","handleEntries","lastEntry","reportAllChanges","prevValue","forceReport","bindReporter","stopListening","takeRecords","disconnect","capture","_previousLcp","instrumentLcp","getCleanupCallback","NodeType$1","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","RETRY_BASE_INTERVAL","RETRY_MAX_COUNT","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MAX_REPLAY_DURATION","_optionalChain$5","_value2","isShadowRoot","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","s","rules","cssRules","cssText","stringifyRule","rule","importStringified","regex","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","node","meta","oldNode","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","canvasService","canvasCtx","_id","tagNameRegex","RegExp","IGNORED_NODE","genId","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","parts","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","isSVGElement","ownerSVGElement","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","exec","descriptorsStr","inParens","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","selector","matches","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","_options$skipChild","skipChild","_options$inlineStyles","inlineStylesheet","_options$maskInputOpt3","maskTextFn","slimDOMOptions","_options$dataURLOptio3","dataURLOptions","_options$inlineImages","inlineImages","_options$recordCanvas","recordCanvas","onSerialize","onIframeLoad","_options$iframeLoadTi","iframeLoadTimeout","onStylesheetLoad","_options$stylesheetLo","stylesheetLoadTimeout","_options$keepIframeSr","keepIframeSrcFn","_options$newlyAddedEl3","newlyAddedElement","_options$preserveWhit","preserveWhiteSpace","_serializedNode","_options$maskInputOpt","_options$dataURLOptio","_options$newlyAddedEl","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","isCustomElement","_options$maskInputOpt2","_options$dataURLOptio2","_options$newlyAddedEl2","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","attributes","stylesheet","styleSheets","find","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","ctx","getContext","x","width","y","getImageData","originalGetImageData","Uint32Array","min","buffer","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","oldValue","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","_n$getBoundingClientR","getBoundingClientRect","rr_width","rr_height","src","contentDocument","rr_src","customElements","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","endsWith","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","_Array$from","serializedChildNode","isElement$1","_i2","_Array$from2","isShadow","iframeEl","win","fired","blankUrl","timer","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","_value3","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","timeout","previous","leading","remaining","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","getTime","StyleSheetMirror","styleIDMap","idStyleMap","_proto2","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","cachedImplementations","cached","impl","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_value4","_len5","_key5","isNodeInLinkedList","errorHandler","DoubleLinkedList","tail","_proto3","position","current","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","_step3","_iterator3","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","m","attributeName","isInputMasked","setAttribute","unattachedDoc","implementation","createHTMLDocument","old","_i3","_Array$from3","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","_i4","_Array$from4","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","childN","_proto4","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","size","_isAncestorInSet","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_value6","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","_ref7","scrollCb","sampling","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref10","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","v","lastInputValue","currentWindow","h","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref15","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_this7","_15","_16","adoptStyleSheets","initObservers","_hooks","_ref9","viewportResizeCb","lastH","lastW","_step4","mutationObserver","mousemoveHandler","_ref4","mousemoveCb","mousemove","timeBaseline","callbackThreshold","mousemoveCallback","positions","wrappedCb","totalOffset","timeOffset","updatePosition","_ref5","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","_ref6","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","Number","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","_ref18","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref11","_ref12","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","_getIdAndStyleId","replaceSync","deleteRule","_getIdAndStyleId2","_getIdAndStyleId3","_getIdAndStyleId4","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref13","typeKey","_getIdAndStyleId5","_getIdAndStyleId6","_ref14","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref16","_ref17","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_getIdAndStyleId7","_17","removeProperty","_getIdAndStyleId8","remove","initStyleDeclarationObserver","fontObserver","collectFonts","_ref19","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","count","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","start","end","initSelectionObserver","customElementObserver","_ref20","customElementCb","initCustomElementObserver","pluginHandlers","_iterator4","plugins","plugin","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","_proto5","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","_this8","getRemoteId","getRemoteIds","ids","_this9","_optionalChain$1","_value7","_len7","_key7","wrappedEmit","_takeFullSnapshot","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","_proto6","addLoadListener","IframeManager","iframes","crossOriginIframeMap","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","_proto7","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","_this10","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","_step5","_iterator5","_this11","child","_this12","ShadowDomManagerNoop","_proto8","ShadowDomManager","shadowDoms","restoreHandlers","_proto9","patchAttachShadow","_this13","iframeElement","manager","option","CanvasManagerNoop","_proto10","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","_proto11","linkEl","trackStylesheetInLinkElement","_step6","adoptedStyleSheetData","styleIds","_iterator6","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","_proto12","_this14","onRequestAnimationFrame","thisBuffer","buffers","destroy","checkoutEveryNms","checkoutEveryNth","_options$blockClass","_options$blockSelecto","_options$unblockSelec","_options$ignoreClass","_options$ignoreSelect","_options$maskAllText","_options$maskTextClas","_options$unmaskTextCl","_options$maskTextSele","_options$unmaskTextSe","_options$inlineStyles2","maskAllInputs","_maskInputOptions","_slimDOMOptions","_options$maxCanvasSiz","maxCanvasSize","packFn","_options$sampling","_options$dataURLOptio4","mousemoveWait","_options$recordCanvas2","_options$recordCrossO","_options$recordAfter","recordAfter","_options$userTriggere","_options$collectFonts","_options$inlineImages2","_options$keepIframeSr2","_options$ignoreCSSAtt","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","lastFullSnapshotEvent","color","date","month","number","tel","time","week","select","radio","checkbox","NodeList","DOMTokenList","polyfill","incrementalSnapshotCount","eventProcessor","_step7","_iterator7","buf","postMessage","exceedCount","exceedTime","takeFullSnapshot","_step8","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","_iterator8","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","_ref3","_ref3$mirror","_ref3$blockClass","_ref3$blockSelector","_ref3$unblockSelector","_ref3$maskAllText","_ref3$maskTextClass","_ref3$unmaskTextClass","_ref3$maskTextSelecto","_ref3$unmaskTextSelec","_ref3$inlineStyleshee","_ref3$inlineImages","_ref3$recordCanvas","_ref3$maskAllInputs","_ref3$slimDOM","slimDOM","_ref3$keepIframeSrcFn","initialOffset","canvasMutationCb","CustomElement","ReplayEventTypeIncrementalSnapshot","timestampToMs","timestampToS","addBreadcrumbEvent","replay","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","tag","INTERACTIVE_SELECTOR","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","_proto13","addListeners","_this15","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_len8","_key8","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","click","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","_this16","timedOutClicks","mutationAfter","scrollAfter","_i5","_timedOutClicks","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","_this17","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","initiatorType","responseEnd","decodedBodySize","encodedBodySize","responseStatus","transferSize","getAbsoluteTime","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","setupPerformanceObserver","addPerformanceEntry","performanceEntries","onEntries","_ref21","stopOnCallback","clearCallbacks","durationThreshold","instrumentPerformanceObserver","addPerformanceInstrumentationHandler","previousValue","addMetricObserver","_ref22","replayPerformanceEntries","getLargestContentfulPaint","clearCallback","logInfo","shouldAddBreadcrumb","addLogBreadcrumb","logInfoNextTick","EventBufferSizeExceededError","_Error","EventBufferArray","events","_totalSize","hasCheckout","_proto14","addEvent","_addEvent2","_callee","eventSize","_context2","_x","_this18","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","_proto15","ensureReady","_this19","_ensureReadyPromise","_ref23","success","terminate","_this20","_getAndIncrementId","_ref24","EventBufferCompressionWorker","_earliestTimestamp","_proto16","_sendEventToWorker","_finishRequest","_finishRequest2","_callee2","_context3","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","_proto17","_finish","_callee3","_context4","ensureWorkerIsLoaded","_ensureWorkerIsLoaded2","_callee4","_context5","t0","_switchToCompressionWorker","_switchToCompressionWorker2","_callee5","_this$_fallback","addEventPromises","_iterator9","_step9","_context6","hasEvents","hasSessionStorage","sessionStorage","isSampled","lastActivity","segmentId","previousSessionId","saveSession","setItem","createSession","_ref26","_temp","sessionSampleRate","allowBuffering","_ref26$stickySession","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref28","maxReplayDuration","sessionIdleExpire","_ref28$targetTime","shouldRefreshSession","_ref29","loadOrCreateSession","_ref30","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","sessionObj","fetchSession","addEventSync","shouldAddEvent","_addEvent","_x2","_x3","_x4","_addEvent3","_callee11","replayOptions","eventAfterPossibleCallback","_context12","eventBuffer","recordingMode","maybeApplyCallback","beforeAddRecordingEvent","recordDroppedEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","_experiments","isCustomEvent","isTransactionEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","transport","getTransport","send","__sentry__baseTransport__","isBaseTransportSend","sendResponse","replayContext","traceIds","handleTransactionEvent","errorIds","replayId","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","createPerformanceSpans","_ref31","addNetworkBreadcrumb","hubOrClient","isHub","tunnel","checkDsn","checkTunnel","isSentryRequestUrl","shouldFilterRequest","getBodySize","textEncoder","encode","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","_normalizeNetworkBody","first","last","exceedsSizeLimit","isProbablyJson","truncatedBody","e3","normalizeNetworkBody","normalizedBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","urls","fullUrl","baseURI","fixedUrl","URL","getFullUrl","_captureFetchBreadcrumbToReplay","_callee12","_context13","_prepareFetchData","_x8","_x9","_x10","_prepareFetchData2","_callee13","_hint$startTimestamp2","_hint$endTimestamp2","_breadcrumb$data2","_breadcrumb$data2$sta","requestBodySize","responseBodySize","captureDetails","_context14","request_body_size","response_body_size","networkDetailAllowUrls","networkDetailDenyUrls","_getRequestInfo","_getResponseInfo","_ref32","networkCaptureBodies","networkRequestHeaders","getHeadersFromOptions","_getBodyString","_getFetchRequestArgBody","bodyStr","_x11","_x12","_x13","_x14","_getResponseInfo2","_callee14","_ref33","networkResponseHeaders","_yield$_parseFetchRes","bodyText","_context15","getAllHeaders","_parseFetchResponseBody","getResponseData","_ref34","_x15","_parseFetchResponseBody2","_callee15","_context16","_tryCloneResponse","_tryGetResponseText","allHeaders","_x16","_getResponseText2","_getResponseText","txt","_callee16","_context17","_captureXhrBreadcrumbToReplay","_callee17","_context18","_prepareXhrData","_hint$startTimestamp","_hint$endTimestamp","_breadcrumb$data","_breadcrumb$data$stat","getAllResponseHeaders","_line$split","getResponseHeaders","_ref35","requestBody","requestWarning","_ref36","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","responseBody","responseWarning","handleNetworkBreadcrumbs","TextEncoder","_replay$getOptions2","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","_getBodySize","enrichXhrBreadcrumb","_x17","_x18","_x19","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","_x5","_x6","_x7","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","handleXhr","handleXhrSpanListener","_LAST_BREADCRUMB","addGlobalListeners","newBreadcrumb","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","handleScopeListener","_getDomTarget","isClick","getDomTarget","handleDom","clickDetector","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","includeAfterSendEventHandling","afterSendHandler","isReplayEvent","flush","feedback","replay_id","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","handleGlobalEventListener","hasHooks","exceptionValue","handleHydrationError","handleBeforeSendEvent","lastTransaction","feedbackEvent","includeReplay","addMemoryEntry","_x20","_addMemoryEntry","_callee18","_context19","memoryEntry","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","getHandleRecordingEmit","hadFirstEvent","_isCheckout","isIncrementalEvent","isIncrementalMouseInteraction","_event$data","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","createReplayEnvelope","replayEvent","recordingData","sdkInfo","sent_at","createEventEnvelopeHeaders","metadataOrEvent","_metadataOrEvent$sdk","getSdkMetadataForEnvelopeHeader","items","prepareRecordingData","_ref37","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","_x21","_prepareReplayEvent","_callee19","_ref38","eventHint","preparedEvent","_ref48","_context20","_integrations","platform","getSdkMetadata","sendReplayRequest","_x22","_sendReplayRequest","_callee20","_ref39","segment_id","eventContext","preparedRecordingData","baseEvent","envelope","rateLimits","_context21","replay_start_timestamp","error_ids","trace_ids","replay_type","cause","TransportStatusCodeError","isRateLimited","dataCategory","disabledUntil","RateLimitError","_Error2","_Error3","_this21","sendReplay","_x23","_x24","_sendReplay","_callee22","replayData","retryConfig","_context23","interval","_retryCount","_callee21","_context22","THROTTLED","ReplayContainer","_ref40","_this22","recordingOptions","__init5","__init6","_lastActivity","_isEnabled","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","cancel","debounce","_flush","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","wasThrottled","throttle","_this$getOptions","slowClickTimeout","slowClickIgnoreSelectors","_proto18","_canvas","initializeSampling","_this$_options","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","_stop","_callee6","_temp2","_ref41","_ref41$forceFlush","forceFlush","_context7","_removeListeners","force","removeItem","deleteSession","_x25","pause","resume","_checkSession","_sendBufferedReplayOrFlush","_callee7","_temp3","_ref42$continueRecord","continueRecording","activityTime","hasStoppedRecording","_context8","flushImmediate","_updateSessionActivity","_maybeSaveSession","_x26","cbResult","updateUserActivity","conditionalFlush","cancelFlush","urlPath","pathname","_clearContext","_this23","_ref25","customWorkerUrl","workerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","_refreshSession","_refreshSession2","_callee8","_context9","_x27","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_performanceCleanupCallback","_this24","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","_this25","_this26","_this27","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_this28","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","_runFlush2","_callee9","_context10","_this29","_ref43","_callee10","_temp4","_ref44$force","tooShort","tooLong","_context11","minReplayDuration","_flushLock","_x28","_this30","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay$1","_temp5","_ref47","_ref47$flushMinDelay","_ref47$flushMaxDelay","_ref47$minReplayDurat","_ref47$maxReplayDurat","_ref47$stickySession","_ref47$useCompression","_ref47$_experiments","_ref47$maskAllText","_ref47$maskAllInputs","_ref47$blockAllMedia","_ref47$mutationBreadc","_ref47$mutationLimit","_ref47$slowClickTimeo","_ref47$slowClickIgnor","_ref47$networkDetailA","_ref47$networkDetailD","_ref47$networkCapture","_ref47$networkRequest","_ref47$networkRespons","_ref47$mask","mask","_ref47$maskAttributes","maskAttributes","_ref47$unmask","unmask","_ref47$block","block","_ref47$unblock","unblock","_ref47$ignore","ignore","maskFn","privacyOptions","_ref45","getPrivacyOptions","password","_ref46","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","__initStatic","_proto19","_this31","_setup","_initialize","getReplayId","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","getIntegrationByName","DSN_REGEX","dsnFromComponents","components","makeDsn","_match$slice","_match$slice$","_match$slice$2","projectMatch","dsnFromString","component","isValidProtocol","validateDsn","createEnvelope","forEachEnvelopeItem","envelopeItem","encodeUTF8","serializeEnvelope","envHeaders","append","itemHeaders","stringifiedPayload","totalLength","merged","offset","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","statsd","envelopeItemTypeToDataCategory","SentryError","logLevel","ReferenceError","_assertThisInitialized","SENTRY_API_VERSION","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_metadata","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","encodeURIComponent","_encodedAuth","createMetricEnvelope","metricBucketItems","tagEntries","maybeTags","unit","metricType","serializeMetricBuckets","createMetricEnvelopeItem","ALREADY_SEEN_ERROR","BaseClient","_integrationsInitialized","_numProcessing","_outcomes","_dsn","_transport","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","capturedSpanScope","sendSession","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","forceInitialize","_setupIntegrations","getIntegrationById","integrationId","integrationName","addIntegration","isAlreadyInstalled","sendEvent","newItem","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelope","promise","_sendEnvelope","createSessionEnvelope","eventOrCount","sendClientReports","captureAggregateMetrics","metricsEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","ticked","clearInterval","_prepareEvent","parentSpanId","_processEvent","finalEvent","sentryError","isTransaction","beforeSendLabel","capturedSpanIsolationScope","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","transaction_info","_clearOutcomes","outcomes","_key$split","quantity","BrowserClient","_BaseClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","task","$","taskProducer","drain","capturedSetTimeout","makePromiseBuffer","bufferSize","filteredEnvelopeItems","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","subMatch","_extractSafariExtensi","extractSafariExtensionDetails","_extractSafariExtensi2","isSafariExtension","isSafariWebExtension","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","_hub$getStackTop","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","injectionPoint","severityLevelFromString","CaptureConsole","levels","consoleHandler","Replay","Sentry","createClient","config","_event$user","scrubEmails","showFeedback","getUserData","tracesSampleRate","captureConsole","nameAttr","userData","_app$session","_userData","userId"],"sourceRoot":""}